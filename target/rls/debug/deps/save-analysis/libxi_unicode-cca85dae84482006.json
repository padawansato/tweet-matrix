{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0","program":"/Users/padawan_e15/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","xi_unicode","--edition=2018","/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=cca85dae84482006","-C","extra-filename=-cca85dae84482006","--out-dir","/Users/padawan_e15/ghq/github.com/meganehouser/rustmatrix/target/rls/debug/deps","-L","dependency=/Users/padawan_e15/ghq/github.com/meganehouser/rustmatrix/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/padawan_e15/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/padawan_e15/ghq/github.com/meganehouser/rustmatrix/target/rls/debug/deps/libxi_unicode-cca85dae84482006.rmeta"},"prelude":{"crate_id":{"name":"xi_unicode","disambiguator":[3671867108605708148,9405132827845497511]},"crate_root":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src","external_crates":[{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[2450264148744425324,10050667756610945632]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5216882650067454300,803391174261596525]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5321725740897068604,14247691274753233016]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15008236376303079999,8121662539630509915]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12920482519877858869,7783732174216732460]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12220061461292827086,10995062625150216334]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4557698817887729143,15105021759844686565]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9270263569388356812,1031064821649785583]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17403927150379973007,17129611224880441426]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8342530726152111216,8633669874212043972]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16317838093811012662,7640540080182738814]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11516351311229957058,6496694232360362766]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15319259245696541708,12758538875610414082]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13027830824513170433,9319164864677654917]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[6239108798947591245,16929767405147073453]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[9689407603164028381,5815853528255048552]}}],"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":600,"byte_end":27053,"line_start":15,"line_end":580,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":600,"byte_end":27053,"line_start":15,"line_end":580,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":60},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":8},{"krate":0,"index":12},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":15},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":32},{"krate":0,"index":41}],"decl_id":null,"docs":" Unicode utilities useful for text editing, including a line breaking iterator.\n","sig":null,"attributes":[{"value":"/ Unicode utilities useful for text editing, including a line breaking iterator.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":600,"byte_end":682,"line_start":15,"line_end":15,"column_start":1,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":6},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":726,"byte_end":744,"line_start":20,"line_end":20,"column_start":8,"column_end":26},"name":"linebreak_property","qualname":"::linebreak_property","value":"pub fn linebreak_property(char) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":1291,"byte_end":1313,"line_start":36,"line_end":36,"column_start":8,"column_end":30},"name":"linebreak_property_str","qualname":"::linebreak_property_str","value":"pub fn linebreak_property_str(&str, usize) -> (u8, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":60},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":2569,"byte_end":2586,"line_start":63,"line_end":63,"column_start":12,"column_end":29},"name":"LineBreakIterator","qualname":"::LineBreakIterator","value":"LineBreakIterator {  }","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64}],"decl_id":null,"docs":" An iterator which produces line breaks according to the UAX 14 line\n breaking algorithm. For each break, return a tuple consisting of the offset\n within the source string and a bool indicating whether it's a hard break.\n","sig":null,"attributes":[{"value":"/ An iterator which produces line breaks according to the UAX 14 line","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":2305,"byte_end":2376,"line_start":59,"line_end":59,"column_start":1,"column_end":72}},{"value":"/ breaking algorithm. For each break, return a tuple consisting of the offset","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":2377,"byte_end":2456,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ within the source string and a bool indicating whether it's a hard break.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":2457,"byte_end":2534,"line_start":61,"line_end":61,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":3812,"byte_end":3815,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<LineBreakIterator>::new","value":"pub fn new(&str) -> LineBreakIterator","parent":null,"children":[],"decl_id":null,"docs":" Create a new iterator for the given string slice.\n","sig":null,"attributes":[{"value":"/ Create a new iterator for the given string slice.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":3747,"byte_end":3800,"line_start":100,"line_end":100,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":70},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":4793,"byte_end":4810,"line_start":124,"line_end":124,"column_start":12,"column_end":29},"name":"LineBreakLeafIter","qualname":"::LineBreakLeafIter","value":"LineBreakLeafIter {  }","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"decl_id":null,"docs":" A class (TODO, not right word) useful for computing line breaks in a rope or\n other non-contiguous string representation. This is a trickier problem than\n iterating in a string for a few reasons, the trickiest of which is that in\n the general case, line breaks require an indeterminate amount of look-behind.","sig":null,"attributes":[{"value":"/ A class (TODO, not right word) useful for computing line breaks in a rope or","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":4195,"byte_end":4275,"line_start":115,"line_end":115,"column_start":1,"column_end":81}},{"value":"/ other non-contiguous string representation. This is a trickier problem than","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":4276,"byte_end":4355,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/ iterating in a string for a few reasons, the trickiest of which is that in","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":4356,"byte_end":4434,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ the general case, line breaks require an indeterminate amount of look-behind.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":4435,"byte_end":4516,"line_start":118,"line_end":118,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":4517,"byte_end":4520,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ This is something of an \"expert-level\" interface, and should only be used if","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":4521,"byte_end":4601,"line_start":120,"line_end":120,"column_start":1,"column_end":81}},{"value":"/ the caller is prepared to respect all the invariants. Otherwise, you might","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":4602,"byte_end":4680,"line_start":121,"line_end":121,"column_start":1,"column_end":79}},{"value":"/ get inconsistent breaks depending on start positiona and leaf boundaries.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":4681,"byte_end":4758,"line_start":122,"line_end":122,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":5280,"byte_end":5283,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<LineBreakLeafIter>::new","value":"pub fn new(&str, usize) -> LineBreakLeafIter","parent":null,"children":[],"decl_id":null,"docs":" Create a new line break iterator suitable for leaves in a rope.\n Precondition: ix is at a code point boundary within s.\n","sig":null,"attributes":[{"value":"/ Create a new line break iterator suitable for leaves in a rope.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":5138,"byte_end":5205,"line_start":138,"line_end":138,"column_start":5,"column_end":72}},{"value":"/ Precondition: ix is at a code point boundary within s.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":5210,"byte_end":5268,"line_start":139,"line_end":139,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":6133,"byte_end":6137,"line_start":155,"line_end":155,"column_start":12,"column_end":16},"name":"next","qualname":"<LineBreakLeafIter>::next","value":"pub fn next(&mut Self, &str) -> (usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Return break pos and whether it's a hard break. Note: hard break\n indication may go away, this may not be useful in actual application.\n If end of leaf is found, return leaf's len. This does not indicate\n a break, as that requires at least one more codepoint of context.\n If it is a break, then subsequent next call will return an offset of 0.\n EOT is always a break, so in the EOT case it's up to the caller\n to figure that out.","sig":null,"attributes":[{"value":"/ Return break pos and whether it's a hard break. Note: hard break","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":5484,"byte_end":5552,"line_start":145,"line_end":145,"column_start":5,"column_end":73}},{"value":"/ indication may go away, this may not be useful in actual application.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":5557,"byte_end":5630,"line_start":146,"line_end":146,"column_start":5,"column_end":78}},{"value":"/ If end of leaf is found, return leaf's len. This does not indicate","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":5635,"byte_end":5705,"line_start":147,"line_end":147,"column_start":5,"column_end":75}},{"value":"/ a break, as that requires at least one more codepoint of context.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":5710,"byte_end":5779,"line_start":148,"line_end":148,"column_start":5,"column_end":74}},{"value":"/ If it is a break, then subsequent next call will return an offset of 0.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":5784,"byte_end":5859,"line_start":149,"line_end":149,"column_start":5,"column_end":80}},{"value":"/ EOT is always a break, so in the EOT case it's up to the caller","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":5864,"byte_end":5931,"line_start":150,"line_end":150,"column_start":5,"column_end":72}},{"value":"/ to figure that out.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":5936,"byte_end":5959,"line_start":151,"line_end":151,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":5964,"byte_end":5967,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ For consistent results, always supply same `s` until end of leaf is","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":5972,"byte_end":6043,"line_start":153,"line_end":153,"column_start":5,"column_end":76}},{"value":"/ reached (and initially this should be the same as in the `new` call).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":6048,"byte_end":6121,"line_start":154,"line_end":154,"column_start":5,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":7348,"byte_end":7369,"line_start":195,"line_end":195,"column_start":8,"column_end":29},"name":"is_variation_selector","qualname":"::is_variation_selector","value":"pub fn is_variation_selector(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":23},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":7485,"byte_end":7493,"line_start":199,"line_end":199,"column_start":11,"column_end":19},"name":"EmojiExt","qualname":"::EmojiExt","value":"EmojiExt","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":7503,"byte_end":7531,"line_start":200,"line_end":200,"column_start":8,"column_end":36},"name":"is_regional_indicator_symbol","qualname":"::EmojiExt::is_regional_indicator_symbol","value":"pub fn is_regional_indicator_symbol(Self) -> bool","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":7554,"byte_end":7571,"line_start":201,"line_end":201,"column_start":8,"column_end":25},"name":"is_emoji_modifier","qualname":"::EmojiExt::is_emoji_modifier","value":"pub fn is_emoji_modifier(Self) -> bool","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":7594,"byte_end":7629,"line_start":202,"line_end":202,"column_start":8,"column_end":43},"name":"is_emoji_combining_enclosing_keycap","qualname":"::EmojiExt::is_emoji_combining_enclosing_keycap","value":"pub fn is_emoji_combining_enclosing_keycap(Self) -> bool","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":7652,"byte_end":7660,"line_start":203,"line_end":203,"column_start":8,"column_end":16},"name":"is_emoji","qualname":"::EmojiExt::is_emoji","value":"pub fn is_emoji(Self) -> bool","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":7683,"byte_end":7705,"line_start":204,"line_end":204,"column_start":8,"column_end":30},"name":"is_emoji_modifier_base","qualname":"::EmojiExt::is_emoji_modifier_base","value":"pub fn is_emoji_modifier_base(Self) -> bool","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":7728,"byte_end":7744,"line_start":205,"line_end":205,"column_start":8,"column_end":24},"name":"is_tag_spec_char","qualname":"::EmojiExt::is_tag_spec_char","value":"pub fn is_tag_spec_char(Self) -> bool","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":7767,"byte_end":7786,"line_start":206,"line_end":206,"column_start":8,"column_end":27},"name":"is_emoji_cancel_tag","qualname":"::EmojiExt::is_emoji_cancel_tag","value":"pub fn is_emoji_cancel_tag(Self) -> bool","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":7809,"byte_end":7815,"line_start":207,"line_end":207,"column_start":8,"column_end":14},"name":"is_zwj","qualname":"::EmojiExt::is_zwj","value":"pub fn is_zwj(Self) -> bool","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":41},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":8661,"byte_end":8675,"line_start":237,"line_end":237,"column_start":8,"column_end":22},"name":"is_keycap_base","qualname":"::is_keycap_base","value":"pub fn is_keycap_base(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":2664,"byte_end":2681,"line_start":69,"line_end":69,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":3719,"byte_end":3736,"line_start":99,"line_end":99,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":4863,"byte_end":4880,"line_start":129,"line_end":129,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":5114,"byte_end":5131,"line_start":137,"line_end":137,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":2664,"byte_end":2681,"line_start":69,"line_end":69,"column_start":23,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":7317}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":3719,"byte_end":3736,"line_start":99,"line_end":99,"column_start":10,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":60},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":4863,"byte_end":4880,"line_start":129,"line_end":129,"column_start":18,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":70},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.0/src/lib.rs","byte_start":5114,"byte_end":5131,"line_start":137,"line_end":137,"column_start":6,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":70},"to":{"krate":4294967295,"index":4294967295}}]}