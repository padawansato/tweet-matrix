{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9","program":"/Users/padawan_e15/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","chrono","/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"clock\"","--cfg","feature=\"default\"","--cfg","feature=\"time\"","-C","metadata=374c8d55499c1a22","-C","extra-filename=-374c8d55499c1a22","--out-dir","/Users/padawan_e15/ghq/github.com/meganehouser/rustmatrix/target/rls/debug/deps","-L","dependency=/Users/padawan_e15/ghq/github.com/meganehouser/rustmatrix/target/rls/debug/deps","--extern","libc=/Users/padawan_e15/ghq/github.com/meganehouser/rustmatrix/target/rls/debug/deps/liblibc-06284cbe903075a5.rmeta","--extern","num_integer=/Users/padawan_e15/ghq/github.com/meganehouser/rustmatrix/target/rls/debug/deps/libnum_integer-28d1610863870c0c.rmeta","--extern","num_traits=/Users/padawan_e15/ghq/github.com/meganehouser/rustmatrix/target/rls/debug/deps/libnum_traits-fae1258ff1a8a47b.rmeta","--extern","time=/Users/padawan_e15/ghq/github.com/meganehouser/rustmatrix/target/rls/debug/deps/libtime-12bd2a83e43f2144.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/padawan_e15/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/padawan_e15/ghq/github.com/meganehouser/rustmatrix/target/rls/debug/deps/libchrono-374c8d55499c1a22.rmeta"},"prelude":{"crate_id":{"name":"chrono","disambiguator":[11950094903965375364,5353425415253012948]},"crate_root":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src","external_crates":[{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[2450264148744425324,10050667756610945632]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5216882650067454300,803391174261596525]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5321725740897068604,14247691274753233016]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15008236376303079999,8121662539630509915]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12920482519877858869,7783732174216732460]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12220061461292827086,10995062625150216334]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4557698817887729143,15105021759844686565]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9270263569388356812,1031064821649785583]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17403927150379973007,17129611224880441426]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8342530726152111216,8633669874212043972]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16317838093811012662,7640540080182738814]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11516351311229957058,6496694232360362766]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15319259245696541708,12758538875610414082]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13027830824513170433,9319164864677654917]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[6239108798947591245,16929767405147073453]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[9689407603164028381,5815853528255048552]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","num":17,"id":{"name":"time","disambiguator":[12234951184453053485,12376180067220483166]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","num":18,"id":{"name":"libc","disambiguator":[7942148031539919271,2690070339583370485]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","num":19,"id":{"name":"num_integer","disambiguator":[10297150511082839205,5095060516904016524]}},{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","num":20,"id":{"name":"num_traits","disambiguator":[1695597261199462963,7309038153937142499]}}],"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":76,"byte_end":37815,"line_start":4,"line_end":1002,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":17,"index":408},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19112,"byte_end":19120,"line_start":426,"line_end":426,"column_start":18,"column_end":26},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1982},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19181,"byte_end":19186,"line_start":429,"line_end":429,"column_start":35,"column_end":40},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1983},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19181,"byte_end":19186,"line_start":429,"line_end":429,"column_start":35,"column_end":40},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":191},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19223,"byte_end":19231,"line_start":430,"line_end":430,"column_start":36,"column_end":44},"alias_span":null,"name":"TimeZone","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":189},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19233,"byte_end":19239,"line_start":430,"line_end":430,"column_start":46,"column_end":52},"alias_span":null,"name":"Offset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1933},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19241,"byte_end":19252,"line_start":430,"line_end":430,"column_start":54,"column_end":65},"alias_span":null,"name":"LocalResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1989},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19254,"byte_end":19257,"line_start":430,"line_end":430,"column_start":67,"column_end":70},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1990},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19254,"byte_end":19257,"line_start":430,"line_end":430,"column_start":67,"column_end":70},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1967},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19259,"byte_end":19270,"line_start":430,"line_end":430,"column_start":72,"column_end":83},"alias_span":null,"name":"FixedOffset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2037},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19307,"byte_end":19316,"line_start":431,"line_end":431,"column_start":35,"column_end":44},"alias_span":null,"name":"NaiveDate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2056},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19318,"byte_end":19325,"line_start":431,"line_end":431,"column_start":46,"column_end":53},"alias_span":null,"name":"IsoWeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2072},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19327,"byte_end":19336,"line_start":431,"line_end":431,"column_start":55,"column_end":64},"alias_span":null,"name":"NaiveTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2089},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19338,"byte_end":19351,"line_start":431,"line_end":431,"column_start":66,"column_end":79},"alias_span":null,"name":"NaiveDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2106},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19369,"byte_end":19373,"line_start":432,"line_end":432,"column_start":16,"column_end":20},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1087},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19375,"byte_end":19383,"line_start":432,"line_end":432,"column_start":22,"column_end":30},"alias_span":null,"name":"MIN_DATE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1088},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19385,"byte_end":19393,"line_start":432,"line_end":432,"column_start":32,"column_end":40},"alias_span":null,"name":"MAX_DATE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2137},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19415,"byte_end":19423,"line_start":433,"line_end":433,"column_start":20,"column_end":28},"alias_span":null,"name":"DateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2113},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19425,"byte_end":19438,"line_start":433,"line_end":433,"column_start":30,"column_end":43},"alias_span":null,"name":"SecondsFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2347},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19540,"byte_end":19550,"line_start":436,"line_end":436,"column_start":18,"column_end":28},"alias_span":null,"name":"ParseError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1526},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19552,"byte_end":19563,"line_start":436,"line_end":436,"column_start":30,"column_end":41},"alias_span":null,"name":"ParseResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1880},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19581,"byte_end":19592,"line_start":437,"line_end":437,"column_start":16,"column_end":27},"alias_span":null,"name":"SubsecRound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1903},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19727,"byte_end":19735,"line_start":441,"line_end":441,"column_start":32,"column_end":40},"alias_span":null,"name":"Datelike","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":0,"index":1922},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19737,"byte_end":19745,"line_start":441,"line_end":441,"column_start":42,"column_end":50},"alias_span":null,"name":"Timelike","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":0,"index":2449},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19747,"byte_end":19754,"line_start":441,"line_end":441,"column_start":52,"column_end":59},"alias_span":null,"name":"Weekday","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":0,"index":191},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19788,"byte_end":19796,"line_start":442,"line_end":442,"column_start":32,"column_end":40},"alias_span":null,"name":"TimeZone","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":0,"index":189},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19798,"byte_end":19804,"line_start":442,"line_end":442,"column_start":42,"column_end":48},"alias_span":null,"name":"Offset","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":0,"index":1982},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19865,"byte_end":19870,"line_start":444,"line_end":444,"column_start":31,"column_end":36},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":0,"index":1983},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19865,"byte_end":19870,"line_start":444,"line_end":444,"column_start":31,"column_end":36},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":0,"index":1989},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19903,"byte_end":19906,"line_start":445,"line_end":445,"column_start":32,"column_end":35},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":0,"index":1990},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19903,"byte_end":19906,"line_start":445,"line_end":445,"column_start":32,"column_end":35},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":0,"index":1967},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19908,"byte_end":19919,"line_start":445,"line_end":445,"column_start":37,"column_end":48},"alias_span":null,"name":"FixedOffset","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":0,"index":2037},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19953,"byte_end":19962,"line_start":446,"line_end":446,"column_start":32,"column_end":41},"alias_span":null,"name":"NaiveDate","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":0,"index":2072},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19964,"byte_end":19973,"line_start":446,"line_end":446,"column_start":43,"column_end":52},"alias_span":null,"name":"NaiveTime","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":0,"index":2089},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19975,"byte_end":19988,"line_start":446,"line_end":446,"column_start":54,"column_end":67},"alias_span":null,"name":"NaiveDateTime","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":0,"index":2106},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":20021,"byte_end":20025,"line_start":447,"line_end":447,"column_start":31,"column_end":35},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":0,"index":2137},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":20058,"byte_end":20066,"line_start":448,"line_end":448,"column_start":32,"column_end":40},"alias_span":null,"name":"DateTime","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":0,"index":2113},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":20068,"byte_end":20081,"line_start":448,"line_end":448,"column_start":42,"column_end":55},"alias_span":null,"name":"SecondsFormat","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":0,"index":1880},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":20114,"byte_end":20125,"line_start":449,"line_end":449,"column_start":31,"column_end":42},"alias_span":null,"name":"SubsecRound","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":0,"index":1967},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":57626,"byte_end":57637,"line_start":469,"line_end":469,"column_start":22,"column_end":33},"alias_span":null,"name":"FixedOffset","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":1982},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":57686,"byte_end":57691,"line_start":471,"line_end":471,"column_start":22,"column_end":27},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":1983},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":57686,"byte_end":57691,"line_start":471,"line_end":471,"column_start":22,"column_end":27},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":1989},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":57712,"byte_end":57715,"line_start":472,"line_end":472,"column_start":20,"column_end":23},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":1990},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":57712,"byte_end":57715,"line_start":472,"line_end":472,"column_start":20,"column_end":23},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":134}},{"kind":"Use","ref_id":{"krate":0,"index":2037},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":20700,"byte_end":20709,"line_start":474,"line_end":474,"column_start":26,"column_end":35},"alias_span":null,"name":"NaiveDate","value":"","parent":{"krate":0,"index":418}},{"kind":"Use","ref_id":{"krate":0,"index":608},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":20711,"byte_end":20719,"line_start":474,"line_end":474,"column_start":37,"column_end":45},"alias_span":null,"name":"MIN_DATE","value":"","parent":{"krate":0,"index":418}},{"kind":"Use","ref_id":{"krate":0,"index":609},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":20721,"byte_end":20729,"line_start":474,"line_end":474,"column_start":47,"column_end":55},"alias_span":null,"name":"MAX_DATE","value":"","parent":{"krate":0,"index":418}},{"kind":"Use","ref_id":{"krate":0,"index":2056},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":20759,"byte_end":20766,"line_start":475,"line_end":475,"column_start":28,"column_end":35},"alias_span":null,"name":"IsoWeek","value":"","parent":{"krate":0,"index":418}},{"kind":"Use","ref_id":{"krate":0,"index":2072},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":20792,"byte_end":20801,"line_start":476,"line_end":476,"column_start":25,"column_end":34},"alias_span":null,"name":"NaiveTime","value":"","parent":{"krate":0,"index":418}},{"kind":"Use","ref_id":{"krate":0,"index":2089},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":20831,"byte_end":20844,"line_start":477,"line_end":477,"column_start":29,"column_end":42},"alias_span":null,"name":"NaiveDateTime","value":"","parent":{"krate":0,"index":418}},{"kind":"Use","ref_id":{"krate":0,"index":2421},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":445028,"byte_end":445041,"line_start":29,"line_end":29,"column_start":25,"column_end":38},"alias_span":null,"name":"StrftimeItems","value":"","parent":{"krate":0,"index":1457}},{"kind":"Use","ref_id":{"krate":0,"index":2388},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":445065,"byte_end":445071,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Parsed","value":"","parent":{"krate":0,"index":1457}},{"kind":"Use","ref_id":{"krate":0,"index":1810},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":445094,"byte_end":445099,"line_start":31,"line_end":31,"column_start":22,"column_end":27},"alias_span":null,"name":"parse","value":"","parent":{"krate":0,"index":1457}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":76,"byte_end":37815,"line_start":4,"line_end":1002,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":120},{"krate":0,"index":134},{"krate":0,"index":418},{"krate":0,"index":1026},{"krate":0,"index":1195},{"krate":0,"index":1457},{"krate":0,"index":1866},{"krate":0,"index":2449},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2474},{"krate":0,"index":2475},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2480},{"krate":0,"index":2482},{"krate":0,"index":1888},{"krate":0,"index":1895},{"krate":0,"index":1898},{"krate":0,"index":2485},{"krate":0,"index":2487},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":1901},{"krate":0,"index":1903},{"krate":0,"index":1922}],"decl_id":null,"docs":" # Chrono: Date and Time for Rust","sig":null,"attributes":[{"value":"/ # Chrono: Date and Time for Rust","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":76,"byte_end":112,"line_start":4,"line_end":4,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":113,"byte_end":116,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ It aims to be a feature-complete superset of","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":117,"byte_end":165,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"/ the [time](https://github.com/rust-lang-deprecated/time) library.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":166,"byte_end":235,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ In particular,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":236,"byte_end":254,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":255,"byte_end":258,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * Chrono strictly adheres to ISO 8601.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":259,"byte_end":301,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"/ * Chrono is timezone-aware by default, with separate timezone-naive types.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":302,"byte_end":380,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ * Chrono is space-optimal and (while not being the primary goal) reasonably efficient.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":381,"byte_end":471,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":472,"byte_end":475,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ There were several previous attempts to bring a good date and time library to Rust,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":476,"byte_end":563,"line_start":14,"line_end":14,"column_start":1,"column_end":88}},{"value":"/ which Chrono builds upon and should acknowledge:","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":564,"byte_end":616,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":617,"byte_end":620,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * [Initial research on","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":621,"byte_end":647,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/    the wiki](https://github.com/rust-lang/rust-wiki-backup/blob/master/Lib-datetime.md)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":648,"byte_end":739,"line_start":18,"line_end":18,"column_start":1,"column_end":92}},{"value":"/ * Dietrich Epp's [datetime-rs](https://github.com/depp/datetime-rs)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":740,"byte_end":811,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ * Luis de Bethencourt's [rust-datetime](https://github.com/luisbg/rust-datetime)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":812,"byte_end":896,"line_start":20,"line_end":20,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":897,"byte_end":900,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Any significant changes to Chrono are documented in","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":901,"byte_end":956,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/ the [`CHANGELOG.md`](https://github.com/chronotope/chrono/blob/master/CHANGELOG.md) file.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":957,"byte_end":1050,"line_start":23,"line_end":23,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1051,"byte_end":1054,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1055,"byte_end":1067,"line_start":25,"line_end":25,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1068,"byte_end":1071,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Put this in your `Cargo.toml`:","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1072,"byte_end":1106,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1107,"byte_end":1110,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1111,"byte_end":1122,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1123,"byte_end":1141,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ chrono = \"0.4\"","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1142,"byte_end":1160,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1161,"byte_end":1168,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1169,"byte_end":1172,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Or, if you want [Serde](https://github.com/serde-rs/serde) include the","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1173,"byte_end":1247,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ feature like this:","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1248,"byte_end":1270,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1271,"byte_end":1274,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1275,"byte_end":1286,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1287,"byte_end":1305,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/ chrono = { version = \"0.4\", features = [\"serde\"] }","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1306,"byte_end":1360,"line_start":39,"line_end":39,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1361,"byte_end":1368,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1369,"byte_end":1372,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Then put this in your crate root:","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1373,"byte_end":1410,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1411,"byte_end":1414,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1415,"byte_end":1426,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/ extern crate chrono;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1427,"byte_end":1451,"line_start":45,"line_end":45,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1452,"byte_end":1459,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1460,"byte_end":1463,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Avoid using `use chrono::*;` as Chrono exports several modules other than types.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1464,"byte_end":1548,"line_start":48,"line_end":48,"column_start":1,"column_end":85}},{"value":"/ If you prefer the glob imports, use the following instead:","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1549,"byte_end":1611,"line_start":49,"line_end":49,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1612,"byte_end":1615,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1616,"byte_end":1627,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1628,"byte_end":1655,"line_start":52,"line_end":52,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1656,"byte_end":1663,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1664,"byte_end":1667,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ## Overview","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1668,"byte_end":1683,"line_start":55,"line_end":55,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1684,"byte_end":1687,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ### Duration","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1688,"byte_end":1704,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1705,"byte_end":1708,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Chrono currently uses","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1709,"byte_end":1734,"line_start":59,"line_end":59,"column_start":1,"column_end":26}},{"value":"/ the [`time::Duration`](https://docs.rs/time/0.1.40/time/struct.Duration.html) type","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1735,"byte_end":1821,"line_start":60,"line_end":60,"column_start":1,"column_end":87}},{"value":"/ from the `time` crate to represent the magnitude of a time span.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1822,"byte_end":1890,"line_start":61,"line_end":61,"column_start":1,"column_end":69}},{"value":"/ Since this has the same name to the newer, standard type for duration,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1891,"byte_end":1965,"line_start":62,"line_end":62,"column_start":1,"column_end":75}},{"value":"/ the reference will refer this type as `OldDuration`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":1966,"byte_end":2022,"line_start":63,"line_end":63,"column_start":1,"column_end":57}},{"value":"/ Note that this is an \"accurate\" duration represented as seconds and","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2023,"byte_end":2094,"line_start":64,"line_end":64,"column_start":1,"column_end":72}},{"value":"/ nanoseconds and does not represent \"nominal\" components such as days or","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2095,"byte_end":2170,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ months.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2171,"byte_end":2182,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2183,"byte_end":2186,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Chrono does not yet natively support","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2187,"byte_end":2227,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/ the standard [`Duration`](https://doc.rust-lang.org/std/time/struct.Duration.html) type,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2228,"byte_end":2320,"line_start":69,"line_end":69,"column_start":1,"column_end":93}},{"value":"/ but it will be supported in the future.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2321,"byte_end":2364,"line_start":70,"line_end":70,"column_start":1,"column_end":44}},{"value":"/ Meanwhile you can convert between two types with","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2365,"byte_end":2417,"line_start":71,"line_end":71,"column_start":1,"column_end":53}},{"value":"/ [`Duration::from_std`](https://docs.rs/time/0.1.40/time/struct.Duration.html#method.from_std)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2418,"byte_end":2515,"line_start":72,"line_end":72,"column_start":1,"column_end":98}},{"value":"/ and","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2516,"byte_end":2523,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ [`Duration::to_std`](https://docs.rs/time/0.1.40/time/struct.Duration.html#method.to_std)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2524,"byte_end":2617,"line_start":74,"line_end":74,"column_start":1,"column_end":94}},{"value":"/ methods.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2618,"byte_end":2630,"line_start":75,"line_end":75,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2631,"byte_end":2634,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ### Date and Time","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2635,"byte_end":2656,"line_start":77,"line_end":77,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2657,"byte_end":2660,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Chrono provides a","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2661,"byte_end":2682,"line_start":79,"line_end":79,"column_start":1,"column_end":22}},{"value":"/ [**`DateTime`**](./struct.DateTime.html)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2683,"byte_end":2727,"line_start":80,"line_end":80,"column_start":1,"column_end":45}},{"value":"/ type to represent a date and a time in a timezone.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2728,"byte_end":2782,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2783,"byte_end":2786,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ For more abstract moment-in-time tracking such as internal timekeeping","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2787,"byte_end":2861,"line_start":83,"line_end":83,"column_start":1,"column_end":75}},{"value":"/ that is unconcerned with timezones, consider","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2862,"byte_end":2910,"line_start":84,"line_end":84,"column_start":1,"column_end":49}},{"value":"/ [`time::SystemTime`](https://doc.rust-lang.org/std/time/struct.SystemTime.html),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2911,"byte_end":2995,"line_start":85,"line_end":85,"column_start":1,"column_end":85}},{"value":"/ which tracks your system clock, or","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":2996,"byte_end":3034,"line_start":86,"line_end":86,"column_start":1,"column_end":39}},{"value":"/ [`time::Instant`](https://doc.rust-lang.org/std/time/struct.Instant.html), which","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":3035,"byte_end":3119,"line_start":87,"line_end":87,"column_start":1,"column_end":85}},{"value":"/ is an opaque but monotonically-increasing representation of a moment in time.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":3120,"byte_end":3201,"line_start":88,"line_end":88,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":3202,"byte_end":3205,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ `DateTime` is timezone-aware and must be constructed from","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":3206,"byte_end":3267,"line_start":90,"line_end":90,"column_start":1,"column_end":62}},{"value":"/ the [**`TimeZone`**](./offset/trait.TimeZone.html) object,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":3268,"byte_end":3330,"line_start":91,"line_end":91,"column_start":1,"column_end":63}},{"value":"/ which defines how the local date is converted to and back from the UTC date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":3331,"byte_end":3411,"line_start":92,"line_end":92,"column_start":1,"column_end":81}},{"value":"/ There are three well-known `TimeZone` implementations:","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":3412,"byte_end":3470,"line_start":93,"line_end":93,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":3471,"byte_end":3474,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ * [**`Utc`**](./offset/struct.Utc.html) specifies the UTC time zone. It is most efficient.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":3475,"byte_end":3569,"line_start":95,"line_end":95,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":3570,"byte_end":3573,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ * [**`Local`**](./offset/struct.Local.html) specifies the system local time zone.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":3574,"byte_end":3659,"line_start":97,"line_end":97,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":3660,"byte_end":3663,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ * [**`FixedOffset`**](./offset/struct.FixedOffset.html) specifies","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":3664,"byte_end":3733,"line_start":99,"line_end":99,"column_start":1,"column_end":70}},{"value":"/   an arbitrary, fixed time zone such as UTC+09:00 or UTC-10:30.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":3734,"byte_end":3801,"line_start":100,"line_end":100,"column_start":1,"column_end":68}},{"value":"/   This often results from the parsed textual date and time.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":3802,"byte_end":3865,"line_start":101,"line_end":101,"column_start":1,"column_end":64}},{"value":"/   Since it stores the most information and does not depend on the system environment,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":3866,"byte_end":3955,"line_start":102,"line_end":102,"column_start":1,"column_end":90}},{"value":"/   you would want to normalize other `TimeZone`s into this type.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":3956,"byte_end":4023,"line_start":103,"line_end":103,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4024,"byte_end":4027,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `DateTime`s with different `TimeZone` types are distinct and do not mix,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4028,"byte_end":4104,"line_start":105,"line_end":105,"column_start":1,"column_end":77}},{"value":"/ but can be converted to each other using","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4105,"byte_end":4149,"line_start":106,"line_end":106,"column_start":1,"column_end":45}},{"value":"/ the [`DateTime::with_timezone`](./struct.DateTime.html#method.with_timezone) method.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4150,"byte_end":4238,"line_start":107,"line_end":107,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4239,"byte_end":4242,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ You can get the current date and time in the UTC time zone","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4243,"byte_end":4305,"line_start":109,"line_end":109,"column_start":1,"column_end":63}},{"value":"/ ([`Utc::now()`](./offset/struct.Utc.html#method.now))","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4306,"byte_end":4363,"line_start":110,"line_end":110,"column_start":1,"column_end":58}},{"value":"/ or in the local time zone","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4364,"byte_end":4393,"line_start":111,"line_end":111,"column_start":1,"column_end":30}},{"value":"/ ([`Local::now()`](./offset/struct.Local.html#method.now)).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4394,"byte_end":4456,"line_start":112,"line_end":112,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4457,"byte_end":4460,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4461,"byte_end":4472,"line_start":114,"line_end":114,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4473,"byte_end":4500,"line_start":115,"line_end":115,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4501,"byte_end":4504,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ let utc: DateTime<Utc> = Utc::now();       // e.g. `2014-11-28T12:45:59.324310806Z`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4505,"byte_end":4592,"line_start":117,"line_end":117,"column_start":1,"column_end":88}},{"value":"/ let local: DateTime<Local> = Local::now(); // e.g. `2014-11-28T21:45:59.324310806+09:00`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4593,"byte_end":4685,"line_start":118,"line_end":118,"column_start":1,"column_end":93}},{"value":"/ # let _ = utc; let _ = local;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4686,"byte_end":4719,"line_start":119,"line_end":119,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4720,"byte_end":4727,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4728,"byte_end":4731,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Alternatively, you can create your own date and time.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4732,"byte_end":4789,"line_start":122,"line_end":122,"column_start":1,"column_end":58}},{"value":"/ This is a bit verbose due to Rust's lack of function and method overloading,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4790,"byte_end":4870,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/ but in turn we get a rich combination of initialization methods.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4871,"byte_end":4939,"line_start":124,"line_end":124,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4940,"byte_end":4943,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4944,"byte_end":4955,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4956,"byte_end":4983,"line_start":127,"line_end":127,"column_start":1,"column_end":28}},{"value":"/ use chrono::offset::LocalResult;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":4984,"byte_end":5020,"line_start":128,"line_end":128,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":5021,"byte_end":5024,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2014, 7, 8).and_hms(9, 10, 11); // `2014-07-08T09:10:11Z`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":5025,"byte_end":5103,"line_start":130,"line_end":130,"column_start":1,"column_end":79}},{"value":"/ // July 8 is 188th day of the year 2014 (`o` for \"ordinal\")","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":5104,"byte_end":5167,"line_start":131,"line_end":131,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(dt, Utc.yo(2014, 189).and_hms(9, 10, 11));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":5168,"byte_end":5225,"line_start":132,"line_end":132,"column_start":1,"column_end":58}},{"value":"/ // July 8 is Tuesday in ISO week 28 of the year 2014.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":5226,"byte_end":5283,"line_start":133,"line_end":133,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(dt, Utc.isoywd(2014, 28, Weekday::Tue).and_hms(9, 10, 11));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":5284,"byte_end":5358,"line_start":134,"line_end":134,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":5359,"byte_end":5362,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2014, 7, 8).and_hms_milli(9, 10, 11, 12); // `2014-07-08T09:10:11.012Z`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":5363,"byte_end":5455,"line_start":136,"line_end":136,"column_start":1,"column_end":93}},{"value":"/ assert_eq!(dt, Utc.ymd(2014, 7, 8).and_hms_micro(9, 10, 11, 12_000));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":5456,"byte_end":5529,"line_start":137,"line_end":137,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(dt, Utc.ymd(2014, 7, 8).and_hms_nano(9, 10, 11, 12_000_000));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":5530,"byte_end":5606,"line_start":138,"line_end":138,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":5607,"byte_end":5610,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ // dynamic verification","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":5611,"byte_end":5638,"line_start":140,"line_end":140,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(Utc.ymd_opt(2014, 7, 8).and_hms_opt(21, 15, 33),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":5639,"byte_end":5702,"line_start":141,"line_end":141,"column_start":1,"column_end":64}},{"value":"/            LocalResult::Single(Utc.ymd(2014, 7, 8).and_hms(21, 15, 33)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":5703,"byte_end":5780,"line_start":142,"line_end":142,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(Utc.ymd_opt(2014, 7, 8).and_hms_opt(80, 15, 33), LocalResult::None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":5781,"byte_end":5864,"line_start":143,"line_end":143,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(Utc.ymd_opt(2014, 7, 38).and_hms_opt(21, 15, 33), LocalResult::None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":5865,"byte_end":5949,"line_start":144,"line_end":144,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":5950,"byte_end":5953,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ // other time zone objects can be used to construct a local datetime.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":5954,"byte_end":6027,"line_start":146,"line_end":146,"column_start":1,"column_end":74}},{"value":"/ // obviously, `local_dt` is normally different from `dt`, but `fixed_dt` should be identical.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6028,"byte_end":6125,"line_start":147,"line_end":147,"column_start":1,"column_end":98}},{"value":"/ let local_dt = Local.ymd(2014, 7, 8).and_hms_milli(9, 10, 11, 12);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6126,"byte_end":6196,"line_start":148,"line_end":148,"column_start":1,"column_end":71}},{"value":"/ let fixed_dt = FixedOffset::east(9 * 3600).ymd(2014, 7, 8).and_hms_milli(18, 10, 11, 12);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6197,"byte_end":6290,"line_start":149,"line_end":149,"column_start":1,"column_end":94}},{"value":"/ assert_eq!(dt, fixed_dt);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6291,"byte_end":6320,"line_start":150,"line_end":150,"column_start":1,"column_end":30}},{"value":"/ # let _ = local_dt;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6321,"byte_end":6344,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6345,"byte_end":6352,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6353,"byte_end":6356,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ Various properties are available to the date and time, and can be altered individually.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6357,"byte_end":6448,"line_start":154,"line_end":154,"column_start":1,"column_end":92}},{"value":"/ Most of them are defined in the traits [`Datelike`](./trait.Datelike.html) and","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6449,"byte_end":6531,"line_start":155,"line_end":155,"column_start":1,"column_end":83}},{"value":"/ [`Timelike`](./trait.Timelike.html) which you should `use` before.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6532,"byte_end":6602,"line_start":156,"line_end":156,"column_start":1,"column_end":71}},{"value":"/ Addition and subtraction is also supported.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6603,"byte_end":6650,"line_start":157,"line_end":157,"column_start":1,"column_end":48}},{"value":"/ The following illustrates most supported operations to the date and time:","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6651,"byte_end":6728,"line_start":158,"line_end":158,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6729,"byte_end":6732,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6733,"byte_end":6744,"line_start":160,"line_end":160,"column_start":1,"column_end":12}},{"value":"/ # extern crate chrono;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6745,"byte_end":6771,"line_start":161,"line_end":161,"column_start":1,"column_end":27}},{"value":"/ extern crate time;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6772,"byte_end":6794,"line_start":162,"line_end":162,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6795,"byte_end":6798,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6799,"byte_end":6816,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6817,"byte_end":6844,"line_start":165,"line_end":165,"column_start":1,"column_end":28}},{"value":"/ use time::Duration;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6845,"byte_end":6868,"line_start":166,"line_end":166,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6869,"byte_end":6872,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ // assume this returned `2014-11-28T21:45:59.324310806+09:00`:","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6873,"byte_end":6939,"line_start":168,"line_end":168,"column_start":1,"column_end":67}},{"value":"/ let dt = FixedOffset::east(9*3600).ymd(2014, 11, 28).and_hms_nano(21, 45, 59, 324310806);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":6940,"byte_end":7033,"line_start":169,"line_end":169,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":7034,"byte_end":7037,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ // property accessors","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":7038,"byte_end":7063,"line_start":171,"line_end":171,"column_start":1,"column_end":26}},{"value":"/ assert_eq!((dt.year(), dt.month(), dt.day()), (2014, 11, 28));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":7064,"byte_end":7130,"line_start":172,"line_end":172,"column_start":1,"column_end":67}},{"value":"/ assert_eq!((dt.month0(), dt.day0()), (10, 27)); // for unfortunate souls","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":7131,"byte_end":7207,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ assert_eq!((dt.hour(), dt.minute(), dt.second()), (21, 45, 59));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":7208,"byte_end":7276,"line_start":174,"line_end":174,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Fri);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":7277,"byte_end":7320,"line_start":175,"line_end":175,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(dt.weekday().number_from_monday(), 5); // Mon=1, ..., Sun=7","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":7321,"byte_end":7395,"line_start":176,"line_end":176,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(dt.ordinal(), 332); // the day of year","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":7396,"byte_end":7449,"line_start":177,"line_end":177,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(dt.num_days_from_ce(), 735565); // the number of days from and including Jan 1, 1","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":7450,"byte_end":7546,"line_start":178,"line_end":178,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":7547,"byte_end":7550,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ // time zone accessor and manipulation","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":7551,"byte_end":7593,"line_start":180,"line_end":180,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(dt.offset().fix().local_minus_utc(), 9 * 3600);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":7594,"byte_end":7656,"line_start":181,"line_end":181,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(dt.timezone(), FixedOffset::east(9 * 3600));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":7657,"byte_end":7716,"line_start":182,"line_end":182,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(dt.with_timezone(&Utc), Utc.ymd(2014, 11, 28).and_hms_nano(12, 45, 59, 324310806));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":7717,"byte_end":7815,"line_start":183,"line_end":183,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":7816,"byte_end":7819,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ // a sample of property manipulations (validates dynamically)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":7820,"byte_end":7885,"line_start":185,"line_end":185,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(dt.with_day(29).unwrap().weekday(), Weekday::Sat); // 2014-11-29 is Saturday","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":7886,"byte_end":7977,"line_start":186,"line_end":186,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(dt.with_day(32), None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":7978,"byte_end":8016,"line_start":187,"line_end":187,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(dt.with_year(-300).unwrap().num_days_from_ce(), -109606); // November 29, 301 BCE","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":8017,"byte_end":8113,"line_start":188,"line_end":188,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":8114,"byte_end":8117,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ // arithmetic operations","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":8118,"byte_end":8146,"line_start":190,"line_end":190,"column_start":1,"column_end":29}},{"value":"/ let dt1 = Utc.ymd(2014, 11, 14).and_hms(8, 9, 10);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":8147,"byte_end":8201,"line_start":191,"line_end":191,"column_start":1,"column_end":55}},{"value":"/ let dt2 = Utc.ymd(2014, 11, 14).and_hms(10, 9, 8);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":8202,"byte_end":8256,"line_start":192,"line_end":192,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(dt1.signed_duration_since(dt2), Duration::seconds(-2 * 3600 + 2));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":8257,"byte_end":8338,"line_start":193,"line_end":193,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(dt2.signed_duration_since(dt1), Duration::seconds(2 * 3600 - 2));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":8339,"byte_end":8419,"line_start":194,"line_end":194,"column_start":1,"column_end":81}},{"value":"/ assert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 0, 0) + Duration::seconds(1_000_000_000),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":8420,"byte_end":8507,"line_start":195,"line_end":195,"column_start":1,"column_end":88}},{"value":"/            Utc.ymd(2001, 9, 9).and_hms(1, 46, 40));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":8508,"byte_end":8563,"line_start":196,"line_end":196,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 0, 0) - Duration::seconds(1_000_000_000),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":8564,"byte_end":8651,"line_start":197,"line_end":197,"column_start":1,"column_end":88}},{"value":"/            Utc.ymd(1938, 4, 24).and_hms(22, 13, 20));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":8652,"byte_end":8709,"line_start":198,"line_end":198,"column_start":1,"column_end":58}},{"value":"/ # }","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":8710,"byte_end":8717,"line_start":199,"line_end":199,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":8718,"byte_end":8725,"line_start":200,"line_end":200,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":8726,"byte_end":8729,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ ### Formatting and Parsing","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":8730,"byte_end":8760,"line_start":202,"line_end":202,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":8761,"byte_end":8764,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ Formatting is done via the [`format`](./struct.DateTime.html#method.format) method,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":8765,"byte_end":8852,"line_start":204,"line_end":204,"column_start":1,"column_end":88}},{"value":"/ which format is equivalent to the familiar `strftime` format.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":8853,"byte_end":8918,"line_start":205,"line_end":205,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":8919,"byte_end":8922,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ See [`format::strftime`](./format/strftime/index.html#specifiers)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":8923,"byte_end":8992,"line_start":207,"line_end":207,"column_start":1,"column_end":70}},{"value":"/ documentation for full syntax and list of specifiers.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":8993,"byte_end":9050,"line_start":208,"line_end":208,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":9051,"byte_end":9054,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ The default `to_string` method and `{:?}` specifier also give a reasonable representation.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":9055,"byte_end":9149,"line_start":210,"line_end":210,"column_start":1,"column_end":95}},{"value":"/ Chrono also provides [`to_rfc2822`](./struct.DateTime.html#method.to_rfc2822) and","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":9150,"byte_end":9235,"line_start":211,"line_end":211,"column_start":1,"column_end":86}},{"value":"/ [`to_rfc3339`](./struct.DateTime.html#method.to_rfc3339) methods","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":9236,"byte_end":9304,"line_start":212,"line_end":212,"column_start":1,"column_end":69}},{"value":"/ for well-known formats.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":9305,"byte_end":9332,"line_start":213,"line_end":213,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":9333,"byte_end":9336,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":9337,"byte_end":9348,"line_start":215,"line_end":215,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":9349,"byte_end":9376,"line_start":216,"line_end":216,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":9377,"byte_end":9380,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2014, 11, 28).and_hms(12, 0, 9);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":9381,"byte_end":9434,"line_start":218,"line_end":218,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(), \"2014-11-28 12:00:09\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":9435,"byte_end":9517,"line_start":219,"line_end":219,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), \"Fri Nov 28 12:00:09 2014\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":9518,"byte_end":9602,"line_start":220,"line_end":220,"column_start":1,"column_end":85}},{"value":"/ assert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), dt.format(\"%c\").to_string());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":9603,"byte_end":9688,"line_start":221,"line_end":221,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":9689,"byte_end":9692,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(dt.to_string(), \"2014-11-28 12:00:09 UTC\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":9693,"byte_end":9751,"line_start":223,"line_end":223,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(dt.to_rfc2822(), \"Fri, 28 Nov 2014 12:00:09 +0000\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":9752,"byte_end":9819,"line_start":224,"line_end":224,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(dt.to_rfc3339(), \"2014-11-28T12:00:09+00:00\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":9820,"byte_end":9881,"line_start":225,"line_end":225,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(format!(\"{:?}\", dt), \"2014-11-28T12:00:09Z\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":9882,"byte_end":9942,"line_start":226,"line_end":226,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":9943,"byte_end":9946,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ // Note that milli/nanoseconds are only printed if they are non-zero","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":9947,"byte_end":10019,"line_start":228,"line_end":228,"column_start":1,"column_end":73}},{"value":"/ let dt_nano = Utc.ymd(2014, 11, 28).and_hms_nano(12, 0, 9, 1);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":10020,"byte_end":10086,"line_start":229,"line_end":229,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(format!(\"{:?}\", dt_nano), \"2014-11-28T12:00:09.000000001Z\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":10087,"byte_end":10162,"line_start":230,"line_end":230,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":10163,"byte_end":10170,"line_start":231,"line_end":231,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":10171,"byte_end":10174,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ Parsing can be done with three methods:","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":10175,"byte_end":10218,"line_start":233,"line_end":233,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":10219,"byte_end":10222,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ 1. The standard [`FromStr`](https://doc.rust-lang.org/std/str/trait.FromStr.html) trait","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":10223,"byte_end":10314,"line_start":235,"line_end":235,"column_start":1,"column_end":92}},{"value":"/    (and [`parse`](https://doc.rust-lang.org/std/primitive.str.html#method.parse) method","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":10315,"byte_end":10406,"line_start":236,"line_end":236,"column_start":1,"column_end":92}},{"value":"/    on a string) can be used for parsing `DateTime<FixedOffset>`, `DateTime<Utc>` and","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":10407,"byte_end":10495,"line_start":237,"line_end":237,"column_start":1,"column_end":89}},{"value":"/    `DateTime<Local>` values. This parses what the `{:?}`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":10496,"byte_end":10556,"line_start":238,"line_end":238,"column_start":1,"column_end":61}},{"value":"/    ([`std::fmt::Debug`](https://doc.rust-lang.org/std/fmt/trait.Debug.html))","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":10557,"byte_end":10637,"line_start":239,"line_end":239,"column_start":1,"column_end":81}},{"value":"/    format specifier prints, and requires the offset to be present.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":10638,"byte_end":10708,"line_start":240,"line_end":240,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":10709,"byte_end":10712,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ 2. [`DateTime::parse_from_str`](./struct.DateTime.html#method.parse_from_str) parses","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":10713,"byte_end":10801,"line_start":242,"line_end":242,"column_start":1,"column_end":89}},{"value":"/    a date and time with offsets and returns `DateTime<FixedOffset>`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":10802,"byte_end":10874,"line_start":243,"line_end":243,"column_start":1,"column_end":73}},{"value":"/    This should be used when the offset is a part of input and the caller cannot guess that.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":10875,"byte_end":10970,"line_start":244,"line_end":244,"column_start":1,"column_end":96}},{"value":"/    It *cannot* be used when the offset can be missing.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":10971,"byte_end":11029,"line_start":245,"line_end":245,"column_start":1,"column_end":59}},{"value":"/    [`DateTime::parse_from_rfc2822`](./struct.DateTime.html#method.parse_from_rfc2822)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":11030,"byte_end":11119,"line_start":246,"line_end":246,"column_start":1,"column_end":90}},{"value":"/    and","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":11120,"byte_end":11130,"line_start":247,"line_end":247,"column_start":1,"column_end":11}},{"value":"/    [`DateTime::parse_from_rfc3339`](./struct.DateTime.html#method.parse_from_rfc3339)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":11131,"byte_end":11220,"line_start":248,"line_end":248,"column_start":1,"column_end":90}},{"value":"/    are similar but for well-known formats.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":11221,"byte_end":11267,"line_start":249,"line_end":249,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":11268,"byte_end":11271,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ 3. [`Offset::datetime_from_str`](./offset/trait.TimeZone.html#method.datetime_from_str) is","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":11272,"byte_end":11366,"line_start":251,"line_end":251,"column_start":1,"column_end":95}},{"value":"/    similar but returns `DateTime` of given offset.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":11367,"byte_end":11421,"line_start":252,"line_end":252,"column_start":1,"column_end":55}},{"value":"/    When the explicit offset is missing from the input, it simply uses given offset.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":11422,"byte_end":11509,"line_start":253,"line_end":253,"column_start":1,"column_end":88}},{"value":"/    It issues an error when the input contains an explicit offset different","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":11510,"byte_end":11588,"line_start":254,"line_end":254,"column_start":1,"column_end":79}},{"value":"/    from the current offset.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":11589,"byte_end":11620,"line_start":255,"line_end":255,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":11621,"byte_end":11624,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ More detailed control over the parsing process is available via","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":11625,"byte_end":11692,"line_start":257,"line_end":257,"column_start":1,"column_end":68}},{"value":"/ [`format`](./format/index.html) module.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":11693,"byte_end":11736,"line_start":258,"line_end":258,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":11737,"byte_end":11740,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":11741,"byte_end":11752,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":11753,"byte_end":11780,"line_start":261,"line_end":261,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":11781,"byte_end":11784,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2014, 11, 28).and_hms(12, 0, 9);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":11785,"byte_end":11838,"line_start":263,"line_end":263,"column_start":1,"column_end":54}},{"value":"/ let fixed_dt = dt.with_timezone(&FixedOffset::east(9*3600));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":11839,"byte_end":11903,"line_start":264,"line_end":264,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":11904,"byte_end":11907,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ // method 1","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":11908,"byte_end":11923,"line_start":266,"line_end":266,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(\"2014-11-28T12:00:09Z\".parse::<DateTime<Utc>>(), Ok(dt.clone()));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":11924,"byte_end":12004,"line_start":267,"line_end":267,"column_start":1,"column_end":81}},{"value":"/ assert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<Utc>>(), Ok(dt.clone()));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":12005,"byte_end":12090,"line_start":268,"line_end":268,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<FixedOffset>>(), Ok(fixed_dt.clone()));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":12091,"byte_end":12190,"line_start":269,"line_end":269,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":12191,"byte_end":12194,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ // method 2","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":12195,"byte_end":12210,"line_start":271,"line_end":271,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(DateTime::parse_from_str(\"2014-11-28 21:00:09 +09:00\", \"%Y-%m-%d %H:%M:%S %z\"),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":12211,"byte_end":12305,"line_start":272,"line_end":272,"column_start":1,"column_end":95}},{"value":"/            Ok(fixed_dt.clone()));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":12306,"byte_end":12343,"line_start":273,"line_end":273,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(DateTime::parse_from_rfc2822(\"Fri, 28 Nov 2014 21:00:09 +0900\"),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":12344,"byte_end":12423,"line_start":274,"line_end":274,"column_start":1,"column_end":80}},{"value":"/            Ok(fixed_dt.clone()));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":12424,"byte_end":12461,"line_start":275,"line_end":275,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(DateTime::parse_from_rfc3339(\"2014-11-28T21:00:09+09:00\"), Ok(fixed_dt.clone()));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":12462,"byte_end":12558,"line_start":276,"line_end":276,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":12559,"byte_end":12562,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ // method 3","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":12563,"byte_end":12578,"line_start":278,"line_end":278,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(Utc.datetime_from_str(\"2014-11-28 12:00:09\", \"%Y-%m-%d %H:%M:%S\"), Ok(dt.clone()));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":12579,"byte_end":12677,"line_start":279,"line_end":279,"column_start":1,"column_end":99}},{"value":"/ assert_eq!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09 2014\", \"%a %b %e %T %Y\"), Ok(dt.clone()));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":12678,"byte_end":12778,"line_start":280,"line_end":280,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":12779,"byte_end":12782,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ // oops, the year is missing!","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":12783,"byte_end":12816,"line_start":282,"line_end":282,"column_start":1,"column_end":34}},{"value":"/ assert!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T %Y\").is_err());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":12817,"byte_end":12902,"line_start":283,"line_end":283,"column_start":1,"column_end":86}},{"value":"/ // oops, the format string does not include the year at all!","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":12903,"byte_end":12967,"line_start":284,"line_end":284,"column_start":1,"column_end":65}},{"value":"/ assert!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T\").is_err());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":12968,"byte_end":13050,"line_start":285,"line_end":285,"column_start":1,"column_end":83}},{"value":"/ // oops, the weekday is incorrect!","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":13051,"byte_end":13089,"line_start":286,"line_end":286,"column_start":1,"column_end":39}},{"value":"/ assert!(Utc.datetime_from_str(\"Sat Nov 28 12:00:09 2014\", \"%a %b %e %T %Y\").is_err());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":13090,"byte_end":13180,"line_start":287,"line_end":287,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":13181,"byte_end":13188,"line_start":288,"line_end":288,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":13189,"byte_end":13192,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Again : See [`format::strftime`](./format/strftime/index.html#specifiers)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":13193,"byte_end":13270,"line_start":290,"line_end":290,"column_start":1,"column_end":78}},{"value":"/ documentation for full syntax and list of specifiers.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":13271,"byte_end":13328,"line_start":291,"line_end":291,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":13329,"byte_end":13332,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ ### Conversion from and to EPOCH timestamps","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":13333,"byte_end":13380,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":13381,"byte_end":13384,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ Use [`Utc.timestamp(seconds, nanoseconds)`](./offset/trait.TimeZone.html#method.timestamp)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":13385,"byte_end":13479,"line_start":295,"line_end":295,"column_start":1,"column_end":95}},{"value":"/ to construct a [`DateTime<Utc>`](./struct.DateTime.html) from a UNIX timestamp","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":13480,"byte_end":13562,"line_start":296,"line_end":296,"column_start":1,"column_end":83}},{"value":"/ (seconds, nanoseconds that passed since January 1st 1970).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":13563,"byte_end":13625,"line_start":297,"line_end":297,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":13626,"byte_end":13629,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ Use [`DateTime.timestamp`](./struct.DateTime.html#method.timestamp) to get the timestamp (in seconds)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":13630,"byte_end":13735,"line_start":299,"line_end":299,"column_start":1,"column_end":106}},{"value":"/ from a [`DateTime`](./struct.DateTime.html). Additionally, you can use","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":13736,"byte_end":13810,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ [`DateTime.timestamp_subsec_nanos`](./struct.DateTime.html#method.timestamp_subsec_nanos)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":13811,"byte_end":13904,"line_start":301,"line_end":301,"column_start":1,"column_end":94}},{"value":"/ to get the number of additional number of nanoseconds.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":13905,"byte_end":13963,"line_start":302,"line_end":302,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":13964,"byte_end":13967,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":13968,"byte_end":13979,"line_start":304,"line_end":304,"column_start":1,"column_end":12}},{"value":"/ // We need the trait in scope to use Utc::timestamp().","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":13980,"byte_end":14038,"line_start":305,"line_end":305,"column_start":1,"column_end":59}},{"value":"/ use chrono::{DateTime, TimeZone, Utc};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14039,"byte_end":14081,"line_start":306,"line_end":306,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14082,"byte_end":14085,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ // Construct a datetime from epoch:","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14086,"byte_end":14125,"line_start":308,"line_end":308,"column_start":1,"column_end":40}},{"value":"/ let dt = Utc.timestamp(1_500_000_000, 0);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14126,"byte_end":14171,"line_start":309,"line_end":309,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(dt.to_rfc2822(), \"Fri, 14 Jul 2017 02:40:00 +0000\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14172,"byte_end":14239,"line_start":310,"line_end":310,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14240,"byte_end":14243,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ // Get epoch value from a datetime:","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14244,"byte_end":14283,"line_start":312,"line_end":312,"column_start":1,"column_end":40}},{"value":"/ let dt = DateTime::parse_from_rfc2822(\"Fri, 14 Jul 2017 02:40:00 +0000\").unwrap();","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14284,"byte_end":14370,"line_start":313,"line_end":313,"column_start":1,"column_end":87}},{"value":"/ assert_eq!(dt.timestamp(), 1_500_000_000);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14371,"byte_end":14417,"line_start":314,"line_end":314,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14418,"byte_end":14425,"line_start":315,"line_end":315,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14426,"byte_end":14429,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ ### Individual date","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14430,"byte_end":14453,"line_start":317,"line_end":317,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14454,"byte_end":14457,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ Chrono also provides an individual date type ([**`Date`**](./struct.Date.html)).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14458,"byte_end":14542,"line_start":319,"line_end":319,"column_start":1,"column_end":85}},{"value":"/ It also has time zones attached, and have to be constructed via time zones.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14543,"byte_end":14622,"line_start":320,"line_end":320,"column_start":1,"column_end":80}},{"value":"/ Most operations available to `DateTime` are also available to `Date` whenever appropriate.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14623,"byte_end":14717,"line_start":321,"line_end":321,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14718,"byte_end":14721,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14722,"byte_end":14733,"line_start":323,"line_end":323,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14734,"byte_end":14761,"line_start":324,"line_end":324,"column_start":1,"column_end":28}},{"value":"/ use chrono::offset::LocalResult;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14762,"byte_end":14798,"line_start":325,"line_end":325,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14799,"byte_end":14802,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ # // these *may* fail, but only very rarely. just rerun the test if you were that unfortunate ;)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14803,"byte_end":14903,"line_start":327,"line_end":327,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(Utc::today(), Utc::now().date());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14904,"byte_end":14952,"line_start":328,"line_end":328,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(Local::today(), Local::now().date());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":14953,"byte_end":15005,"line_start":329,"line_end":329,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":15006,"byte_end":15009,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Utc.ymd(2014, 11, 28).weekday(), Weekday::Fri);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":15010,"byte_end":15072,"line_start":331,"line_end":331,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(Utc.ymd_opt(2014, 11, 31), LocalResult::None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":15073,"byte_end":15134,"line_start":332,"line_end":332,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(Utc.ymd(2014, 11, 28).and_hms_milli(7, 8, 9, 10).format(\"%H%M%S\").to_string(),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":15135,"byte_end":15228,"line_start":333,"line_end":333,"column_start":1,"column_end":94}},{"value":"/            \"070809\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":15229,"byte_end":15254,"line_start":334,"line_end":334,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":15255,"byte_end":15262,"line_start":335,"line_end":335,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":15263,"byte_end":15266,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ There is no timezone-aware `Time` due to the lack of usefulness and also the complexity.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":15267,"byte_end":15359,"line_start":337,"line_end":337,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":15360,"byte_end":15363,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/ `DateTime` has [`date`](./struct.DateTime.html#method.date) method","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":15364,"byte_end":15434,"line_start":339,"line_end":339,"column_start":1,"column_end":71}},{"value":"/ which returns a `Date` which represents its date component.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":15435,"byte_end":15498,"line_start":340,"line_end":340,"column_start":1,"column_end":64}},{"value":"/ There is also a [`time`](./struct.DateTime.html#method.time) method,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":15499,"byte_end":15571,"line_start":341,"line_end":341,"column_start":1,"column_end":73}},{"value":"/ which simply returns a naive local time described below.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":15572,"byte_end":15632,"line_start":342,"line_end":342,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":15633,"byte_end":15636,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ ### Naive date and time","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":15637,"byte_end":15664,"line_start":344,"line_end":344,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":15665,"byte_end":15668,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ Chrono provides naive counterparts to `Date`, (non-existent) `Time` and `DateTime`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":15669,"byte_end":15755,"line_start":346,"line_end":346,"column_start":1,"column_end":87}},{"value":"/ as [**`NaiveDate`**](./naive/struct.NaiveDate.html),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":15756,"byte_end":15812,"line_start":347,"line_end":347,"column_start":1,"column_end":57}},{"value":"/ [**`NaiveTime`**](./naive/struct.NaiveTime.html) and","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":15813,"byte_end":15869,"line_start":348,"line_end":348,"column_start":1,"column_end":57}},{"value":"/ [**`NaiveDateTime`**](./naive/struct.NaiveDateTime.html) respectively.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":15870,"byte_end":15944,"line_start":349,"line_end":349,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":15945,"byte_end":15948,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ They have almost equivalent interfaces as their timezone-aware twins,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":15949,"byte_end":16022,"line_start":351,"line_end":351,"column_start":1,"column_end":74}},{"value":"/ but are not associated to time zones obviously and can be quite low-level.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":16023,"byte_end":16101,"line_start":352,"line_end":352,"column_start":1,"column_end":79}},{"value":"/ They are mostly useful for building blocks for higher-level types.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":16102,"byte_end":16172,"line_start":353,"line_end":353,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":16173,"byte_end":16176,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ Timezone-aware `DateTime` and `Date` types have two methods returning naive versions:","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":16177,"byte_end":16266,"line_start":355,"line_end":355,"column_start":1,"column_end":90}},{"value":"/ [`naive_local`](./struct.DateTime.html#method.naive_local) returns","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":16267,"byte_end":16337,"line_start":356,"line_end":356,"column_start":1,"column_end":71}},{"value":"/ a view to the naive local time,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":16338,"byte_end":16373,"line_start":357,"line_end":357,"column_start":1,"column_end":36}},{"value":"/ and [`naive_utc`](./struct.DateTime.html#method.naive_utc) returns","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":16374,"byte_end":16444,"line_start":358,"line_end":358,"column_start":1,"column_end":71}},{"value":"/ a view to the naive UTC time.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":16445,"byte_end":16478,"line_start":359,"line_end":359,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":16479,"byte_end":16482,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ## Limitations","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":16483,"byte_end":16501,"line_start":361,"line_end":361,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":16502,"byte_end":16505,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ Only proleptic Gregorian calendar (i.e. extended to support older dates) is supported.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":16506,"byte_end":16596,"line_start":363,"line_end":363,"column_start":1,"column_end":91}},{"value":"/ Be very careful if you really have to deal with pre-20C dates, they can be in Julian or others.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":16597,"byte_end":16696,"line_start":364,"line_end":364,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":16697,"byte_end":16700,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ Date types are limited in about +/- 262,000 years from the common epoch.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":16701,"byte_end":16777,"line_start":366,"line_end":366,"column_start":1,"column_end":77}},{"value":"/ Time types are limited in the nanosecond accuracy.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":16778,"byte_end":16832,"line_start":367,"line_end":367,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":16833,"byte_end":16836,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ [Leap seconds are supported in the representation but","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":16837,"byte_end":16894,"line_start":369,"line_end":369,"column_start":1,"column_end":58}},{"value":"/ Chrono doesn't try to make use of them](./naive/struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":16895,"byte_end":16991,"line_start":370,"line_end":370,"column_start":1,"column_end":97}},{"value":"/ (The main reason is that leap seconds are not really predictable.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":16992,"byte_end":17062,"line_start":371,"line_end":371,"column_start":1,"column_end":71}},{"value":"/ Almost *every* operation over the possible leap seconds will ignore them.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":17063,"byte_end":17140,"line_start":372,"line_end":372,"column_start":1,"column_end":78}},{"value":"/ Consider using `NaiveDateTime` with the implicit TAI (International Atomic Time) scale","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":17141,"byte_end":17231,"line_start":373,"line_end":373,"column_start":1,"column_end":91}},{"value":"/ if you want.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":17232,"byte_end":17248,"line_start":374,"line_end":374,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":17249,"byte_end":17252,"line_start":375,"line_end":375,"column_start":1,"column_end":4}},{"value":"/ Chrono inherently does not support an inaccurate or partial date and time representation.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":17253,"byte_end":17346,"line_start":376,"line_end":376,"column_start":1,"column_end":94}},{"value":"/ Any operation that can be ambiguous will return `None` in such cases.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":17347,"byte_end":17420,"line_start":377,"line_end":377,"column_start":1,"column_end":74}},{"value":"/ For example, \"a month later\" of 2014-01-30 is not well-defined","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":17421,"byte_end":17487,"line_start":378,"line_end":378,"column_start":1,"column_end":67}},{"value":"/ and consequently `Utc.ymd(2014, 1, 30).with_month(2)` returns `None`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":17488,"byte_end":17561,"line_start":379,"line_end":379,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":17562,"byte_end":17565,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ Advanced time zone handling is not yet supported.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":17566,"byte_end":17619,"line_start":381,"line_end":381,"column_start":1,"column_end":54}},{"value":"/ For now you can try the [Chrono-tz](https://github.com/chronotope/chrono-tz/) crate instead.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":17620,"byte_end":17716,"line_start":382,"line_end":382,"column_start":1,"column_end":97}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":17854,"byte_end":17876,"line_start":387,"line_end":387,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":17877,"byte_end":17916,"line_start":388,"line_end":388,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":68},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19686,"byte_end":19693,"line_start":440,"line_end":440,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116}],"decl_id":null,"docs":" A convenience module appropriate for glob imports (`use chrono::prelude::*;`).\n","sig":null,"attributes":[{"value":"/ A convenience module appropriate for glob imports (`use chrono::prelude::*;`).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":19595,"byte_end":19677,"line_start":439,"line_end":439,"column_start":1,"column_end":83}}]},{"kind":"Mod","id":{"krate":0,"index":134},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"offset","qualname":"::offset","value":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":1933},{"krate":0,"index":1944},{"krate":0,"index":1947},{"krate":0,"index":1949},{"krate":0,"index":1953},{"krate":0,"index":1956},{"krate":0,"index":1958},{"krate":0,"index":1960},{"krate":0,"index":1963},{"krate":0,"index":171},{"krate":0,"index":179},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":216},{"krate":0,"index":301},{"krate":0,"index":359},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":416}],"decl_id":null,"docs":" The time zone, which calculates offsets from the local time to UTC.","sig":null,"attributes":[{"value":"/ The time zone, which calculates offsets from the local time to UTC.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":39300,"byte_end":39371,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":39372,"byte_end":39375,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ There are four operations provided by the `TimeZone` trait:","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":39376,"byte_end":39439,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":39440,"byte_end":39443,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ 1. Converting the local `NaiveDateTime` to `DateTime<Tz>`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":39444,"byte_end":39505,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/ 2. Converting the UTC `NaiveDateTime` to `DateTime<Tz>`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":39506,"byte_end":39565,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/ 3. Converting `DateTime<Tz>` to the local `NaiveDateTime`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":39566,"byte_end":39627,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/ 4. Constructing `DateTime<Tz>` objects from various offsets","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":39628,"byte_end":39691,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":39692,"byte_end":39695,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ 1 is used for constructors. 2 is used for the `with_timezone` method of date and time types.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":39696,"byte_end":39792,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ 3 is used for other methods, e.g. `year()` or `format()`, and provided by an associated type","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":39793,"byte_end":39889,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ which implements `Offset` (which then passed to `TimeZone` for actual implementations).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":39890,"byte_end":39981,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/ Technically speaking `TimeZone` has a total knowledge about given timescale,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":39982,"byte_end":40062,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ but `Offset` is used as a cache to avoid the repeated conversion","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":40063,"byte_end":40131,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ and provides implementations for 1 and 3.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":40132,"byte_end":40177,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/ An `TimeZone` instance can be reconstructed from the corresponding `Offset` instance.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":40178,"byte_end":40267,"line_start":19,"line_end":19,"column_start":1,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1935},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":40720,"byte_end":40724,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"None","qualname":"::offset::LocalResult::None","value":"LocalResult::None","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" Given local time representation is invalid.\n This can occur when, for example, the positive timezone transition.\n","sig":null,"attributes":[{"value":"/ Given local time representation is invalid.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":40592,"byte_end":40639,"line_start":31,"line_end":31,"column_start":5,"column_end":52}},{"value":"/ This can occur when, for example, the positive timezone transition.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":40644,"byte_end":40715,"line_start":32,"line_end":32,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1937},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":40798,"byte_end":40804,"line_start":35,"line_end":35,"column_start":5,"column_end":11},"name":"Single","qualname":"::offset::LocalResult::Single","value":"LocalResult::Single(T)","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" Given local time representation has a single unique result.\n","sig":null,"attributes":[{"value":"/ Given local time representation has a single unique result.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":40730,"byte_end":40793,"line_start":34,"line_end":34,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1940},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":40970,"byte_end":40979,"line_start":38,"line_end":38,"column_start":5,"column_end":14},"name":"Ambiguous","qualname":"::offset::LocalResult::Ambiguous","value":"LocalResult::Ambiguous(T, T)","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" Given local time representation has multiple results and thus ambiguous.\n This can occur when, for example, the negative timezone transition.\n","sig":null,"attributes":[{"value":"/ Given local time representation has multiple results and thus ambiguous.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":40813,"byte_end":40889,"line_start":36,"line_end":36,"column_start":5,"column_end":81}},{"value":"/ This can occur when, for example, the negative timezone transition.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":40894,"byte_end":40965,"line_start":37,"line_end":37,"column_start":5,"column_end":76}}]},{"kind":"Enum","id":{"krate":0,"index":1933},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":40571,"byte_end":40582,"line_start":30,"line_end":30,"column_start":10,"column_end":21},"name":"LocalResult","qualname":"::offset::LocalResult","value":"pub enum LocalResult<T> { None, Single(T), Ambiguous(T, T), }","parent":null,"children":[{"krate":0,"index":1935},{"krate":0,"index":1937},{"krate":0,"index":1940}],"decl_id":null,"docs":" The conversion result from the local time to the timezone-aware datetime types.\n","sig":null,"attributes":[{"value":"/ The conversion result from the local time to the timezone-aware datetime types.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":40427,"byte_end":40510,"line_start":28,"line_end":28,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":41129,"byte_end":41135,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"single","qualname":"<LocalResult<T>>::single","value":"pub fn single(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` only when the conversion result is unique, or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some` only when the conversion result is unique, or `None` otherwise.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":41035,"byte_end":41117,"line_start":42,"line_end":42,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":41363,"byte_end":41371,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"earliest","qualname":"<LocalResult<T>>::earliest","value":"pub fn earliest(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` for the earliest possible conversion result, or `None` if none.\n","sig":null,"attributes":[{"value":"/ Returns `Some` for the earliest possible conversion result, or `None` if none.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":41269,"byte_end":41351,"line_start":50,"line_end":50,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":41628,"byte_end":41634,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"latest","qualname":"<LocalResult<T>>::latest","value":"pub fn latest(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` for the latest possible conversion result, or `None` if none.\n","sig":null,"attributes":[{"value":"/ Returns `Some` for the latest possible conversion result, or `None` if none.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":41536,"byte_end":41616,"line_start":58,"line_end":58,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":41881,"byte_end":41884,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"map","qualname":"<LocalResult<T>>::map","value":"pub fn map<U, F: FnMut(T) -> U>(Self, F) -> LocalResult<U>","parent":null,"children":[],"decl_id":null,"docs":" Maps a `LocalResult<T>` into `LocalResult<U>` with given function.\n","sig":null,"attributes":[{"value":"/ Maps a `LocalResult<T>` into `LocalResult<U>` with given function.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":41799,"byte_end":41869,"line_start":66,"line_end":66,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":42459,"byte_end":42467,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"and_time","qualname":"<LocalResult<Date<Tz>>>::and_time","value":"pub fn and_time(Self, NaiveTime) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date and given `NaiveTime`.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date and given `NaiveTime`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":42234,"byte_end":42305,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":42310,"byte_end":42358,"line_start":78,"line_end":78,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":42363,"byte_end":42366,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":42371,"byte_end":42433,"line_start":80,"line_end":80,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":42438,"byte_end":42447,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":42965,"byte_end":42976,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"and_hms_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_opt","value":"pub fn and_hms_opt(Self, u32, u32, u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute and second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute and second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":42737,"byte_end":42811,"line_start":91,"line_end":91,"column_start":5,"column_end":79}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":42816,"byte_end":42864,"line_start":92,"line_end":92,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":42869,"byte_end":42872,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":42877,"byte_end":42939,"line_start":94,"line_end":94,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":42944,"byte_end":42953,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":43599,"byte_end":43616,"line_start":111,"line_end":111,"column_start":12,"column_end":29},"name":"and_hms_milli_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_milli_opt","value":"pub fn and_hms_milli_opt(Self, u32, u32, u32, u32)\n-> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\n The millisecond part can exceed 1,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":43273,"byte_end":43360,"line_start":105,"line_end":105,"column_start":5,"column_end":92}},{"value":"/ The millisecond part can exceed 1,000 in order to represent the leap second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":43365,"byte_end":43445,"line_start":106,"line_end":106,"column_start":5,"column_end":85}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":43450,"byte_end":43498,"line_start":107,"line_end":107,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":43503,"byte_end":43506,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":43511,"byte_end":43573,"line_start":109,"line_end":109,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":43578,"byte_end":43587,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":44315,"byte_end":44332,"line_start":132,"line_end":132,"column_start":12,"column_end":29},"name":"and_hms_micro_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_micro_opt","value":"pub fn and_hms_micro_opt(Self, u32, u32, u32, u32)\n-> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\n The microsecond part can exceed 1,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":43985,"byte_end":44072,"line_start":126,"line_end":126,"column_start":5,"column_end":92}},{"value":"/ The microsecond part can exceed 1,000,000 in order to represent the leap second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":44077,"byte_end":44161,"line_start":127,"line_end":127,"column_start":5,"column_end":89}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":44166,"byte_end":44214,"line_start":128,"line_end":128,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":44219,"byte_end":44222,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":44227,"byte_end":44289,"line_start":130,"line_end":130,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":44294,"byte_end":44303,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":45033,"byte_end":45049,"line_start":153,"line_end":153,"column_start":12,"column_end":28},"name":"and_hms_nano_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_nano_opt","value":"pub fn and_hms_nano_opt(Self, u32, u32, u32, u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\n The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":44701,"byte_end":44787,"line_start":147,"line_end":147,"column_start":5,"column_end":91}},{"value":"/ The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":44792,"byte_end":44879,"line_start":148,"line_end":148,"column_start":5,"column_end":92}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":44884,"byte_end":44932,"line_start":149,"line_end":149,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":44937,"byte_end":44940,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":44945,"byte_end":45007,"line_start":151,"line_end":151,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":45012,"byte_end":45021,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":45537,"byte_end":45543,"line_start":171,"line_end":171,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<LocalResult<T>>::unwrap","value":"pub fn unwrap(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the single unique conversion result, or panics accordingly.\n","sig":null,"attributes":[{"value":"/ Returns the single unique conversion result, or panics accordingly.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":45454,"byte_end":45525,"line_start":170,"line_end":170,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":189},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":45898,"byte_end":45904,"line_start":183,"line_end":183,"column_start":11,"column_end":17},"name":"Offset","qualname":"::offset::Offset","value":"Offset: Sized + Clone + fmt::Debug","parent":null,"children":[{"krate":0,"index":190}],"decl_id":null,"docs":" The offset from the local time to UTC.\n","sig":null,"attributes":[{"value":"/ The offset from the local time to UTC.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":45845,"byte_end":45887,"line_start":182,"line_end":182,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46010,"byte_end":46013,"line_start":185,"line_end":185,"column_start":8,"column_end":11},"name":"fix","qualname":"::offset::Offset::fix","value":"pub fn fix(&Self) -> FixedOffset","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Returns the fixed offset from UTC to the local time stored.\n","sig":null,"attributes":[{"value":"/ Returns the fixed offset from UTC to the local time stored.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":45939,"byte_end":46002,"line_start":184,"line_end":184,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":191},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46212,"byte_end":46220,"line_start":192,"line_end":192,"column_start":11,"column_end":19},"name":"TimeZone","qualname":"::offset::TimeZone","value":"TimeZone: Sized + Clone","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"decl_id":null,"docs":" The time zone.","sig":null,"attributes":[{"value":"/ The time zone.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46040,"byte_end":46058,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46059,"byte_end":46062,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ The methods here are the primarily constructors for [`Date`](../struct.Date.html) and","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46063,"byte_end":46152,"line_start":190,"line_end":190,"column_start":1,"column_end":90}},{"value":"/ [`DateTime`](../struct.DateTime.html) types.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46153,"byte_end":46201,"line_start":191,"line_end":191,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":192},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46443,"byte_end":46449,"line_start":196,"line_end":196,"column_start":10,"column_end":16},"name":"Offset","qualname":"::offset::TimeZone::Offset","value":"type Offset: Offset;","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" An associated offset type.\n This type is used to store the actual offset in date and time types.\n The original `TimeZone` value can be recovered via `TimeZone::from_offset`.\n","sig":null,"attributes":[{"value":"/ An associated offset type.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46242,"byte_end":46272,"line_start":193,"line_end":193,"column_start":5,"column_end":35}},{"value":"/ This type is used to store the actual offset in date and time types.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46277,"byte_end":46349,"line_start":194,"line_end":194,"column_start":5,"column_end":77}},{"value":"/ The original `TimeZone` value can be recovered via `TimeZone::from_offset`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46354,"byte_end":46433,"line_start":195,"line_end":195,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":47066,"byte_end":47069,"line_start":213,"line_end":213,"column_start":8,"column_end":11},"name":"ymd","qualname":"::offset::TimeZone::ymd","value":"pub fn ymd(&Self, i32, u32, u32) -> Date<Self>","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, month, day and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from year, month, day and the current time zone.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46464,"byte_end":46535,"line_start":198,"line_end":198,"column_start":5,"column_end":76}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46540,"byte_end":46619,"line_start":199,"line_end":199,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46624,"byte_end":46627,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46632,"byte_end":46725,"line_start":201,"line_end":201,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46730,"byte_end":46807,"line_start":202,"line_end":202,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46812,"byte_end":46815,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date, invalid month and/or day.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46820,"byte_end":46882,"line_start":204,"line_end":204,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46887,"byte_end":46890,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46895,"byte_end":46908,"line_start":206,"line_end":206,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46913,"byte_end":46916,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46921,"byte_end":46929,"line_start":208,"line_end":208,"column_start":5,"column_end":13}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46934,"byte_end":46966,"line_start":209,"line_end":209,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46971,"byte_end":46974,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.ymd(2015, 5, 15).to_string(), \"2015-05-15UTC\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46979,"byte_end":47045,"line_start":211,"line_end":211,"column_start":5,"column_end":71}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":47050,"byte_end":47058,"line_start":212,"line_end":212,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":47885,"byte_end":47892,"line_start":233,"line_end":233,"column_start":8,"column_end":15},"name":"ymd_opt","qualname":"::offset::TimeZone::ymd_opt","value":"pub fn ymd_opt(&Self, i32, u32, u32) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, month, day and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from year, month, day and the current time zone.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":47185,"byte_end":47256,"line_start":217,"line_end":217,"column_start":5,"column_end":76}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":47261,"byte_end":47340,"line_start":218,"line_end":218,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":47345,"byte_end":47348,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":47353,"byte_end":47446,"line_start":220,"line_end":220,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":47451,"byte_end":47528,"line_start":221,"line_end":221,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":47533,"byte_end":47536,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date, invalid month and/or day.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":47541,"byte_end":47611,"line_start":223,"line_end":223,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":47616,"byte_end":47619,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":47624,"byte_end":47637,"line_start":225,"line_end":225,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":47642,"byte_end":47645,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":47650,"byte_end":47658,"line_start":227,"line_end":227,"column_start":5,"column_end":13}},{"value":"/ use chrono::{Utc, LocalResult, TimeZone};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":47663,"byte_end":47708,"line_start":228,"line_end":228,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":47713,"byte_end":47716,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.ymd_opt(2015, 5, 15).unwrap().to_string(), \"2015-05-15UTC\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":47721,"byte_end":47800,"line_start":230,"line_end":230,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(Utc.ymd_opt(2000, 0, 0), LocalResult::None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":47805,"byte_end":47864,"line_start":231,"line_end":231,"column_start":5,"column_end":64}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":47869,"byte_end":47877,"line_start":232,"line_end":232,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":48741,"byte_end":48743,"line_start":255,"line_end":255,"column_start":8,"column_end":10},"name":"yo","qualname":"::offset::TimeZone::yo","value":"pub fn yo(&Self, i32, u32) -> Date<Self>","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":48129,"byte_end":48220,"line_start":240,"line_end":240,"column_start":5,"column_end":96}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":48225,"byte_end":48304,"line_start":241,"line_end":241,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":48309,"byte_end":48312,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":48317,"byte_end":48410,"line_start":243,"line_end":243,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":48415,"byte_end":48492,"line_start":244,"line_end":244,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":48497,"byte_end":48500,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date and/or invalid DOY.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":48505,"byte_end":48560,"line_start":246,"line_end":246,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":48565,"byte_end":48568,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":48573,"byte_end":48586,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":48591,"byte_end":48594,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":48599,"byte_end":48607,"line_start":250,"line_end":250,"column_start":5,"column_end":13}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":48612,"byte_end":48644,"line_start":251,"line_end":251,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":48649,"byte_end":48652,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.yo(2015, 135).to_string(), \"2015-05-15UTC\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":48657,"byte_end":48720,"line_start":253,"line_end":253,"column_start":5,"column_end":68}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":48725,"byte_end":48733,"line_start":254,"line_end":254,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":49294,"byte_end":49300,"line_start":266,"line_end":266,"column_start":8,"column_end":14},"name":"yo_opt","qualname":"::offset::TimeZone::yo_opt","value":"pub fn yo_opt(&Self, i32, u32) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":48847,"byte_end":48938,"line_start":259,"line_end":259,"column_start":5,"column_end":96}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":48943,"byte_end":49022,"line_start":260,"line_end":260,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":49027,"byte_end":49030,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":49035,"byte_end":49128,"line_start":262,"line_end":262,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":49133,"byte_end":49210,"line_start":263,"line_end":263,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":49215,"byte_end":49218,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date and/or invalid DOY.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":49223,"byte_end":49286,"line_start":265,"line_end":265,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":50278,"byte_end":50284,"line_start":290,"line_end":290,"column_start":8,"column_end":14},"name":"isoywd","qualname":"::offset::TimeZone::isoywd","value":"pub fn isoywd(&Self, i32, u32, Weekday) -> Date<Self>","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\n the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n The resulting `Date` may have a different year from the input year.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":49525,"byte_end":49616,"line_start":273,"line_end":273,"column_start":5,"column_end":96}},{"value":"/ the current time zone.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":49621,"byte_end":49647,"line_start":274,"line_end":274,"column_start":5,"column_end":31}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":49652,"byte_end":49731,"line_start":275,"line_end":275,"column_start":5,"column_end":84}},{"value":"/ The resulting `Date` may have a different year from the input year.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":49736,"byte_end":49807,"line_start":276,"line_end":276,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":49812,"byte_end":49815,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":49820,"byte_end":49913,"line_start":278,"line_end":278,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":49918,"byte_end":49995,"line_start":279,"line_end":279,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":50000,"byte_end":50003,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date and/or invalid week number.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":50008,"byte_end":50071,"line_start":281,"line_end":281,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":50076,"byte_end":50079,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":50084,"byte_end":50097,"line_start":283,"line_end":283,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":50102,"byte_end":50105,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":50110,"byte_end":50118,"line_start":285,"line_end":285,"column_start":5,"column_end":13}},{"value":"/ use chrono::{Utc, Weekday, TimeZone};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":50123,"byte_end":50164,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":50169,"byte_end":50172,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.isoywd(2015, 20, Weekday::Fri).to_string(), \"2015-05-15UTC\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":50177,"byte_end":50257,"line_start":288,"line_end":288,"column_start":5,"column_end":85}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":50262,"byte_end":50270,"line_start":289,"line_end":289,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":50975,"byte_end":50985,"line_start":303,"line_end":303,"column_start":8,"column_end":18},"name":"isoywd_opt","qualname":"::offset::TimeZone::isoywd_opt","value":"pub fn isoywd_opt(&Self, i32, u32, Weekday) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\n the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n The resulting `Date` may have a different year from the input year.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":50413,"byte_end":50504,"line_start":294,"line_end":294,"column_start":5,"column_end":96}},{"value":"/ the current time zone.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":50509,"byte_end":50535,"line_start":295,"line_end":295,"column_start":5,"column_end":31}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":50540,"byte_end":50619,"line_start":296,"line_end":296,"column_start":5,"column_end":84}},{"value":"/ The resulting `Date` may have a different year from the input year.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":50624,"byte_end":50695,"line_start":297,"line_end":297,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":50700,"byte_end":50703,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":50708,"byte_end":50801,"line_start":299,"line_end":299,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":50806,"byte_end":50883,"line_start":300,"line_end":300,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":50888,"byte_end":50891,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date and/or invalid week number.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":50896,"byte_end":50967,"line_start":302,"line_end":302,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":51810,"byte_end":51819,"line_start":324,"line_end":324,"column_start":8,"column_end":17},"name":"timestamp","qualname":"::offset::TimeZone::timestamp","value":"pub fn timestamp(&Self, i64, u32) -> DateTime<Self>","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap seconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap seconds","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":51235,"byte_end":51297,"line_start":310,"line_end":310,"column_start":5,"column_end":67}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":51302,"byte_end":51362,"line_start":311,"line_end":311,"column_start":5,"column_end":65}},{"value":"/ and the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":51367,"byte_end":51438,"line_start":312,"line_end":312,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":51443,"byte_end":51446,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range number of seconds and/or invalid nanosecond,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":51451,"byte_end":51526,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ for a non-panicking version see [`timestamp_opt`](#method.timestamp_opt).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":51531,"byte_end":51608,"line_start":315,"line_end":315,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":51613,"byte_end":51616,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":51621,"byte_end":51634,"line_start":317,"line_end":317,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":51639,"byte_end":51642,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":51647,"byte_end":51655,"line_start":319,"line_end":319,"column_start":5,"column_end":13}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":51660,"byte_end":51692,"line_start":320,"line_end":320,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":51697,"byte_end":51700,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.timestamp(1431648000, 0).to_string(), \"2015-05-15 00:00:00 UTC\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":51705,"byte_end":51789,"line_start":322,"line_end":322,"column_start":5,"column_end":89}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":51794,"byte_end":51802,"line_start":323,"line_end":323,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":52302,"byte_end":52315,"line_start":334,"line_end":334,"column_start":8,"column_end":21},"name":"timestamp_opt","qualname":"::offset::TimeZone::timestamp_opt","value":"pub fn timestamp_opt(&Self, i64, u32) -> LocalResult<DateTime<Self>>","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap seconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap seconds","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":51930,"byte_end":51992,"line_start":328,"line_end":328,"column_start":5,"column_end":67}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":51997,"byte_end":52057,"line_start":329,"line_end":329,"column_start":5,"column_end":65}},{"value":"/ and the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":52062,"byte_end":52133,"line_start":330,"line_end":330,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":52138,"byte_end":52141,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ Returns `LocalResult::None` on out-of-range number of seconds and/or","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":52146,"byte_end":52218,"line_start":332,"line_end":332,"column_start":5,"column_end":77}},{"value":"/ invalid nanosecond, otherwise always returns `LocalResult::Single`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":52223,"byte_end":52294,"line_start":333,"line_end":333,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":53055,"byte_end":53071,"line_start":354,"line_end":354,"column_start":8,"column_end":24},"name":"timestamp_millis","qualname":"::offset::TimeZone::timestamp_millis","value":"pub fn timestamp_millis(&Self, i64) -> DateTime<Self>","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap milliseconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap milliseconds","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":52576,"byte_end":52643,"line_start":341,"line_end":341,"column_start":5,"column_end":72}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":52648,"byte_end":52709,"line_start":342,"line_end":342,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":52714,"byte_end":52717,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Panics on out-of-range number of milliseconds for a non-panicking","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":52722,"byte_end":52791,"line_start":344,"line_end":344,"column_start":5,"column_end":74}},{"value":"/ version see [`timestamp_millis_opt`](#method.timestamp_millis_opt).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":52796,"byte_end":52867,"line_start":345,"line_end":345,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":52872,"byte_end":52875,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":52880,"byte_end":52893,"line_start":347,"line_end":347,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":52898,"byte_end":52901,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":52906,"byte_end":52914,"line_start":349,"line_end":349,"column_start":5,"column_end":13}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":52919,"byte_end":52951,"line_start":350,"line_end":350,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":52956,"byte_end":52959,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.timestamp_millis(1431648000).timestamp(), 1431648);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":52964,"byte_end":53034,"line_start":352,"line_end":352,"column_start":5,"column_end":75}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":53039,"byte_end":53047,"line_start":353,"line_end":353,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":53802,"byte_end":53822,"line_start":375,"line_end":375,"column_start":8,"column_end":28},"name":"timestamp_millis_opt","qualname":"::offset::TimeZone::timestamp_millis_opt","value":"pub fn timestamp_millis_opt(&Self, i64) -> LocalResult<DateTime<Self>>","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap milliseconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap milliseconds","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":53174,"byte_end":53241,"line_start":358,"line_end":358,"column_start":5,"column_end":72}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":53246,"byte_end":53307,"line_start":359,"line_end":359,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":53312,"byte_end":53315,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":53320,"byte_end":53323,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Returns `LocalResult::None` on out-of-range number of milliseconds","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":53328,"byte_end":53398,"line_start":362,"line_end":362,"column_start":5,"column_end":75}},{"value":"/ and/or invalid nanosecond, otherwise always returns","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":53403,"byte_end":53458,"line_start":363,"line_end":363,"column_start":5,"column_end":60}},{"value":"/ `LocalResult::Single`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":53463,"byte_end":53489,"line_start":364,"line_end":364,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":53494,"byte_end":53497,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":53502,"byte_end":53515,"line_start":366,"line_end":366,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":53520,"byte_end":53523,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":53528,"byte_end":53536,"line_start":368,"line_end":368,"column_start":5,"column_end":13}},{"value":"/ use chrono::{Utc, TimeZone, LocalResult};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":53541,"byte_end":53586,"line_start":369,"line_end":369,"column_start":5,"column_end":50}},{"value":"/ match Utc.timestamp_millis_opt(1431648000) {","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":53591,"byte_end":53639,"line_start":370,"line_end":370,"column_start":5,"column_end":53}},{"value":"/     LocalResult::Single(dt) => assert_eq!(dt.timestamp(), 1431648),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":53644,"byte_end":53715,"line_start":371,"line_end":371,"column_start":5,"column_end":76}},{"value":"/     _ => panic!(\"Incorrect timestamp_millis\"),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":53720,"byte_end":53770,"line_start":372,"line_end":372,"column_start":5,"column_end":55}},{"value":"/ };","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":53775,"byte_end":53781,"line_start":373,"line_end":373,"column_start":5,"column_end":11}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":53786,"byte_end":53794,"line_start":374,"line_end":374,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":54524,"byte_end":54539,"line_start":397,"line_end":397,"column_start":8,"column_end":23},"name":"timestamp_nanos","qualname":"::offset::TimeZone::timestamp_nanos","value":"pub fn timestamp_nanos(&Self, i64) -> DateTime<Self>","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap nanoseconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap nanoseconds","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":54101,"byte_end":54167,"line_start":384,"line_end":384,"column_start":5,"column_end":71}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":54172,"byte_end":54233,"line_start":385,"line_end":385,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":54238,"byte_end":54241,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Unlike [`timestamp_millis`](#method.timestamp_millis), this never","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":54246,"byte_end":54315,"line_start":387,"line_end":387,"column_start":5,"column_end":74}},{"value":"/ panics.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":54320,"byte_end":54331,"line_start":388,"line_end":388,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":54336,"byte_end":54339,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":54344,"byte_end":54357,"line_start":390,"line_end":390,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":54362,"byte_end":54365,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":54370,"byte_end":54378,"line_start":392,"line_end":392,"column_start":5,"column_end":13}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":54383,"byte_end":54415,"line_start":393,"line_end":393,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":54420,"byte_end":54423,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.timestamp_nanos(1431648000000000).timestamp(), 1431648);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":54428,"byte_end":54503,"line_start":395,"line_end":395,"column_start":5,"column_end":80}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":54508,"byte_end":54516,"line_start":396,"line_end":396,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":55326,"byte_end":55343,"line_start":416,"line_end":416,"column_start":8,"column_end":25},"name":"datetime_from_str","qualname":"::offset::TimeZone::datetime_from_str","value":"pub fn datetime_from_str(&Self, &str, &str) -> ParseResult<DateTime<Self>>","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and\n returns a `DateTime` with the current offset.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":54822,"byte_end":54878,"line_start":406,"line_end":406,"column_start":5,"column_end":61}},{"value":"/ returns a `DateTime` with the current offset.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":54883,"byte_end":54932,"line_start":407,"line_end":407,"column_start":5,"column_end":54}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":54937,"byte_end":55007,"line_start":408,"line_end":408,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":55012,"byte_end":55050,"line_start":409,"line_end":409,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":55055,"byte_end":55058,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ If the format does not include offsets, the current offset is assumed;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":55063,"byte_end":55137,"line_start":411,"line_end":411,"column_start":5,"column_end":79}},{"value":"/ otherwise the input should have a matching UTC offset.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":55142,"byte_end":55200,"line_start":412,"line_end":412,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":55205,"byte_end":55208,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ See also `DateTime::parse_from_str` which gives a local `DateTime`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":55213,"byte_end":55283,"line_start":414,"line_end":414,"column_start":5,"column_end":75}},{"value":"/ with parsed `FixedOffset`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":55288,"byte_end":55318,"line_start":415,"line_end":415,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":55619,"byte_end":55630,"line_start":423,"line_end":423,"column_start":8,"column_end":19},"name":"from_offset","qualname":"::offset::TimeZone::from_offset","value":"pub fn from_offset(&Self::Offset) -> Self","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Reconstructs the time zone from the offset.\n","sig":null,"attributes":[{"value":"/ Reconstructs the time zone from the offset.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":55564,"byte_end":55611,"line_start":422,"line_end":422,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":55742,"byte_end":55764,"line_start":426,"line_end":426,"column_start":8,"column_end":30},"name":"offset_from_local_date","qualname":"::offset::TimeZone::offset_from_local_date","value":"pub fn offset_from_local_date(&Self, &NaiveDate) -> LocalResult<Self::Offset>","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Creates the offset(s) for given local `NaiveDate` if possible.\n","sig":null,"attributes":[{"value":"/ Creates the offset(s) for given local `NaiveDate` if possible.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":55668,"byte_end":55734,"line_start":425,"line_end":425,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":55904,"byte_end":55930,"line_start":429,"line_end":429,"column_start":8,"column_end":34},"name":"offset_from_local_datetime","qualname":"::offset::TimeZone::offset_from_local_datetime","value":"pub fn offset_from_local_datetime(&Self, &NaiveDateTime)\n-> LocalResult<Self::Offset>","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Creates the offset(s) for given local `NaiveDateTime` if possible.\n","sig":null,"attributes":[{"value":"/ Creates the offset(s) for given local `NaiveDateTime` if possible.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":55826,"byte_end":55896,"line_start":428,"line_end":428,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":56080,"byte_end":56095,"line_start":432,"line_end":432,"column_start":8,"column_end":23},"name":"from_local_date","qualname":"::offset::TimeZone::from_local_date","value":"pub fn from_local_date(&Self, &NaiveDate) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Converts the local `NaiveDate` to the timezone-aware `Date` if possible.\n","sig":null,"attributes":[{"value":"/ Converts the local `NaiveDate` to the timezone-aware `Date` if possible.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":55996,"byte_end":56072,"line_start":431,"line_end":431,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":56447,"byte_end":56466,"line_start":440,"line_end":440,"column_start":8,"column_end":27},"name":"from_local_datetime","qualname":"::offset::TimeZone::from_local_datetime","value":"pub fn from_local_datetime(&Self, &NaiveDateTime)\n-> LocalResult<DateTime<Self>>","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.\n","sig":null,"attributes":[{"value":"/ Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":56355,"byte_end":56439,"line_start":439,"line_end":439,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":56740,"byte_end":56760,"line_start":446,"line_end":446,"column_start":8,"column_end":28},"name":"offset_from_utc_date","qualname":"::offset::TimeZone::offset_from_utc_date","value":"pub fn offset_from_utc_date(&Self, &NaiveDate) -> Self::Offset","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Creates the offset for given UTC `NaiveDate`. This cannot fail.\n","sig":null,"attributes":[{"value":"/ Creates the offset for given UTC `NaiveDate`. This cannot fail.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":56665,"byte_end":56732,"line_start":445,"line_end":445,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":56886,"byte_end":56910,"line_start":449,"line_end":449,"column_start":8,"column_end":32},"name":"offset_from_utc_datetime","qualname":"::offset::TimeZone::offset_from_utc_datetime","value":"pub fn offset_from_utc_datetime(&Self, &NaiveDateTime) -> Self::Offset","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Creates the offset for given UTC `NaiveDateTime`. This cannot fail.\n","sig":null,"attributes":[{"value":"/ Creates the offset for given UTC `NaiveDateTime`. This cannot fail.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":56807,"byte_end":56878,"line_start":448,"line_end":448,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":57117,"byte_end":57130,"line_start":453,"line_end":453,"column_start":8,"column_end":21},"name":"from_utc_date","qualname":"::offset::TimeZone::from_utc_date","value":"pub fn from_utc_date(&Self, &NaiveDate) -> Date<Self>","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Converts the UTC `NaiveDate` to the local time.\n The UTC is continuous and thus this cannot fail (but can give the duplicate local time).\n","sig":null,"attributes":[{"value":"/ Converts the UTC `NaiveDate` to the local time.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":56961,"byte_end":57012,"line_start":451,"line_end":451,"column_start":5,"column_end":56}},{"value":"/ The UTC is continuous and thus this cannot fail (but can give the duplicate local time).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":57017,"byte_end":57109,"line_start":452,"line_end":452,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":57403,"byte_end":57420,"line_start":459,"line_end":459,"column_start":8,"column_end":25},"name":"from_utc_datetime","qualname":"::offset::TimeZone::from_utc_datetime","value":"pub fn from_utc_datetime(&Self, &NaiveDateTime) -> DateTime<Self>","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Converts the UTC `NaiveDateTime` to the local time.\n The UTC is continuous and thus this cannot fail (but can give the duplicate local time).\n","sig":null,"attributes":[{"value":"/ Converts the UTC `NaiveDateTime` to the local time.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":57243,"byte_end":57298,"line_start":457,"line_end":457,"column_start":5,"column_end":60}},{"value":"/ The UTC is continuous and thus this cannot fail (but can give the duplicate local time).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":57303,"byte_end":57395,"line_start":458,"line_end":458,"column_start":5,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":1967},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":60748,"byte_end":60759,"line_start":23,"line_end":23,"column_start":12,"column_end":23},"name":"FixedOffset","qualname":"::offset::fixed::FixedOffset","value":"FixedOffset {  }","parent":null,"children":[{"krate":0,"index":1968}],"decl_id":null,"docs":" The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.","sig":null,"attributes":[{"value":"/ The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":60372,"byte_end":60443,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":60444,"byte_end":60447,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Using the [`TimeZone`](./trait.TimeZone.html) methods","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":60448,"byte_end":60505,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/ on a `FixedOffset` struct is the preferred way to construct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":60506,"byte_end":60569,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/ `DateTime<FixedOffset>` instances. See the [`east`](#method.east) and","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":60570,"byte_end":60643,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ [`west`](#method.west) methods for examples.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":60644,"byte_end":60692,"line_start":21,"line_end":21,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":61363,"byte_end":61367,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"east","qualname":"<FixedOffset>::east","value":"pub fn east(i32) -> FixedOffset","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\n The negative `secs` means the Western Hemisphere.","sig":null,"attributes":[{"value":"/ Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":60814,"byte_end":60902,"line_start":28,"line_end":28,"column_start":5,"column_end":93}},{"value":"/ The negative `secs` means the Western Hemisphere.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":60907,"byte_end":60960,"line_start":29,"line_end":29,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":60965,"byte_end":60968,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-bound `secs`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":60973,"byte_end":61011,"line_start":31,"line_end":31,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":61016,"byte_end":61019,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":61024,"byte_end":61037,"line_start":33,"line_end":33,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":61042,"byte_end":61045,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":61050,"byte_end":61058,"line_start":35,"line_end":35,"column_start":5,"column_end":13}},{"value":"/ use chrono::{FixedOffset, TimeZone};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":61063,"byte_end":61103,"line_start":36,"line_end":36,"column_start":5,"column_end":45}},{"value":"/ let hour = 3600;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":61108,"byte_end":61128,"line_start":37,"line_end":37,"column_start":5,"column_end":25}},{"value":"/ let datetime = FixedOffset::east(5 * hour).ymd(2016, 11, 08)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":61133,"byte_end":61197,"line_start":38,"line_end":38,"column_start":5,"column_end":69}},{"value":"/                                           .and_hms(0, 0, 0);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":61202,"byte_end":61266,"line_start":39,"line_end":39,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(&datetime.to_rfc3339(), \"2016-11-08T00:00:00+05:00\")","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":61271,"byte_end":61338,"line_start":40,"line_end":40,"column_start":5,"column_end":72}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":61343,"byte_end":61351,"line_start":41,"line_end":41,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":61702,"byte_end":61710,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"east_opt","qualname":"<FixedOffset>::east_opt","value":"pub fn east_opt(i32) -> Option<FixedOffset>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\n The negative `secs` means the Western Hemisphere.","sig":null,"attributes":[{"value":"/ Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":61485,"byte_end":61573,"line_start":46,"line_end":46,"column_start":5,"column_end":93}},{"value":"/ The negative `secs` means the Western Hemisphere.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":61578,"byte_end":61631,"line_start":47,"line_end":47,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":61636,"byte_end":61639,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-bound `secs`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":61644,"byte_end":61690,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":62452,"byte_end":62456,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"west","qualname":"<FixedOffset>::west","value":"pub fn west(i32) -> FixedOffset","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\n The negative `secs` means the Eastern Hemisphere.","sig":null,"attributes":[{"value":"/ Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":61903,"byte_end":61991,"line_start":58,"line_end":58,"column_start":5,"column_end":93}},{"value":"/ The negative `secs` means the Eastern Hemisphere.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":61996,"byte_end":62049,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":62054,"byte_end":62057,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-bound `secs`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":62062,"byte_end":62100,"line_start":61,"line_end":61,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":62105,"byte_end":62108,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":62113,"byte_end":62126,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":62131,"byte_end":62134,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":62139,"byte_end":62147,"line_start":65,"line_end":65,"column_start":5,"column_end":13}},{"value":"/ use chrono::{FixedOffset, TimeZone};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":62152,"byte_end":62192,"line_start":66,"line_end":66,"column_start":5,"column_end":45}},{"value":"/ let hour = 3600;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":62197,"byte_end":62217,"line_start":67,"line_end":67,"column_start":5,"column_end":25}},{"value":"/ let datetime = FixedOffset::west(5 * hour).ymd(2016, 11, 08)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":62222,"byte_end":62286,"line_start":68,"line_end":68,"column_start":5,"column_end":69}},{"value":"/                                           .and_hms(0, 0, 0);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":62291,"byte_end":62355,"line_start":69,"line_end":69,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(&datetime.to_rfc3339(), \"2016-11-08T00:00:00-05:00\")","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":62360,"byte_end":62427,"line_start":70,"line_end":70,"column_start":5,"column_end":72}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":62432,"byte_end":62440,"line_start":71,"line_end":71,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":62791,"byte_end":62799,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"west_opt","qualname":"<FixedOffset>::west_opt","value":"pub fn west_opt(i32) -> Option<FixedOffset>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\n The negative `secs` means the Eastern Hemisphere.","sig":null,"attributes":[{"value":"/ Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":62574,"byte_end":62662,"line_start":76,"line_end":76,"column_start":5,"column_end":93}},{"value":"/ The negative `secs` means the Eastern Hemisphere.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":62667,"byte_end":62720,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":62725,"byte_end":62728,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-bound `secs`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":62733,"byte_end":62779,"line_start":79,"line_end":79,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":63098,"byte_end":63113,"line_start":90,"line_end":90,"column_start":12,"column_end":27},"name":"local_minus_utc","qualname":"<FixedOffset>::local_minus_utc","value":"pub fn local_minus_utc(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of seconds to add to convert from UTC to the local time.\n","sig":null,"attributes":[{"value":"/ Returns the number of seconds to add to convert from UTC to the local time.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":62993,"byte_end":63072,"line_start":88,"line_end":88,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":63077,"byte_end":63086,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":63275,"byte_end":63290,"line_start":96,"line_end":96,"column_start":12,"column_end":27},"name":"utc_minus_local","qualname":"<FixedOffset>::utc_minus_local","value":"pub fn utc_minus_local(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of seconds to add to convert from the local time to UTC.\n","sig":null,"attributes":[{"value":"/ Returns the number of seconds to add to convert from the local time to UTC.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":63170,"byte_end":63249,"line_start":94,"line_end":94,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":63254,"byte_end":63263,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1982},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":70194,"byte_end":70199,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"name":"Local","qualname":"::offset::local::Local","value":"","parent":null,"children":[],"decl_id":null,"docs":" The local timescale. This is implemented via the standard `time` crate.","sig":null,"attributes":[{"value":"/ The local timescale. This is implemented via the standard `time` crate.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":69738,"byte_end":69813,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":69814,"byte_end":69817,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Using the [`TimeZone`](./trait.TimeZone.html) methods","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":69818,"byte_end":69875,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"/ on the Local struct is the preferred way to construct `DateTime<Local>`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":69876,"byte_end":69951,"line_start":69,"line_end":69,"column_start":1,"column_end":76}},{"value":"/ instances.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":69952,"byte_end":69966,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":69967,"byte_end":69970,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":69971,"byte_end":69984,"line_start":72,"line_end":72,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":69985,"byte_end":69988,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":69989,"byte_end":69997,"line_start":74,"line_end":74,"column_start":1,"column_end":9}},{"value":"/ use chrono::{Local, DateTime, TimeZone};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":69998,"byte_end":70042,"line_start":75,"line_end":75,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":70043,"byte_end":70046,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let dt: DateTime<Local> = Local::now();","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":70047,"byte_end":70090,"line_start":77,"line_end":77,"column_start":1,"column_end":44}},{"value":"/ let dt: DateTime<Local> = Local.timestamp(0, 0);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":70091,"byte_end":70143,"line_start":78,"line_end":78,"column_start":1,"column_end":53}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":70144,"byte_end":70152,"line_start":79,"line_end":79,"column_start":1,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":70290,"byte_end":70295,"line_start":85,"line_end":85,"column_start":12,"column_end":17},"name":"today","qualname":"<Local>::today","value":"pub fn today() -> Date<Local>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Date` which corresponds to the current date.\n","sig":null,"attributes":[{"value":"/ Returns a `Date` which corresponds to the current date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":70219,"byte_end":70278,"line_start":84,"line_end":84,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":70496,"byte_end":70499,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"now","qualname":"<Local>::now","value":"pub fn now() -> DateTime<Local>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `DateTime` which corresponds to the current date.\n","sig":null,"attributes":[{"value":"/ Returns a `DateTime` which corresponds to the current date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":70354,"byte_end":70417,"line_start":89,"line_end":89,"column_start":5,"column_end":68}},{"value":"cfg(not(all(target_arch = \"wasm32\", feature = \"wasmbind\")))","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":70422,"byte_end":70484,"line_start":90,"line_end":90,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1989},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":75251,"byte_end":75254,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"Utc","qualname":"::offset::utc::Utc","value":"","parent":null,"children":[],"decl_id":null,"docs":" The UTC time zone. This is the most efficient time zone when you don't need the local time.\n It is also used as an offset (which is also a dummy type).","sig":null,"attributes":[{"value":"/ The UTC time zone. This is the most efficient time zone when you don't need the local time.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":74605,"byte_end":74700,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ It is also used as an offset (which is also a dummy type).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":74701,"byte_end":74763,"line_start":16,"line_end":16,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":74764,"byte_end":74767,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Using the [`TimeZone`](./trait.TimeZone.html) methods","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":74768,"byte_end":74825,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/ on the UTC struct is the preferred way to construct `DateTime<Utc>`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":74826,"byte_end":74897,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ instances.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":74898,"byte_end":74912,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":74913,"byte_end":74916,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":74917,"byte_end":74930,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":74931,"byte_end":74934,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":74935,"byte_end":74943,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ use chrono::{DateTime, TimeZone, NaiveDateTime, Utc};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":74944,"byte_end":75001,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":75002,"byte_end":75005,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let dt = DateTime::<Utc>::from_utc(NaiveDateTime::from_timestamp(61, 0), Utc);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":75006,"byte_end":75088,"line_start":27,"line_end":27,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":75089,"byte_end":75092,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Utc.timestamp(61, 0), dt);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":75093,"byte_end":75134,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 1, 1), dt);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":75135,"byte_end":75192,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":75193,"byte_end":75201,"line_start":31,"line_end":31,"column_start":1,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":75367,"byte_end":75372,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"today","qualname":"<Utc>::today","value":"pub fn today() -> Date<Utc>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Date` which corresponds to the current date.\n","sig":null,"attributes":[{"value":"/ Returns a `Date` which corresponds to the current date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":75296,"byte_end":75355,"line_start":37,"line_end":37,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":75557,"byte_end":75560,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"now","qualname":"<Utc>::now","value":"pub fn now() -> DateTime<Utc>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `DateTime` which corresponds to the current date.\n","sig":null,"attributes":[{"value":"/ Returns a `DateTime` which corresponds to the current date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":75415,"byte_end":75478,"line_start":40,"line_end":40,"column_start":5,"column_end":68}},{"value":"cfg(not(all(target_arch = \"wasm32\", feature = \"wasmbind\")))","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":75483,"byte_end":75545,"line_start":41,"line_end":41,"column_start":5,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":418},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":20331,"byte_end":20336,"line_start":461,"line_end":461,"column_start":9,"column_end":14},"name":"naive","qualname":"::naive","value":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":511},{"krate":0,"index":691},{"krate":0,"index":712},{"krate":0,"index":837},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1023}],"decl_id":null,"docs":" Date and time types unconcerned with timezones.","sig":null,"attributes":[{"value":"/ Date and time types unconcerned with timezones.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":20343,"byte_end":20394,"line_start":462,"line_end":462,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":20399,"byte_end":20402,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ They are primarily building blocks for other types","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":20407,"byte_end":20461,"line_start":464,"line_end":464,"column_start":5,"column_end":59}},{"value":"/ (e.g. [`TimeZone`](../offset/trait.TimeZone.html)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":20466,"byte_end":20521,"line_start":465,"line_end":465,"column_start":5,"column_end":60}},{"value":"/ but can be also used for the simpler date and time handling.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":20526,"byte_end":20590,"line_start":466,"line_end":466,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":2037},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":113346,"byte_end":113355,"line_start":97,"line_end":97,"column_start":12,"column_end":21},"name":"NaiveDate","qualname":"::naive::date::NaiveDate","value":"NaiveDate {  }","parent":null,"children":[{"krate":0,"index":2038}],"decl_id":null,"docs":" ISO 8601 calendar date without timezone.\n Allows for every [proleptic Gregorian date](#calendar-date)\n from Jan 1, 262145 BCE to Dec 31, 262143 CE.\n Also supports the conversion from ISO 8601 ordinal and week date.","sig":null,"attributes":[{"value":"/ ISO 8601 calendar date without timezone.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":110772,"byte_end":110816,"line_start":48,"line_end":48,"column_start":1,"column_end":45}},{"value":"/ Allows for every [proleptic Gregorian date](#calendar-date)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":110817,"byte_end":110880,"line_start":49,"line_end":49,"column_start":1,"column_end":64}},{"value":"/ from Jan 1, 262145 BCE to Dec 31, 262143 CE.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":110881,"byte_end":110929,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/ Also supports the conversion from ISO 8601 ordinal and week date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":110930,"byte_end":110999,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":111000,"byte_end":111003,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Calendar Date","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":111004,"byte_end":111023,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":111024,"byte_end":111027,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The ISO 8601 **calendar date** follows the proleptic Gregorian calendar.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":111028,"byte_end":111104,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ It is like a normal civil calendar but note some slight differences:","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":111105,"byte_end":111177,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":111178,"byte_end":111181,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ * Dates before the Gregorian calendar's inception in 1582 are defined via the extrapolation.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":111182,"byte_end":111278,"line_start":58,"line_end":58,"column_start":1,"column_end":97}},{"value":"/   Be careful, as historical dates are often noted in the Julian calendar and others","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":111279,"byte_end":111366,"line_start":59,"line_end":59,"column_start":1,"column_end":88}},{"value":"/   and the transition to Gregorian may differ across countries (as late as early 20C).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":111367,"byte_end":111456,"line_start":60,"line_end":60,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":111457,"byte_end":111460,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/   (Some example: Both Shakespeare from Britain and Cervantes from Spain seemingly died","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":111461,"byte_end":111551,"line_start":62,"line_end":62,"column_start":1,"column_end":91}},{"value":"/   on the same calendar date---April 23, 1616---but in the different calendar.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":111552,"byte_end":111633,"line_start":63,"line_end":63,"column_start":1,"column_end":82}},{"value":"/   Britain used the Julian calendar at that time, so Shakespeare's death is later.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":111634,"byte_end":111720,"line_start":64,"line_end":64,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":111721,"byte_end":111724,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ * ISO 8601 calendars has the year 0, which is 1 BCE (a year before 1 CE).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":111725,"byte_end":111802,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/   If you need a typical BCE/BC and CE/AD notation for year numbers,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":111803,"byte_end":111874,"line_start":67,"line_end":67,"column_start":1,"column_end":72}},{"value":"/   use the [`Datelike::year_ce`](../trait.Datelike.html#method.year_ce) method.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":111875,"byte_end":111957,"line_start":68,"line_end":68,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":111958,"byte_end":111961,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Week Date","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":111962,"byte_end":111977,"line_start":70,"line_end":70,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":111978,"byte_end":111981,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ The ISO 8601 **week date** is a triple of year number, week number","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":111982,"byte_end":112052,"line_start":72,"line_end":72,"column_start":1,"column_end":71}},{"value":"/ and [day of the week](../enum.Weekday.html) with the following rules:","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":112053,"byte_end":112126,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":112127,"byte_end":112130,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ * A week consists of Monday through Sunday, and is always numbered within some year.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":112131,"byte_end":112219,"line_start":75,"line_end":75,"column_start":1,"column_end":89}},{"value":"/   The week number ranges from 1 to 52 or 53 depending on the year.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":112220,"byte_end":112290,"line_start":76,"line_end":76,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":112291,"byte_end":112294,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ * The week 1 of given year is defined as the first week containing January 4 of that year,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":112295,"byte_end":112389,"line_start":78,"line_end":78,"column_start":1,"column_end":95}},{"value":"/   or equivalently, the first week containing four or more days in that year.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":112390,"byte_end":112470,"line_start":79,"line_end":79,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":112471,"byte_end":112474,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ * The year number in the week date may *not* correspond to the actual Gregorian year.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":112475,"byte_end":112564,"line_start":81,"line_end":81,"column_start":1,"column_end":90}},{"value":"/   For example, January 3, 2016 (Sunday) was on the last (53rd) week of 2015.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":112565,"byte_end":112645,"line_start":82,"line_end":82,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":112646,"byte_end":112649,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Chrono's date types default to the ISO 8601 [calendar date](#calendar-date),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":112650,"byte_end":112730,"line_start":84,"line_end":84,"column_start":1,"column_end":81}},{"value":"/ but [`Datelike::iso_week`](../trait.Datelike.html#tymethod.iso_week) and","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":112731,"byte_end":112807,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/ [`Datelike::weekday`](../trait.Datelike.html#tymethod.weekday) methods","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":112808,"byte_end":112882,"line_start":86,"line_end":86,"column_start":1,"column_end":75}},{"value":"/ can be used to get the corresponding week date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":112883,"byte_end":112934,"line_start":87,"line_end":87,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":112935,"byte_end":112938,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # Ordinal Date","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":112939,"byte_end":112957,"line_start":89,"line_end":89,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":112958,"byte_end":112961,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ The ISO 8601 **ordinal date** is a pair of year number and day of the year (\"ordinal\").","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":112962,"byte_end":113053,"line_start":91,"line_end":91,"column_start":1,"column_end":92}},{"value":"/ The ordinal number ranges from 1 to 365 or 366 depending on the year.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":113054,"byte_end":113127,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ The year number is same to that of the [calendar date](#calendar-date).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":113128,"byte_end":113203,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":113204,"byte_end":113207,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This is currently the internal format of Chrono's date types.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":113208,"byte_end":113273,"line_start":95,"line_end":95,"column_start":1,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":608},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":113474,"byte_end":113482,"line_start":102,"line_end":102,"column_start":11,"column_end":19},"name":"MIN_DATE","qualname":"::naive::date::MIN_DATE","value":"NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `NaiveDate` (January 1, 262145 BCE).\n","sig":null,"attributes":[{"value":"/ The minimum possible `NaiveDate` (January 1, 262145 BCE).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":113402,"byte_end":113463,"line_start":101,"line_end":101,"column_start":1,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":609},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":113632,"byte_end":113640,"line_start":104,"line_end":104,"column_start":11,"column_end":19},"name":"MAX_DATE","qualname":"::naive::date::MAX_DATE","value":"NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `NaiveDate` (December 31, 262143 CE).\n","sig":null,"attributes":[{"value":"/ The maximum possible `NaiveDate` (December 31, 262143 CE).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":113559,"byte_end":113621,"line_start":103,"line_end":103,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":115950,"byte_end":115958,"line_start":161,"line_end":161,"column_start":12,"column_end":20},"name":"from_ymd","qualname":"<NaiveDate>::from_ymd","value":"pub fn from_ymd(i32, u32, u32) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [calendar date](#calendar-date)\n (year, month and day).","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [calendar date](#calendar-date)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":115220,"byte_end":115288,"line_start":141,"line_end":141,"column_start":5,"column_end":73}},{"value":"/ (year, month and day).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":115293,"byte_end":115319,"line_start":142,"line_end":142,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":115324,"byte_end":115327,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date, invalid month and/or day.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":115332,"byte_end":115394,"line_start":144,"line_end":144,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":115399,"byte_end":115402,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":115407,"byte_end":115420,"line_start":146,"line_end":146,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":115425,"byte_end":115428,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":115433,"byte_end":115441,"line_start":148,"line_end":148,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":115446,"byte_end":115493,"line_start":149,"line_end":149,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":115498,"byte_end":115501,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 3, 14);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":115506,"byte_end":115551,"line_start":151,"line_end":151,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(d.year(), 2015);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":115556,"byte_end":115587,"line_start":152,"line_end":152,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d.month(), 3);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":115592,"byte_end":115621,"line_start":153,"line_end":153,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(d.day(), 14);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":115626,"byte_end":115654,"line_start":154,"line_end":154,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(d.ordinal(), 73); // day of year","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":115659,"byte_end":115706,"line_start":155,"line_end":155,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":115711,"byte_end":115753,"line_start":156,"line_end":156,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.iso_week().week(), 11);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":115758,"byte_end":115798,"line_start":157,"line_end":157,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(d.weekday(), Weekday::Sat);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":115803,"byte_end":115845,"line_start":158,"line_end":158,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":115850,"byte_end":115925,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":115930,"byte_end":115938,"line_start":160,"line_end":160,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":116809,"byte_end":116821,"line_start":184,"line_end":184,"column_start":12,"column_end":24},"name":"from_ymd_opt","qualname":"<NaiveDate>::from_ymd_opt","value":"pub fn from_ymd_opt(i32, u32, u32) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [calendar date](#calendar-date)\n (year, month and day).","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [calendar date](#calendar-date)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":116107,"byte_end":116175,"line_start":165,"line_end":165,"column_start":5,"column_end":73}},{"value":"/ (year, month and day).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":116180,"byte_end":116206,"line_start":166,"line_end":166,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":116211,"byte_end":116214,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date, invalid month and/or day.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":116219,"byte_end":116289,"line_start":168,"line_end":168,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":116294,"byte_end":116297,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":116302,"byte_end":116315,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":116320,"byte_end":116323,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":116328,"byte_end":116336,"line_start":172,"line_end":172,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":116341,"byte_end":116367,"line_start":173,"line_end":173,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":116372,"byte_end":116375,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ let from_ymd_opt = NaiveDate::from_ymd_opt;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":116380,"byte_end":116427,"line_start":175,"line_end":175,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":116432,"byte_end":116435,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ assert!(from_ymd_opt(2015, 3, 14).is_some());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":116440,"byte_end":116489,"line_start":177,"line_end":177,"column_start":5,"column_end":54}},{"value":"/ assert!(from_ymd_opt(2015, 0, 14).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":116494,"byte_end":116543,"line_start":178,"line_end":178,"column_start":5,"column_end":54}},{"value":"/ assert!(from_ymd_opt(2015, 2, 29).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":116548,"byte_end":116597,"line_start":179,"line_end":179,"column_start":5,"column_end":54}},{"value":"/ assert!(from_ymd_opt(-4, 2, 29).is_some()); // 5 BCE is a leap year","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":116602,"byte_end":116673,"line_start":180,"line_end":180,"column_start":5,"column_end":76}},{"value":"/ assert!(from_ymd_opt(400000, 1, 1).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":116678,"byte_end":116728,"line_start":181,"line_end":181,"column_start":5,"column_end":55}},{"value":"/ assert!(from_ymd_opt(-400000, 1, 1).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":116733,"byte_end":116784,"line_start":182,"line_end":182,"column_start":5,"column_end":56}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":116789,"byte_end":116797,"line_start":183,"line_end":183,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117715,"byte_end":117722,"line_start":209,"line_end":209,"column_start":12,"column_end":19},"name":"from_yo","qualname":"<NaiveDate>::from_yo","value":"pub fn from_yo(i32, u32) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)\n (year and day of the year).","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117000,"byte_end":117066,"line_start":189,"line_end":189,"column_start":5,"column_end":71}},{"value":"/ (year and day of the year).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117071,"byte_end":117102,"line_start":190,"line_end":190,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117107,"byte_end":117110,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date and/or invalid day of year.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117115,"byte_end":117178,"line_start":192,"line_end":192,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117183,"byte_end":117186,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117191,"byte_end":117204,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117209,"byte_end":117212,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117217,"byte_end":117225,"line_start":196,"line_end":196,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117230,"byte_end":117277,"line_start":197,"line_end":197,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117282,"byte_end":117285,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_yo(2015, 73);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117290,"byte_end":117331,"line_start":199,"line_end":199,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(d.ordinal(), 73);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117336,"byte_end":117368,"line_start":200,"line_end":200,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(d.year(), 2015);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117373,"byte_end":117404,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d.month(), 3);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117409,"byte_end":117438,"line_start":202,"line_end":202,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(d.day(), 14);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117443,"byte_end":117471,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117476,"byte_end":117518,"line_start":204,"line_end":204,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.iso_week().week(), 11);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117523,"byte_end":117563,"line_start":205,"line_end":205,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(d.weekday(), Weekday::Sat);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117568,"byte_end":117610,"line_start":206,"line_end":206,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117615,"byte_end":117690,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117695,"byte_end":117703,"line_start":208,"line_end":208,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":118592,"byte_end":118603,"line_start":233,"line_end":233,"column_start":12,"column_end":23},"name":"from_yo_opt","qualname":"<NaiveDate>::from_yo_opt","value":"pub fn from_yo_opt(i32, u32) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)\n (year and day of the year).","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117859,"byte_end":117925,"line_start":213,"line_end":213,"column_start":5,"column_end":71}},{"value":"/ (year and day of the year).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117930,"byte_end":117961,"line_start":214,"line_end":214,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117966,"byte_end":117969,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date and/or invalid day of year.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":117974,"byte_end":118045,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":118050,"byte_end":118053,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":118058,"byte_end":118071,"line_start":218,"line_end":218,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":118076,"byte_end":118079,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":118084,"byte_end":118092,"line_start":220,"line_end":220,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":118097,"byte_end":118123,"line_start":221,"line_end":221,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":118128,"byte_end":118131,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ let from_yo_opt = NaiveDate::from_yo_opt;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":118136,"byte_end":118181,"line_start":223,"line_end":223,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":118186,"byte_end":118189,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ assert!(from_yo_opt(2015, 100).is_some());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":118194,"byte_end":118240,"line_start":225,"line_end":225,"column_start":5,"column_end":51}},{"value":"/ assert!(from_yo_opt(2015, 0).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":118245,"byte_end":118289,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/ assert!(from_yo_opt(2015, 365).is_some());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":118294,"byte_end":118340,"line_start":227,"line_end":227,"column_start":5,"column_end":51}},{"value":"/ assert!(from_yo_opt(2015, 366).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":118345,"byte_end":118391,"line_start":228,"line_end":228,"column_start":5,"column_end":51}},{"value":"/ assert!(from_yo_opt(-4, 366).is_some()); // 5 BCE is a leap year","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":118396,"byte_end":118464,"line_start":229,"line_end":229,"column_start":5,"column_end":73}},{"value":"/ assert!(from_yo_opt(400000, 1).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":118469,"byte_end":118515,"line_start":230,"line_end":230,"column_start":5,"column_end":51}},{"value":"/ assert!(from_yo_opt(-400000, 1).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":118520,"byte_end":118567,"line_start":231,"line_end":231,"column_start":5,"column_end":52}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":118572,"byte_end":118580,"line_start":232,"line_end":232,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":119609,"byte_end":119620,"line_start":259,"line_end":259,"column_start":12,"column_end":23},"name":"from_isoywd","qualname":"<NaiveDate>::from_isoywd","value":"pub fn from_isoywd(i32, u32, Weekday) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ISO week date](#week-date)\n (year, week number and day of the week).\n The resulting `NaiveDate` may have a different year from the input year.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [ISO week date](#week-date)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":118769,"byte_end":118833,"line_start":238,"line_end":238,"column_start":5,"column_end":69}},{"value":"/ (year, week number and day of the week).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":118838,"byte_end":118882,"line_start":239,"line_end":239,"column_start":5,"column_end":49}},{"value":"/ The resulting `NaiveDate` may have a different year from the input year.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":118887,"byte_end":118963,"line_start":240,"line_end":240,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":118968,"byte_end":118971,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date and/or invalid week number.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":118976,"byte_end":119039,"line_start":242,"line_end":242,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":119044,"byte_end":119047,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":119052,"byte_end":119065,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":119070,"byte_end":119073,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":119078,"byte_end":119086,"line_start":246,"line_end":246,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":119091,"byte_end":119138,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":119143,"byte_end":119146,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_isoywd(2015, 11, Weekday::Sat);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":119151,"byte_end":119210,"line_start":249,"line_end":249,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":119215,"byte_end":119257,"line_start":250,"line_end":250,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.iso_week().week(), 11);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":119262,"byte_end":119302,"line_start":251,"line_end":251,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(d.weekday(), Weekday::Sat);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":119307,"byte_end":119349,"line_start":252,"line_end":252,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.year(), 2015);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":119354,"byte_end":119385,"line_start":253,"line_end":253,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d.month(), 3);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":119390,"byte_end":119419,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(d.day(), 14);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":119424,"byte_end":119452,"line_start":255,"line_end":255,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(d.ordinal(), 73); // day of year","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":119457,"byte_end":119504,"line_start":256,"line_end":256,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":119509,"byte_end":119584,"line_start":257,"line_end":257,"column_start":5,"column_end":80}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":119589,"byte_end":119597,"line_start":258,"line_end":258,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":121983,"byte_end":121998,"line_start":307,"line_end":307,"column_start":12,"column_end":27},"name":"from_isoywd_opt","qualname":"<NaiveDate>::from_isoywd_opt","value":"pub fn from_isoywd_opt(i32, u32, Weekday) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ISO week date](#week-date)\n (year, week number and day of the week).\n The resulting `NaiveDate` may have a different year from the input year.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [ISO week date](#week-date)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":119782,"byte_end":119846,"line_start":263,"line_end":263,"column_start":5,"column_end":69}},{"value":"/ (year, week number and day of the week).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":119851,"byte_end":119895,"line_start":264,"line_end":264,"column_start":5,"column_end":49}},{"value":"/ The resulting `NaiveDate` may have a different year from the input year.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":119900,"byte_end":119976,"line_start":265,"line_end":265,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":119981,"byte_end":119984,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date and/or invalid week number.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":119989,"byte_end":120060,"line_start":267,"line_end":267,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120065,"byte_end":120068,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120073,"byte_end":120086,"line_start":269,"line_end":269,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120091,"byte_end":120094,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120099,"byte_end":120107,"line_start":271,"line_end":271,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120112,"byte_end":120149,"line_start":272,"line_end":272,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120154,"byte_end":120157,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120162,"byte_end":120201,"line_start":274,"line_end":274,"column_start":5,"column_end":44}},{"value":"/ let from_isoywd_opt = NaiveDate::from_isoywd_opt;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120206,"byte_end":120259,"line_start":275,"line_end":275,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120264,"byte_end":120267,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 0, Weekday::Sun), None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120272,"byte_end":120333,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 10, Weekday::Sun), Some(from_ymd(2015, 3, 8)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120338,"byte_end":120422,"line_start":278,"line_end":278,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 30, Weekday::Mon), Some(from_ymd(2015, 7, 20)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120427,"byte_end":120512,"line_start":279,"line_end":279,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 60, Weekday::Mon), None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120517,"byte_end":120579,"line_start":280,"line_end":280,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120584,"byte_end":120587,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_isoywd_opt(400000, 10, Weekday::Fri), None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120592,"byte_end":120656,"line_start":282,"line_end":282,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(from_isoywd_opt(-400000, 10, Weekday::Sat), None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120661,"byte_end":120726,"line_start":283,"line_end":283,"column_start":5,"column_end":70}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120731,"byte_end":120739,"line_start":284,"line_end":284,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120744,"byte_end":120747,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ The year number of ISO week date may differ from that of the calendar date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120752,"byte_end":120831,"line_start":286,"line_end":286,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120836,"byte_end":120839,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120844,"byte_end":120852,"line_start":288,"line_end":288,"column_start":5,"column_end":13}},{"value":"/ # use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120857,"byte_end":120896,"line_start":289,"line_end":289,"column_start":5,"column_end":44}},{"value":"/ # let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120901,"byte_end":120942,"line_start":290,"line_end":290,"column_start":5,"column_end":46}},{"value":"/ # let from_isoywd_opt = NaiveDate::from_isoywd_opt;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":120947,"byte_end":121002,"line_start":291,"line_end":291,"column_start":5,"column_end":60}},{"value":"/ //           Mo Tu We Th Fr Sa Su","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":121007,"byte_end":121044,"line_start":292,"line_end":292,"column_start":5,"column_end":42}},{"value":"/ // 2014-W52  22 23 24 25 26 27 28    has 4+ days of new year,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":121049,"byte_end":121114,"line_start":293,"line_end":293,"column_start":5,"column_end":70}},{"value":"/ // 2015-W01  29 30 31  1  2  3  4 <- so this is the first week","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":121119,"byte_end":121185,"line_start":294,"line_end":294,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(from_isoywd_opt(2014, 52, Weekday::Sun), Some(from_ymd(2014, 12, 28)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":121190,"byte_end":121276,"line_start":295,"line_end":295,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(from_isoywd_opt(2014, 53, Weekday::Mon), None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":121281,"byte_end":121343,"line_start":296,"line_end":296,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 1, Weekday::Mon), Some(from_ymd(2014, 12, 29)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":121348,"byte_end":121433,"line_start":297,"line_end":297,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":121438,"byte_end":121441,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ // 2015-W52  21 22 23 24 25 26 27    has 4+ days of old year,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":121446,"byte_end":121511,"line_start":299,"line_end":299,"column_start":5,"column_end":70}},{"value":"/ // 2015-W53  28 29 30 31  1  2  3 <- so this is the last week","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":121516,"byte_end":121581,"line_start":300,"line_end":300,"column_start":5,"column_end":70}},{"value":"/ // 2016-W01   4  5  6  7  8  9 10","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":121586,"byte_end":121623,"line_start":301,"line_end":301,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 52, Weekday::Sun), Some(from_ymd(2015, 12, 27)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":121628,"byte_end":121714,"line_start":302,"line_end":302,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 53, Weekday::Sun), Some(from_ymd(2016, 1, 3)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":121719,"byte_end":121803,"line_start":303,"line_end":303,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 54, Weekday::Mon), None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":121808,"byte_end":121870,"line_start":304,"line_end":304,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(from_isoywd_opt(2016, 1, Weekday::Mon), Some(from_ymd(2016, 1, 4)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":121875,"byte_end":121958,"line_start":305,"line_end":305,"column_start":5,"column_end":88}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":121963,"byte_end":121971,"line_start":306,"line_end":306,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":124876,"byte_end":124897,"line_start":377,"line_end":377,"column_start":12,"column_end":33},"name":"from_num_days_from_ce","qualname":"<NaiveDate>::from_num_days_from_ce","value":"pub fn from_num_days_from_ce(i32) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1)\n in the proleptic Gregorian calendar.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123148,"byte_end":123226,"line_start":333,"line_end":333,"column_start":5,"column_end":83}},{"value":"/ in the proleptic Gregorian calendar.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123231,"byte_end":123271,"line_start":334,"line_end":334,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123276,"byte_end":123279,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123284,"byte_end":123320,"line_start":336,"line_end":336,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123325,"byte_end":123328,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123333,"byte_end":123346,"line_start":338,"line_end":338,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123351,"byte_end":123354,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123359,"byte_end":123367,"line_start":340,"line_end":340,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123372,"byte_end":123419,"line_start":341,"line_end":341,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123424,"byte_end":123427,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_num_days_from_ce(735671);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123432,"byte_end":123485,"line_start":343,"line_end":343,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123490,"byte_end":123565,"line_start":344,"line_end":344,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(d.year(), 2015);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123570,"byte_end":123601,"line_start":345,"line_end":345,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d.month(), 3);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123606,"byte_end":123635,"line_start":346,"line_end":346,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(d.day(), 14);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123640,"byte_end":123668,"line_start":347,"line_end":347,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(d.ordinal(), 73); // day of year","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123673,"byte_end":123720,"line_start":348,"line_end":348,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123725,"byte_end":123767,"line_start":349,"line_end":349,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.iso_week().week(), 11);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123772,"byte_end":123812,"line_start":350,"line_end":350,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(d.weekday(), Weekday::Sat);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123817,"byte_end":123859,"line_start":351,"line_end":351,"column_start":5,"column_end":47}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123864,"byte_end":123872,"line_start":352,"line_end":352,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123877,"byte_end":123880,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ While not directly supported by Chrono,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123885,"byte_end":123928,"line_start":354,"line_end":354,"column_start":5,"column_end":48}},{"value":"/ it is easy to convert from the Julian day number","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123933,"byte_end":123985,"line_start":355,"line_end":355,"column_start":5,"column_end":57}},{"value":"/ (January 1, 4713 BCE in the *Julian* calendar being Day 0)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":123990,"byte_end":124052,"line_start":356,"line_end":356,"column_start":5,"column_end":67}},{"value":"/ to Gregorian with this method.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":124057,"byte_end":124091,"line_start":357,"line_end":357,"column_start":5,"column_end":39}},{"value":"/ (Note that this panics when `jd` is out of range.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":124096,"byte_end":124150,"line_start":358,"line_end":358,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":124155,"byte_end":124158,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":124163,"byte_end":124171,"line_start":360,"line_end":360,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":124176,"byte_end":124202,"line_start":361,"line_end":361,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":124207,"byte_end":124210,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ fn jd_to_date(jd: i32) -> NaiveDate {","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":124215,"byte_end":124256,"line_start":363,"line_end":363,"column_start":5,"column_end":46}},{"value":"/     // keep in mind that the Julian day number is 0-based","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":124261,"byte_end":124322,"line_start":364,"line_end":364,"column_start":5,"column_end":66}},{"value":"/     // while this method requires an 1-based number.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":124327,"byte_end":124383,"line_start":365,"line_end":365,"column_start":5,"column_end":61}},{"value":"/     NaiveDate::from_num_days_from_ce(jd - 1721425)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":124388,"byte_end":124442,"line_start":366,"line_end":366,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":124447,"byte_end":124452,"line_start":367,"line_end":367,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":124457,"byte_end":124460,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ // January 1, 4713 BCE in Julian = November 24, 4714 BCE in Gregorian","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":124465,"byte_end":124538,"line_start":369,"line_end":369,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(jd_to_date(0), NaiveDate::from_ymd(-4713, 11, 24));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":124543,"byte_end":124609,"line_start":370,"line_end":370,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":124614,"byte_end":124617,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(jd_to_date(1721426), NaiveDate::from_ymd(1, 1, 1));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":124622,"byte_end":124688,"line_start":372,"line_end":372,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(jd_to_date(2450000), NaiveDate::from_ymd(1995, 10, 9));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":124693,"byte_end":124763,"line_start":373,"line_end":373,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(jd_to_date(2451545), NaiveDate::from_ymd(2000, 1, 1));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":124768,"byte_end":124837,"line_start":374,"line_end":374,"column_start":5,"column_end":74}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":124842,"byte_end":124850,"line_start":375,"line_end":375,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":124855,"byte_end":124864,"line_start":376,"line_end":376,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":125843,"byte_end":125868,"line_start":401,"line_end":401,"column_start":12,"column_end":37},"name":"from_num_days_from_ce_opt","qualname":"<NaiveDate>::from_num_days_from_ce_opt","value":"pub fn from_num_days_from_ce_opt(i32) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1)\n in the proleptic Gregorian calendar.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":125014,"byte_end":125092,"line_start":381,"line_end":381,"column_start":5,"column_end":83}},{"value":"/ in the proleptic Gregorian calendar.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":125097,"byte_end":125137,"line_start":382,"line_end":382,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":125142,"byte_end":125145,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":125150,"byte_end":125194,"line_start":384,"line_end":384,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":125199,"byte_end":125202,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":125207,"byte_end":125220,"line_start":386,"line_end":386,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":125225,"byte_end":125228,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":125233,"byte_end":125241,"line_start":388,"line_end":388,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":125246,"byte_end":125272,"line_start":389,"line_end":389,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":125277,"byte_end":125280,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ let from_ndays_opt = NaiveDate::from_num_days_from_ce_opt;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":125285,"byte_end":125347,"line_start":391,"line_end":391,"column_start":5,"column_end":67}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":125352,"byte_end":125391,"line_start":392,"line_end":392,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":125396,"byte_end":125399,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_ndays_opt(730_000),      Some(from_ymd(1999, 9, 3)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":125404,"byte_end":125477,"line_start":394,"line_end":394,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(from_ndays_opt(1),            Some(from_ymd(1, 1, 1)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":125482,"byte_end":125552,"line_start":395,"line_end":395,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(from_ndays_opt(0),            Some(from_ymd(0, 12, 31)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":125557,"byte_end":125629,"line_start":396,"line_end":396,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(from_ndays_opt(-1),           Some(from_ymd(0, 12, 30)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":125634,"byte_end":125706,"line_start":397,"line_end":397,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(from_ndays_opt(100_000_000),  None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":125711,"byte_end":125762,"line_start":398,"line_end":398,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(from_ndays_opt(-100_000_000), None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":125767,"byte_end":125818,"line_start":399,"line_end":399,"column_start":5,"column_end":56}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":125823,"byte_end":125831,"line_start":400,"line_end":400,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127890,"byte_end":127904,"line_start":452,"line_end":452,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<NaiveDate>::parse_from_str","value":"pub fn parse_from_str(&str, &str) -> ParseResult<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new `NaiveDate`.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and returns a new `NaiveDate`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":126321,"byte_end":126404,"line_start":410,"line_end":410,"column_start":5,"column_end":88}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":126409,"byte_end":126479,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":126484,"byte_end":126522,"line_start":412,"line_end":412,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":126527,"byte_end":126530,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":126535,"byte_end":126548,"line_start":414,"line_end":414,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":126553,"byte_end":126556,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":126561,"byte_end":126569,"line_start":416,"line_end":416,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":126574,"byte_end":126600,"line_start":417,"line_end":417,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":126605,"byte_end":126608,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ let parse_from_str = NaiveDate::parse_from_str;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":126613,"byte_end":126664,"line_start":419,"line_end":419,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":126669,"byte_end":126672,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(parse_from_str(\"2015-09-05\", \"%Y-%m-%d\"),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":126677,"byte_end":126733,"line_start":421,"line_end":421,"column_start":5,"column_end":61}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 9, 5)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":126738,"byte_end":126790,"line_start":422,"line_end":422,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(parse_from_str(\"5sep2015\", \"%d%b%Y\"),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":126795,"byte_end":126847,"line_start":423,"line_end":423,"column_start":5,"column_end":57}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 9, 5)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":126852,"byte_end":126904,"line_start":424,"line_end":424,"column_start":5,"column_end":57}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":126909,"byte_end":126917,"line_start":425,"line_end":425,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":126922,"byte_end":126925,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ Time and offset is ignored for the purpose of parsing.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":126930,"byte_end":126988,"line_start":427,"line_end":427,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":126993,"byte_end":126996,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127001,"byte_end":127009,"line_start":429,"line_end":429,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127014,"byte_end":127042,"line_start":430,"line_end":430,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveDate::parse_from_str;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127047,"byte_end":127100,"line_start":431,"line_end":431,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127105,"byte_end":127186,"line_start":432,"line_end":432,"column_start":5,"column_end":86}},{"value":"/            Ok(NaiveDate::from_ymd(2014, 5, 17)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127191,"byte_end":127244,"line_start":433,"line_end":433,"column_start":5,"column_end":58}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127249,"byte_end":127257,"line_start":434,"line_end":434,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127262,"byte_end":127265,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ Out-of-bound dates or insufficient fields are errors.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127270,"byte_end":127327,"line_start":436,"line_end":436,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127332,"byte_end":127335,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127340,"byte_end":127348,"line_start":438,"line_end":438,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127353,"byte_end":127381,"line_start":439,"line_end":439,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveDate::parse_from_str;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127386,"byte_end":127439,"line_start":440,"line_end":440,"column_start":5,"column_end":58}},{"value":"/ assert!(parse_from_str(\"2015/9\", \"%Y/%m\").is_err());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127444,"byte_end":127500,"line_start":441,"line_end":441,"column_start":5,"column_end":61}},{"value":"/ assert!(parse_from_str(\"2015/9/31\", \"%Y/%m/%d\").is_err());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127505,"byte_end":127567,"line_start":442,"line_end":442,"column_start":5,"column_end":67}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127572,"byte_end":127580,"line_start":443,"line_end":443,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127585,"byte_end":127588,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ All parsed fields should be consistent to each other, otherwise it's an error.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127593,"byte_end":127675,"line_start":445,"line_end":445,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127680,"byte_end":127683,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127688,"byte_end":127696,"line_start":447,"line_end":447,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127701,"byte_end":127729,"line_start":448,"line_end":448,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveDate::parse_from_str;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127734,"byte_end":127787,"line_start":449,"line_end":449,"column_start":5,"column_end":58}},{"value":"/ assert!(parse_from_str(\"Sat, 09 Aug 2013\", \"%a, %d %b %Y\").is_err());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127792,"byte_end":127865,"line_start":450,"line_end":450,"column_start":5,"column_end":78}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":127870,"byte_end":127878,"line_start":451,"line_end":451,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128558,"byte_end":128566,"line_start":473,"line_end":473,"column_start":12,"column_end":20},"name":"and_time","qualname":"<NaiveDate>::and_time","value":"pub fn and_time(&Self, NaiveTime) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128097,"byte_end":128173,"line_start":458,"line_end":458,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128178,"byte_end":128181,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128186,"byte_end":128199,"line_start":460,"line_end":460,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128204,"byte_end":128207,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128212,"byte_end":128220,"line_start":462,"line_end":462,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, NaiveTime, NaiveDateTime};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128225,"byte_end":128279,"line_start":463,"line_end":463,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128284,"byte_end":128287,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128292,"byte_end":128336,"line_start":465,"line_end":465,"column_start":5,"column_end":49}},{"value":"/ let t = NaiveTime::from_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128341,"byte_end":128396,"line_start":466,"line_end":466,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128401,"byte_end":128404,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_time(t);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128409,"byte_end":128451,"line_start":468,"line_end":468,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(dt.date(), d);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128456,"byte_end":128485,"line_start":469,"line_end":469,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dt.time(), t);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128490,"byte_end":128519,"line_start":470,"line_end":470,"column_start":5,"column_end":34}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128524,"byte_end":128532,"line_start":471,"line_end":471,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128537,"byte_end":128546,"line_start":472,"line_end":472,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129382,"byte_end":129389,"line_start":497,"line_end":497,"column_start":12,"column_end":19},"name":"and_hms","qualname":"<NaiveDate>::and_hms","value":"pub fn and_hms(&Self, u32, u32, u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute and second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute and second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128661,"byte_end":128740,"line_start":477,"line_end":477,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128745,"byte_end":128748,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ No [leap second](./struct.NaiveTime.html#leap-second-handling) is allowed here;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128753,"byte_end":128836,"line_start":479,"line_end":479,"column_start":5,"column_end":88}},{"value":"/ use `NaiveDate::and_hms_*` methods with a subsecond parameter instead.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128841,"byte_end":128915,"line_start":480,"line_end":480,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128920,"byte_end":128923,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute and/or second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128928,"byte_end":128977,"line_start":482,"line_end":482,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128982,"byte_end":128985,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":128990,"byte_end":129003,"line_start":484,"line_end":484,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129008,"byte_end":129011,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129016,"byte_end":129024,"line_start":486,"line_end":486,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129029,"byte_end":129101,"line_start":487,"line_end":487,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129106,"byte_end":129109,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129114,"byte_end":129158,"line_start":489,"line_end":489,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129163,"byte_end":129166,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_hms(12, 34, 56);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129171,"byte_end":129221,"line_start":491,"line_end":491,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129226,"byte_end":129258,"line_start":492,"line_end":492,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Wed);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129263,"byte_end":129306,"line_start":493,"line_end":493,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129311,"byte_end":129343,"line_start":494,"line_end":494,"column_start":5,"column_end":37}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129348,"byte_end":129356,"line_start":495,"line_end":495,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129361,"byte_end":129370,"line_start":496,"line_end":496,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":130275,"byte_end":130286,"line_start":520,"line_end":520,"column_start":12,"column_end":23},"name":"and_hms_opt","qualname":"<NaiveDate>::and_hms_opt","value":"pub fn and_hms_opt(&Self, u32, u32, u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute and second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute and second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129522,"byte_end":129601,"line_start":501,"line_end":501,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129606,"byte_end":129609,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ No [leap second](./struct.NaiveTime.html#leap-second-handling) is allowed here;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129614,"byte_end":129697,"line_start":503,"line_end":503,"column_start":5,"column_end":88}},{"value":"/ use `NaiveDate::and_hms_*_opt` methods with a subsecond parameter instead.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129702,"byte_end":129780,"line_start":504,"line_end":504,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129785,"byte_end":129788,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute and/or second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129793,"byte_end":129850,"line_start":506,"line_end":506,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129855,"byte_end":129858,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129863,"byte_end":129876,"line_start":508,"line_end":508,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129881,"byte_end":129884,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129889,"byte_end":129897,"line_start":510,"line_end":510,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129902,"byte_end":129928,"line_start":511,"line_end":511,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129933,"byte_end":129936,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129941,"byte_end":129985,"line_start":513,"line_end":513,"column_start":5,"column_end":49}},{"value":"/ assert!(d.and_hms_opt(12, 34, 56).is_some());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":129990,"byte_end":130039,"line_start":514,"line_end":514,"column_start":5,"column_end":54}},{"value":"/ assert!(d.and_hms_opt(12, 34, 60).is_none()); // use `and_hms_milli_opt` instead","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":130044,"byte_end":130128,"line_start":515,"line_end":515,"column_start":5,"column_end":89}},{"value":"/ assert!(d.and_hms_opt(12, 60, 56).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":130133,"byte_end":130182,"line_start":516,"line_end":516,"column_start":5,"column_end":54}},{"value":"/ assert!(d.and_hms_opt(24, 34, 56).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":130187,"byte_end":130236,"line_start":517,"line_end":517,"column_start":5,"column_end":54}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":130241,"byte_end":130249,"line_start":518,"line_end":518,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":130254,"byte_end":130263,"line_start":519,"line_end":519,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":131225,"byte_end":131238,"line_start":545,"line_end":545,"column_start":12,"column_end":25},"name":"and_hms_milli","qualname":"<NaiveDate>::and_hms_milli","value":"pub fn and_hms_milli(&Self, u32, u32, u32, u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":130443,"byte_end":130535,"line_start":524,"line_end":524,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":130540,"byte_end":130543,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ The millisecond part can exceed 1,000","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":130548,"byte_end":130589,"line_start":526,"line_end":526,"column_start":5,"column_end":46}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":130594,"byte_end":130684,"line_start":527,"line_end":527,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":130689,"byte_end":130692,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":130697,"byte_end":130759,"line_start":529,"line_end":529,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":130764,"byte_end":130767,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":130772,"byte_end":130785,"line_start":531,"line_end":531,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":130790,"byte_end":130793,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":130798,"byte_end":130806,"line_start":533,"line_end":533,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":130811,"byte_end":130883,"line_start":534,"line_end":534,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":130888,"byte_end":130891,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":130896,"byte_end":130940,"line_start":536,"line_end":536,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":130945,"byte_end":130948,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":130953,"byte_end":131014,"line_start":538,"line_end":538,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":131019,"byte_end":131051,"line_start":539,"line_end":539,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Wed);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":131056,"byte_end":131099,"line_start":540,"line_end":540,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":131104,"byte_end":131136,"line_start":541,"line_end":541,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.nanosecond(), 789_000_000);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":131141,"byte_end":131186,"line_start":542,"line_end":542,"column_start":5,"column_end":50}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":131191,"byte_end":131199,"line_start":543,"line_end":543,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":131204,"byte_end":131213,"line_start":544,"line_end":544,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":132311,"byte_end":132328,"line_start":570,"line_end":570,"column_start":12,"column_end":29},"name":"and_hms_milli_opt","qualname":"<NaiveDate>::and_hms_milli_opt","value":"pub fn and_hms_milli_opt(&Self, u32, u32, u32, u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":131396,"byte_end":131488,"line_start":549,"line_end":549,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":131493,"byte_end":131496,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ The millisecond part can exceed 1,000","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":131501,"byte_end":131542,"line_start":551,"line_end":551,"column_start":5,"column_end":46}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":131547,"byte_end":131637,"line_start":552,"line_end":552,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":131642,"byte_end":131645,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":131650,"byte_end":131720,"line_start":554,"line_end":554,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":131725,"byte_end":131728,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":131733,"byte_end":131746,"line_start":556,"line_end":556,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":131751,"byte_end":131754,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":131759,"byte_end":131767,"line_start":558,"line_end":558,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":131772,"byte_end":131798,"line_start":559,"line_end":559,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":131803,"byte_end":131806,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":131811,"byte_end":131855,"line_start":561,"line_end":561,"column_start":5,"column_end":49}},{"value":"/ assert!(d.and_hms_milli_opt(12, 34, 56,   789).is_some());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":131860,"byte_end":131922,"line_start":562,"line_end":562,"column_start":5,"column_end":67}},{"value":"/ assert!(d.and_hms_milli_opt(12, 34, 59, 1_789).is_some()); // leap second","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":131927,"byte_end":132004,"line_start":563,"line_end":563,"column_start":5,"column_end":82}},{"value":"/ assert!(d.and_hms_milli_opt(12, 34, 59, 2_789).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":132009,"byte_end":132071,"line_start":564,"line_end":564,"column_start":5,"column_end":67}},{"value":"/ assert!(d.and_hms_milli_opt(12, 34, 60,   789).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":132076,"byte_end":132138,"line_start":565,"line_end":565,"column_start":5,"column_end":67}},{"value":"/ assert!(d.and_hms_milli_opt(12, 60, 56,   789).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":132143,"byte_end":132205,"line_start":566,"line_end":566,"column_start":5,"column_end":67}},{"value":"/ assert!(d.and_hms_milli_opt(24, 34, 56,   789).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":132210,"byte_end":132272,"line_start":567,"line_end":567,"column_start":5,"column_end":67}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":132277,"byte_end":132285,"line_start":568,"line_end":568,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":132290,"byte_end":132299,"line_start":569,"line_end":569,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133329,"byte_end":133342,"line_start":596,"line_end":596,"column_start":12,"column_end":25},"name":"and_hms_micro","qualname":"<NaiveDate>::and_hms_micro","value":"pub fn and_hms_micro(&Self, u32, u32, u32, u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":132539,"byte_end":132631,"line_start":575,"line_end":575,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":132636,"byte_end":132639,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ The microsecond part can exceed 1,000,000","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":132644,"byte_end":132689,"line_start":577,"line_end":577,"column_start":5,"column_end":50}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":132694,"byte_end":132784,"line_start":578,"line_end":578,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":132789,"byte_end":132792,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":132797,"byte_end":132859,"line_start":580,"line_end":580,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":132864,"byte_end":132867,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":132872,"byte_end":132885,"line_start":582,"line_end":582,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":132890,"byte_end":132893,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":132898,"byte_end":132906,"line_start":584,"line_end":584,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":132911,"byte_end":132983,"line_start":585,"line_end":585,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":132988,"byte_end":132991,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":132996,"byte_end":133040,"line_start":587,"line_end":587,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133045,"byte_end":133048,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_hms_micro(12, 34, 56, 789_012);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133053,"byte_end":133118,"line_start":589,"line_end":589,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133123,"byte_end":133155,"line_start":590,"line_end":590,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Wed);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133160,"byte_end":133203,"line_start":591,"line_end":591,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133208,"byte_end":133240,"line_start":592,"line_end":592,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.nanosecond(), 789_012_000);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133245,"byte_end":133290,"line_start":593,"line_end":593,"column_start":5,"column_end":50}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133295,"byte_end":133303,"line_start":594,"line_end":594,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133308,"byte_end":133317,"line_start":595,"line_end":595,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":134443,"byte_end":134460,"line_start":621,"line_end":621,"column_start":12,"column_end":29},"name":"and_hms_micro_opt","qualname":"<NaiveDate>::and_hms_micro_opt","value":"pub fn and_hms_micro_opt(&Self, u32, u32, u32, u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133500,"byte_end":133592,"line_start":600,"line_end":600,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133597,"byte_end":133600,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ The microsecond part can exceed 1,000,000","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133605,"byte_end":133650,"line_start":602,"line_end":602,"column_start":5,"column_end":50}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133655,"byte_end":133745,"line_start":603,"line_end":603,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133750,"byte_end":133753,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133758,"byte_end":133828,"line_start":605,"line_end":605,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133833,"byte_end":133836,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133841,"byte_end":133854,"line_start":607,"line_end":607,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133859,"byte_end":133862,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133867,"byte_end":133875,"line_start":609,"line_end":609,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133880,"byte_end":133906,"line_start":610,"line_end":610,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133911,"byte_end":133914,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133919,"byte_end":133963,"line_start":612,"line_end":612,"column_start":5,"column_end":49}},{"value":"/ assert!(d.and_hms_micro_opt(12, 34, 56,   789_012).is_some());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":133968,"byte_end":134034,"line_start":613,"line_end":613,"column_start":5,"column_end":71}},{"value":"/ assert!(d.and_hms_micro_opt(12, 34, 59, 1_789_012).is_some()); // leap second","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":134039,"byte_end":134120,"line_start":614,"line_end":614,"column_start":5,"column_end":86}},{"value":"/ assert!(d.and_hms_micro_opt(12, 34, 59, 2_789_012).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":134125,"byte_end":134191,"line_start":615,"line_end":615,"column_start":5,"column_end":71}},{"value":"/ assert!(d.and_hms_micro_opt(12, 34, 60,   789_012).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":134196,"byte_end":134262,"line_start":616,"line_end":616,"column_start":5,"column_end":71}},{"value":"/ assert!(d.and_hms_micro_opt(12, 60, 56,   789_012).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":134267,"byte_end":134333,"line_start":617,"line_end":617,"column_start":5,"column_end":71}},{"value":"/ assert!(d.and_hms_micro_opt(24, 34, 56,   789_012).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":134338,"byte_end":134404,"line_start":618,"line_end":618,"column_start":5,"column_end":71}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":134409,"byte_end":134417,"line_start":619,"line_end":619,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":134422,"byte_end":134431,"line_start":620,"line_end":620,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135465,"byte_end":135477,"line_start":647,"line_end":647,"column_start":12,"column_end":24},"name":"and_hms_nano","qualname":"<NaiveDate>::and_hms_nano","value":"pub fn and_hms_nano(&Self, u32, u32, u32, u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":134671,"byte_end":134762,"line_start":626,"line_end":626,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":134767,"byte_end":134770,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":134775,"byte_end":134823,"line_start":628,"line_end":628,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":134828,"byte_end":134918,"line_start":629,"line_end":629,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":134923,"byte_end":134926,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":134931,"byte_end":134992,"line_start":631,"line_end":631,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":134997,"byte_end":135000,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135005,"byte_end":135018,"line_start":633,"line_end":633,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135023,"byte_end":135026,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135031,"byte_end":135039,"line_start":635,"line_end":635,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135044,"byte_end":135116,"line_start":636,"line_end":636,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135121,"byte_end":135124,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135129,"byte_end":135173,"line_start":638,"line_end":638,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135178,"byte_end":135181,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_hms_nano(12, 34, 56, 789_012_345);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135186,"byte_end":135254,"line_start":640,"line_end":640,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135259,"byte_end":135291,"line_start":641,"line_end":641,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Wed);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135296,"byte_end":135339,"line_start":642,"line_end":642,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135344,"byte_end":135376,"line_start":643,"line_end":643,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.nanosecond(), 789_012_345);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135381,"byte_end":135426,"line_start":644,"line_end":644,"column_start":5,"column_end":50}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135431,"byte_end":135439,"line_start":645,"line_end":645,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135444,"byte_end":135453,"line_start":646,"line_end":646,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":136594,"byte_end":136610,"line_start":672,"line_end":672,"column_start":12,"column_end":28},"name":"and_hms_nano_opt","qualname":"<NaiveDate>::and_hms_nano_opt","value":"pub fn and_hms_nano_opt(&Self, u32, u32, u32, u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135632,"byte_end":135723,"line_start":651,"line_end":651,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135728,"byte_end":135731,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135736,"byte_end":135784,"line_start":653,"line_end":653,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135789,"byte_end":135879,"line_start":654,"line_end":654,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135884,"byte_end":135887,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135892,"byte_end":135961,"line_start":656,"line_end":656,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135966,"byte_end":135969,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135974,"byte_end":135987,"line_start":658,"line_end":658,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":135992,"byte_end":135995,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":136000,"byte_end":136008,"line_start":660,"line_end":660,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":136013,"byte_end":136039,"line_start":661,"line_end":661,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":136044,"byte_end":136047,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":136052,"byte_end":136096,"line_start":663,"line_end":663,"column_start":5,"column_end":49}},{"value":"/ assert!(d.and_hms_nano_opt(12, 34, 56,   789_012_345).is_some());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":136101,"byte_end":136170,"line_start":664,"line_end":664,"column_start":5,"column_end":74}},{"value":"/ assert!(d.and_hms_nano_opt(12, 34, 59, 1_789_012_345).is_some()); // leap second","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":136175,"byte_end":136259,"line_start":665,"line_end":665,"column_start":5,"column_end":89}},{"value":"/ assert!(d.and_hms_nano_opt(12, 34, 59, 2_789_012_345).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":136264,"byte_end":136333,"line_start":666,"line_end":666,"column_start":5,"column_end":74}},{"value":"/ assert!(d.and_hms_nano_opt(12, 34, 60,   789_012_345).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":136338,"byte_end":136407,"line_start":667,"line_end":667,"column_start":5,"column_end":74}},{"value":"/ assert!(d.and_hms_nano_opt(12, 60, 56,   789_012_345).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":136412,"byte_end":136481,"line_start":668,"line_end":668,"column_start":5,"column_end":74}},{"value":"/ assert!(d.and_hms_nano_opt(24, 34, 56,   789_012_345).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":136486,"byte_end":136555,"line_start":669,"line_end":669,"column_start":5,"column_end":74}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":136560,"byte_end":136568,"line_start":670,"line_end":670,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":136573,"byte_end":136582,"line_start":671,"line_end":671,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":138283,"byte_end":138287,"line_start":724,"line_end":724,"column_start":12,"column_end":16},"name":"succ","qualname":"<NaiveDate>::succ","value":"pub fn succ(&Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the next calendar date.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` for the next calendar date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":137751,"byte_end":137806,"line_start":710,"line_end":710,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":137811,"byte_end":137814,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ Panics when `self` is the last representable date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":137819,"byte_end":137873,"line_start":712,"line_end":712,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":137878,"byte_end":137881,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":137886,"byte_end":137899,"line_start":714,"line_end":714,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":137904,"byte_end":137907,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":137912,"byte_end":137920,"line_start":716,"line_end":716,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":137925,"byte_end":137951,"line_start":717,"line_end":717,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":137956,"byte_end":137959,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015,  6,  3).succ(), NaiveDate::from_ymd(2015, 6, 4));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":137964,"byte_end":138054,"line_start":719,"line_end":719,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015,  6, 30).succ(), NaiveDate::from_ymd(2015, 7, 1));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":138059,"byte_end":138149,"line_start":720,"line_end":720,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 12, 31).succ(), NaiveDate::from_ymd(2016, 1, 1));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":138154,"byte_end":138244,"line_start":721,"line_end":721,"column_start":5,"column_end":95}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":138249,"byte_end":138257,"line_start":722,"line_end":722,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":138262,"byte_end":138271,"line_start":723,"line_end":723,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":138829,"byte_end":138837,"line_start":743,"line_end":743,"column_start":12,"column_end":20},"name":"succ_opt","qualname":"<NaiveDate>::succ_opt","value":"pub fn succ_opt(&Self) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the next calendar date.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` for the next calendar date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":138368,"byte_end":138423,"line_start":728,"line_end":728,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":138428,"byte_end":138431,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when `self` is the last representable date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":138436,"byte_end":138498,"line_start":730,"line_end":730,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":138503,"byte_end":138506,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":138511,"byte_end":138524,"line_start":732,"line_end":732,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":138529,"byte_end":138532,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":138537,"byte_end":138545,"line_start":734,"line_end":734,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":138550,"byte_end":138576,"line_start":735,"line_end":735,"column_start":5,"column_end":31}},{"value":"/ use chrono::naive::MAX_DATE;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":138581,"byte_end":138613,"line_start":736,"line_end":736,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":138618,"byte_end":138621,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 6, 3).succ_opt(),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":138626,"byte_end":138684,"line_start":738,"line_end":738,"column_start":5,"column_end":63}},{"value":"/            Some(NaiveDate::from_ymd(2015, 6, 4)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":138689,"byte_end":138743,"line_start":739,"line_end":739,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(MAX_DATE.succ_opt(), None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":138748,"byte_end":138790,"line_start":740,"line_end":740,"column_start":5,"column_end":47}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":138795,"byte_end":138803,"line_start":741,"line_end":741,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":138808,"byte_end":138817,"line_start":742,"line_end":742,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139514,"byte_end":139518,"line_start":761,"line_end":761,"column_start":12,"column_end":16},"name":"pred","qualname":"<NaiveDate>::pred","value":"pub fn pred(&Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the previous calendar date.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` for the previous calendar date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":138977,"byte_end":139036,"line_start":747,"line_end":747,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139041,"byte_end":139044,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ Panics when `self` is the first representable date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139049,"byte_end":139104,"line_start":749,"line_end":749,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139109,"byte_end":139112,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139117,"byte_end":139130,"line_start":751,"line_end":751,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139135,"byte_end":139138,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139143,"byte_end":139151,"line_start":753,"line_end":753,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139156,"byte_end":139182,"line_start":754,"line_end":754,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139187,"byte_end":139190,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 6, 3).pred(), NaiveDate::from_ymd(2015,  6,  2));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139195,"byte_end":139285,"line_start":756,"line_end":756,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 6, 1).pred(), NaiveDate::from_ymd(2015,  5, 31));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139290,"byte_end":139380,"line_start":757,"line_end":757,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 1, 1).pred(), NaiveDate::from_ymd(2014, 12, 31));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139385,"byte_end":139475,"line_start":758,"line_end":758,"column_start":5,"column_end":95}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139480,"byte_end":139488,"line_start":759,"line_end":759,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139493,"byte_end":139502,"line_start":760,"line_end":760,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":140065,"byte_end":140073,"line_start":780,"line_end":780,"column_start":12,"column_end":20},"name":"pred_opt","qualname":"<NaiveDate>::pred_opt","value":"pub fn pred_opt(&Self) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the previous calendar date.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` for the previous calendar date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139599,"byte_end":139658,"line_start":765,"line_end":765,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139663,"byte_end":139666,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when `self` is the first representable date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139671,"byte_end":139734,"line_start":767,"line_end":767,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139739,"byte_end":139742,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139747,"byte_end":139760,"line_start":769,"line_end":769,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139765,"byte_end":139768,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139773,"byte_end":139781,"line_start":771,"line_end":771,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139786,"byte_end":139812,"line_start":772,"line_end":772,"column_start":5,"column_end":31}},{"value":"/ use chrono::naive::MIN_DATE;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139817,"byte_end":139849,"line_start":773,"line_end":773,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139854,"byte_end":139857,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 6, 3).pred_opt(),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139862,"byte_end":139920,"line_start":775,"line_end":775,"column_start":5,"column_end":63}},{"value":"/            Some(NaiveDate::from_ymd(2015, 6, 2)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139925,"byte_end":139979,"line_start":776,"line_end":776,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(MIN_DATE.pred_opt(), None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":139984,"byte_end":140026,"line_start":777,"line_end":777,"column_start":5,"column_end":47}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":140031,"byte_end":140039,"line_start":778,"line_end":778,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":140044,"byte_end":140053,"line_start":779,"line_end":779,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":141120,"byte_end":141138,"line_start":806,"line_end":806,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<NaiveDate>::checked_add_signed","value":"pub fn checked_add_signed(Self, OldDuration) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Adds the `days` part of given `Duration` to the current date.","sig":null,"attributes":[{"value":"/ Adds the `days` part of given `Duration` to the current date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":140215,"byte_end":140280,"line_start":784,"line_end":784,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":140285,"byte_end":140288,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":140293,"byte_end":140344,"line_start":786,"line_end":786,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":140349,"byte_end":140352,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":140357,"byte_end":140370,"line_start":788,"line_end":788,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":140375,"byte_end":140378,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":140383,"byte_end":140391,"line_start":790,"line_end":790,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; extern crate time; fn main() {","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":140396,"byte_end":140453,"line_start":791,"line_end":791,"column_start":5,"column_end":62}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":140458,"byte_end":140484,"line_start":792,"line_end":792,"column_start":5,"column_end":31}},{"value":"/ use chrono::naive::MAX_DATE;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":140489,"byte_end":140521,"line_start":793,"line_end":793,"column_start":5,"column_end":37}},{"value":"/ use time::Duration;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":140526,"byte_end":140549,"line_start":794,"line_end":794,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":140554,"byte_end":140557,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 9, 5);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":140562,"byte_end":140606,"line_start":796,"line_end":796,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(d.checked_add_signed(Duration::days(40)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":140611,"byte_end":140667,"line_start":797,"line_end":797,"column_start":5,"column_end":61}},{"value":"/            Some(NaiveDate::from_ymd(2015, 10, 15)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":140672,"byte_end":140728,"line_start":798,"line_end":798,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(d.checked_add_signed(Duration::days(-40)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":140733,"byte_end":140790,"line_start":799,"line_end":799,"column_start":5,"column_end":62}},{"value":"/            Some(NaiveDate::from_ymd(2015, 7, 27)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":140795,"byte_end":140850,"line_start":800,"line_end":800,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(d.checked_add_signed(Duration::days(1_000_000_000)), None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":140855,"byte_end":140929,"line_start":801,"line_end":801,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(d.checked_add_signed(Duration::days(-1_000_000_000)), None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":140934,"byte_end":141009,"line_start":802,"line_end":802,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(MAX_DATE.checked_add_signed(Duration::days(1)), None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":141014,"byte_end":141083,"line_start":803,"line_end":803,"column_start":5,"column_end":74}},{"value":"/ # }","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":141088,"byte_end":141095,"line_start":804,"line_end":804,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":141100,"byte_end":141108,"line_start":805,"line_end":805,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":142771,"byte_end":142789,"line_start":842,"line_end":842,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<NaiveDate>::checked_sub_signed","value":"pub fn checked_sub_signed(Self, OldDuration) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts the `days` part of given `Duration` from the current date.","sig":null,"attributes":[{"value":"/ Subtracts the `days` part of given `Duration` from the current date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":141859,"byte_end":141931,"line_start":820,"line_end":820,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":141936,"byte_end":141939,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":141944,"byte_end":141995,"line_start":822,"line_end":822,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":142000,"byte_end":142003,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":142008,"byte_end":142021,"line_start":824,"line_end":824,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":142026,"byte_end":142029,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":142034,"byte_end":142042,"line_start":826,"line_end":826,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; extern crate time; fn main() {","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":142047,"byte_end":142104,"line_start":827,"line_end":827,"column_start":5,"column_end":62}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":142109,"byte_end":142135,"line_start":828,"line_end":828,"column_start":5,"column_end":31}},{"value":"/ use chrono::naive::MIN_DATE;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":142140,"byte_end":142172,"line_start":829,"line_end":829,"column_start":5,"column_end":37}},{"value":"/ use time::Duration;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":142177,"byte_end":142200,"line_start":830,"line_end":830,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":142205,"byte_end":142208,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 9, 5);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":142213,"byte_end":142257,"line_start":832,"line_end":832,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(d.checked_sub_signed(Duration::days(40)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":142262,"byte_end":142318,"line_start":833,"line_end":833,"column_start":5,"column_end":61}},{"value":"/            Some(NaiveDate::from_ymd(2015, 7, 27)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":142323,"byte_end":142378,"line_start":834,"line_end":834,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(d.checked_sub_signed(Duration::days(-40)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":142383,"byte_end":142440,"line_start":835,"line_end":835,"column_start":5,"column_end":62}},{"value":"/            Some(NaiveDate::from_ymd(2015, 10, 15)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":142445,"byte_end":142501,"line_start":836,"line_end":836,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(d.checked_sub_signed(Duration::days(1_000_000_000)), None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":142506,"byte_end":142580,"line_start":837,"line_end":837,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(d.checked_sub_signed(Duration::days(-1_000_000_000)), None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":142585,"byte_end":142660,"line_start":838,"line_end":838,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(MIN_DATE.checked_sub_signed(Duration::days(1)), None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":142665,"byte_end":142734,"line_start":839,"line_end":839,"column_start":5,"column_end":74}},{"value":"/ # }","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":142739,"byte_end":142746,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":142751,"byte_end":142759,"line_start":841,"line_end":841,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":144715,"byte_end":144736,"line_start":881,"line_end":881,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<NaiveDate>::signed_duration_since","value":"pub fn signed_duration_since(Self, NaiveDate) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `NaiveDate` from the current date.\n Returns a `Duration` of integral numbers.","sig":null,"attributes":[{"value":"/ Subtracts another `NaiveDate` from the current date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":143510,"byte_end":143566,"line_start":856,"line_end":856,"column_start":5,"column_end":61}},{"value":"/ Returns a `Duration` of integral numbers.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":143571,"byte_end":143616,"line_start":857,"line_end":857,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":143621,"byte_end":143624,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ This does not overflow or underflow at all,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":143629,"byte_end":143676,"line_start":859,"line_end":859,"column_start":5,"column_end":52}},{"value":"/ as all possible output fits in the range of `Duration`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":143681,"byte_end":143740,"line_start":860,"line_end":860,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":143745,"byte_end":143748,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":143753,"byte_end":143766,"line_start":862,"line_end":862,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":143771,"byte_end":143774,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":143779,"byte_end":143787,"line_start":864,"line_end":864,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; extern crate time; fn main() {","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":143792,"byte_end":143849,"line_start":865,"line_end":865,"column_start":5,"column_end":62}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":143854,"byte_end":143880,"line_start":866,"line_end":866,"column_start":5,"column_end":31}},{"value":"/ use time::Duration;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":143885,"byte_end":143908,"line_start":867,"line_end":867,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":143913,"byte_end":143916,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":143921,"byte_end":143960,"line_start":869,"line_end":869,"column_start":5,"column_end":44}},{"value":"/ let since = NaiveDate::signed_duration_since;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":143965,"byte_end":144014,"line_start":870,"line_end":870,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":144019,"byte_end":144022,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2014, 1, 1)), Duration::zero());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":144027,"byte_end":144111,"line_start":872,"line_end":872,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 12, 31)), Duration::days(1));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":144116,"byte_end":144203,"line_start":873,"line_end":873,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2014, 1, 2)), Duration::days(-1));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":144208,"byte_end":144294,"line_start":874,"line_end":874,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 9, 23)), Duration::days(100));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":144299,"byte_end":144387,"line_start":875,"line_end":875,"column_start":5,"column_end":93}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 1, 1)), Duration::days(365));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":144392,"byte_end":144479,"line_start":876,"line_end":876,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2010, 1, 1)), Duration::days(365*4 + 1));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":144484,"byte_end":144577,"line_start":877,"line_end":877,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(1614, 1, 1)), Duration::days(365*400 + 97));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":144582,"byte_end":144678,"line_start":878,"line_end":878,"column_start":5,"column_end":101}},{"value":"/ # }","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":144683,"byte_end":144690,"line_start":879,"line_end":879,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":144695,"byte_end":144703,"line_start":880,"line_end":880,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":146437,"byte_end":146454,"line_start":920,"line_end":920,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<NaiveDate>::format_with_items","value":"pub fn format_with_items<'a, I>(&Self, I) -> DelayedFormat<I> where\nI: Iterator<Item = Item> + Clone","parent":null,"children":[],"decl_id":null,"docs":" Formats the date with the specified formatting items.\n Otherwise it is same to the ordinary `format` method.","sig":null,"attributes":[{"value":"/ Formats the date with the specified formatting items.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":145330,"byte_end":145387,"line_start":892,"line_end":892,"column_start":5,"column_end":62}},{"value":"/ Otherwise it is same to the ordinary `format` method.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":145392,"byte_end":145449,"line_start":893,"line_end":893,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":145454,"byte_end":145457,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ The `Iterator` of items should be `Clone`able,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":145462,"byte_end":145512,"line_start":895,"line_end":895,"column_start":5,"column_end":55}},{"value":"/ since the resulting `DelayedFormat` value may be formatted multiple times.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":145517,"byte_end":145595,"line_start":896,"line_end":896,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":145600,"byte_end":145603,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":145608,"byte_end":145621,"line_start":898,"line_end":898,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":145626,"byte_end":145629,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":145634,"byte_end":145642,"line_start":900,"line_end":900,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":145647,"byte_end":145673,"line_start":901,"line_end":901,"column_start":5,"column_end":31}},{"value":"/ use chrono::format::strftime::StrftimeItems;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":145678,"byte_end":145726,"line_start":902,"line_end":902,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":145731,"byte_end":145734,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ let fmt = StrftimeItems::new(\"%Y-%m-%d\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":145739,"byte_end":145784,"line_start":904,"line_end":904,"column_start":5,"column_end":50}},{"value":"/ let d = NaiveDate::from_ymd(2015, 9, 5);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":145789,"byte_end":145833,"line_start":905,"line_end":905,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(d.format_with_items(fmt.clone()).to_string(), \"2015-09-05\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":145838,"byte_end":145913,"line_start":906,"line_end":906,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(d.format(\"%Y-%m-%d\").to_string(),             \"2015-09-05\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":145918,"byte_end":145993,"line_start":907,"line_end":907,"column_start":5,"column_end":80}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":145998,"byte_end":146006,"line_start":908,"line_end":908,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":146011,"byte_end":146014,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ The resulting `DelayedFormat` can be formatted directly via the `Display` trait.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":146019,"byte_end":146103,"line_start":910,"line_end":910,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":146108,"byte_end":146111,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":146116,"byte_end":146124,"line_start":912,"line_end":912,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":146129,"byte_end":146157,"line_start":913,"line_end":913,"column_start":5,"column_end":33}},{"value":"/ # use chrono::format::strftime::StrftimeItems;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":146162,"byte_end":146212,"line_start":914,"line_end":914,"column_start":5,"column_end":55}},{"value":"/ # let fmt = StrftimeItems::new(\"%Y-%m-%d\").clone();","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":146217,"byte_end":146272,"line_start":915,"line_end":915,"column_start":5,"column_end":60}},{"value":"/ # let d = NaiveDate::from_ymd(2015, 9, 5);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":146277,"byte_end":146323,"line_start":916,"line_end":916,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(format!(\"{}\", d.format_with_items(fmt)), \"2015-09-05\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":146328,"byte_end":146398,"line_start":917,"line_end":917,"column_start":5,"column_end":75}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":146403,"byte_end":146411,"line_start":918,"line_end":918,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":146416,"byte_end":146425,"line_start":919,"line_end":919,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":148052,"byte_end":148058,"line_start":958,"line_end":958,"column_start":12,"column_end":18},"name":"format","qualname":"<NaiveDate>::format","value":"pub fn format<'a>(&Self, &'a str) -> DelayedFormat<StrftimeItems>","parent":null,"children":[],"decl_id":null,"docs":" Formats the date with the specified format string.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Formats the date with the specified format string.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":146618,"byte_end":146672,"line_start":925,"line_end":925,"column_start":5,"column_end":59}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":146677,"byte_end":146747,"line_start":926,"line_end":926,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":146752,"byte_end":146790,"line_start":927,"line_end":927,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":146795,"byte_end":146798,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ This returns a `DelayedFormat`,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":146803,"byte_end":146838,"line_start":929,"line_end":929,"column_start":5,"column_end":40}},{"value":"/ which gets converted to a string only when actual formatting happens.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":146843,"byte_end":146916,"line_start":930,"line_end":930,"column_start":5,"column_end":78}},{"value":"/ You may use the `to_string` method to get a `String`,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":146921,"byte_end":146978,"line_start":931,"line_end":931,"column_start":5,"column_end":62}},{"value":"/ or just feed it into `print!` and other formatting macros.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":146983,"byte_end":147045,"line_start":932,"line_end":932,"column_start":5,"column_end":67}},{"value":"/ (In this way it avoids the redundant memory allocation.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147050,"byte_end":147110,"line_start":933,"line_end":933,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147115,"byte_end":147118,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ A wrong format string does *not* issue an error immediately.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147123,"byte_end":147187,"line_start":935,"line_end":935,"column_start":5,"column_end":69}},{"value":"/ Rather, converting or formatting the `DelayedFormat` fails.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147192,"byte_end":147255,"line_start":936,"line_end":936,"column_start":5,"column_end":68}},{"value":"/ You are recommended to immediately use `DelayedFormat` for this reason.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147260,"byte_end":147335,"line_start":937,"line_end":937,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147340,"byte_end":147343,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147348,"byte_end":147361,"line_start":939,"line_end":939,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147366,"byte_end":147369,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147374,"byte_end":147382,"line_start":941,"line_end":941,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147387,"byte_end":147413,"line_start":942,"line_end":942,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147418,"byte_end":147421,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 9, 5);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147426,"byte_end":147470,"line_start":944,"line_end":944,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(d.format(\"%Y-%m-%d\").to_string(), \"2015-09-05\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147475,"byte_end":147538,"line_start":945,"line_end":945,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(d.format(\"%A, %-d %B, %C%y\").to_string(), \"Saturday, 5 September, 2015\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147543,"byte_end":147631,"line_start":946,"line_end":946,"column_start":5,"column_end":93}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147636,"byte_end":147644,"line_start":947,"line_end":947,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147649,"byte_end":147652,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ The resulting `DelayedFormat` can be formatted directly via the `Display` trait.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147657,"byte_end":147741,"line_start":949,"line_end":949,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147746,"byte_end":147749,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147754,"byte_end":147762,"line_start":951,"line_end":951,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147767,"byte_end":147795,"line_start":952,"line_end":952,"column_start":5,"column_end":33}},{"value":"/ # let d = NaiveDate::from_ymd(2015, 9, 5);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147800,"byte_end":147846,"line_start":953,"line_end":953,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(format!(\"{}\", d.format(\"%Y-%m-%d\")), \"2015-09-05\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147851,"byte_end":147917,"line_start":954,"line_end":954,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(format!(\"{}\", d.format(\"%A, %-d %B, %C%y\")), \"Saturday, 5 September, 2015\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":147922,"byte_end":148013,"line_start":955,"line_end":955,"column_start":5,"column_end":96}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":148018,"byte_end":148026,"line_start":956,"line_end":956,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":148031,"byte_end":148040,"line_start":957,"line_end":957,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2056},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":193906,"byte_end":193913,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IsoWeek","qualname":"::naive::isoweek::IsoWeek","value":"IsoWeek {  }","parent":null,"children":[{"krate":0,"index":2057}],"decl_id":null,"docs":" ISO 8601 week.","sig":null,"attributes":[{"value":"/ ISO 8601 week.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":193500,"byte_end":193518,"line_start":10,"line_end":10,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":193519,"byte_end":193522,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type, combined with [`Weekday`](../enum.Weekday.html),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":193523,"byte_end":193586,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"/ constitues the ISO 8601 [week date](./struct.NaiveDate.html#week-date).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":193587,"byte_end":193662,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ One can retrieve this type from the existing [`Datelike`](../trait.Datelike.html) types","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":193663,"byte_end":193754,"line_start":14,"line_end":14,"column_start":1,"column_end":92}},{"value":"/ via the [`Datelike::iso_week`](../trait.Datelike.html#tymethod.iso_week) method.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":193755,"byte_end":193839,"line_start":15,"line_end":15,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195851,"byte_end":195855,"line_start":68,"line_end":68,"column_start":12,"column_end":16},"name":"year","qualname":"<IsoWeek>::year","value":"pub fn year(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the year number for this ISO week.","sig":null,"attributes":[{"value":"/ Returns the year number for this ISO week.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195193,"byte_end":195239,"line_start":47,"line_end":47,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195244,"byte_end":195247,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195252,"byte_end":195265,"line_start":49,"line_end":49,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195270,"byte_end":195273,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195278,"byte_end":195286,"line_start":51,"line_end":51,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195291,"byte_end":195338,"line_start":52,"line_end":52,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195343,"byte_end":195346,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_isoywd(2015, 1, Weekday::Mon);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195351,"byte_end":195409,"line_start":54,"line_end":54,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195414,"byte_end":195456,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195461,"byte_end":195469,"line_start":56,"line_end":56,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195474,"byte_end":195477,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This year number might not match the calendar year number.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195482,"byte_end":195544,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/ Continuing the example...","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195549,"byte_end":195578,"line_start":59,"line_end":59,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195583,"byte_end":195586,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195591,"byte_end":195599,"line_start":61,"line_end":61,"column_start":5,"column_end":13}},{"value":"/ # use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195604,"byte_end":195653,"line_start":62,"line_end":62,"column_start":5,"column_end":54}},{"value":"/ # let d = NaiveDate::from_isoywd(2015, 1, Weekday::Mon);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195658,"byte_end":195718,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(d.year(), 2014);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195723,"byte_end":195754,"line_start":64,"line_end":64,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d, NaiveDate::from_ymd(2014, 12, 29));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195759,"byte_end":195812,"line_start":65,"line_end":65,"column_start":5,"column_end":58}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195817,"byte_end":195825,"line_start":66,"line_end":66,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195830,"byte_end":195839,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196305,"byte_end":196309,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"week","qualname":"<IsoWeek>::week","value":"pub fn week(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the ISO week number starting from 1.","sig":null,"attributes":[{"value":"/ Returns the ISO week number starting from 1.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195906,"byte_end":195954,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195959,"byte_end":195962,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 53. (The last week of year differs by years.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195967,"byte_end":196050,"line_start":74,"line_end":74,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196055,"byte_end":196058,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196063,"byte_end":196076,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196081,"byte_end":196084,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196089,"byte_end":196097,"line_start":78,"line_end":78,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196102,"byte_end":196149,"line_start":79,"line_end":79,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196154,"byte_end":196157,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_isoywd(2015, 15, Weekday::Mon);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196162,"byte_end":196221,"line_start":81,"line_end":81,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(d.iso_week().week(), 15);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196226,"byte_end":196266,"line_start":82,"line_end":82,"column_start":5,"column_end":45}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196271,"byte_end":196279,"line_start":83,"line_end":83,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196284,"byte_end":196293,"line_start":84,"line_end":84,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196777,"byte_end":196782,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"week0","qualname":"<IsoWeek>::week0","value":"pub fn week0(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the ISO week number starting from 0.","sig":null,"attributes":[{"value":"/ Returns the ISO week number starting from 0.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196377,"byte_end":196425,"line_start":89,"line_end":89,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196430,"byte_end":196433,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 52. (The last week of year differs by years.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196438,"byte_end":196521,"line_start":91,"line_end":91,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196526,"byte_end":196529,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196534,"byte_end":196547,"line_start":93,"line_end":93,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196552,"byte_end":196555,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196560,"byte_end":196568,"line_start":95,"line_end":95,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196573,"byte_end":196620,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196625,"byte_end":196628,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_isoywd(2015, 15, Weekday::Mon);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196633,"byte_end":196692,"line_start":98,"line_end":98,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(d.iso_week().week0(), 14);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196697,"byte_end":196738,"line_start":99,"line_end":99,"column_start":5,"column_end":46}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196743,"byte_end":196751,"line_start":100,"line_end":100,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":196756,"byte_end":196765,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2072},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206394,"byte_end":206403,"line_start":175,"line_end":175,"column_start":12,"column_end":21},"name":"NaiveTime","qualname":"::naive::time::NaiveTime","value":"NaiveTime {  }","parent":null,"children":[{"krate":0,"index":2073},{"krate":0,"index":2074}],"decl_id":null,"docs":" ISO 8601 time without timezone.\n Allows for the nanosecond precision and optional leap second representation.","sig":null,"attributes":[{"value":"/ ISO 8601 time without timezone.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":199183,"byte_end":199218,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/ Allows for the nanosecond precision and optional leap second representation.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":199219,"byte_end":199299,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":199300,"byte_end":199303,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Leap Second Handling","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":199304,"byte_end":199330,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":199331,"byte_end":199334,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Since 1960s, the manmade atomic clock has been so accurate that","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":199335,"byte_end":199402,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/ it is much more accurate than Earth's own motion.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":199403,"byte_end":199456,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ It became desirable to define the civil time in terms of the atomic clock,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":199457,"byte_end":199535,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ but that risks the desynchronization of the civil time from Earth.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":199536,"byte_end":199606,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ To account for this, the designers of the Coordinated Universal Time (UTC)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":199607,"byte_end":199685,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ made that the UTC should be kept within 0.9 seconds of the observed Earth-bound time.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":199686,"byte_end":199775,"line_start":25,"line_end":25,"column_start":1,"column_end":90}},{"value":"/ When the mean solar day is longer than the ideal (86,400 seconds),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":199776,"byte_end":199846,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/ the error slowly accumulates and it is necessary to add a **leap second**","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":199847,"byte_end":199924,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ to slow the UTC down a bit.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":199925,"byte_end":199956,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"/ (We may also remove a second to speed the UTC up a bit, but it never happened.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":199957,"byte_end":200040,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/ The leap second, if any, follows 23:59:59 of June 30 or December 31 in the UTC.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":200041,"byte_end":200124,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":200125,"byte_end":200128,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Fast forward to the 21st century,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":200129,"byte_end":200166,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/ we have seen 26 leap seconds from January 1972 to December 2015.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":200167,"byte_end":200235,"line_start":33,"line_end":33,"column_start":1,"column_end":69}},{"value":"/ Yes, 26 seconds. Probably you can read this paragraph within 26 seconds.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":200236,"byte_end":200312,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ But those 26 seconds, and possibly more in the future, are never predictable,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":200313,"byte_end":200394,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"/ and whether to add a leap second or not is known only before 6 months.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":200395,"byte_end":200469,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ Internet-based clocks (via NTP) do account for known leap seconds,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":200470,"byte_end":200540,"line_start":37,"line_end":37,"column_start":1,"column_end":71}},{"value":"/ but the system API normally doesn't (and often can't, with no network connection)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":200541,"byte_end":200626,"line_start":38,"line_end":38,"column_start":1,"column_end":86}},{"value":"/ and there is no reliable way to retrieve leap second information.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":200627,"byte_end":200696,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":200697,"byte_end":200700,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Chrono does not try to accurately implement leap seconds; it is impossible.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":200701,"byte_end":200780,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ Rather, **it allows for leap seconds but behaves as if there are *no other* leap seconds.**","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":200781,"byte_end":200876,"line_start":42,"line_end":42,"column_start":1,"column_end":96}},{"value":"/ Various operations will ignore any possible leap second(s)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":200877,"byte_end":200939,"line_start":43,"line_end":43,"column_start":1,"column_end":63}},{"value":"/ except when any of the operands were actually leap seconds.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":200940,"byte_end":201003,"line_start":44,"line_end":44,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201004,"byte_end":201007,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ If you cannot tolerate this behavior,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201008,"byte_end":201049,"line_start":46,"line_end":46,"column_start":1,"column_end":42}},{"value":"/ you must use a separate `TimeZone` for the International Atomic Time (TAI).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201050,"byte_end":201129,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/ TAI is like UTC but has no leap seconds, and thus slightly differs from UTC.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201130,"byte_end":201210,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/ Chrono does not yet provide such implementation, but it is planned.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201211,"byte_end":201282,"line_start":49,"line_end":49,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201283,"byte_end":201286,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ## Representing Leap Seconds","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201287,"byte_end":201319,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201320,"byte_end":201323,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The leap second is indicated via fractional seconds more than 1 second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201324,"byte_end":201399,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"/ This makes possible to treat a leap second as the prior non-leap second","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201400,"byte_end":201475,"line_start":54,"line_end":54,"column_start":1,"column_end":76}},{"value":"/ if you don't care about sub-second accuracy.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201476,"byte_end":201524,"line_start":55,"line_end":55,"column_start":1,"column_end":49}},{"value":"/ You should use the proper formatting to get the raw leap second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201525,"byte_end":201593,"line_start":56,"line_end":56,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201594,"byte_end":201597,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ All methods accepting fractional seconds will accept such values.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201598,"byte_end":201667,"line_start":58,"line_end":58,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201668,"byte_end":201671,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201672,"byte_end":201680,"line_start":60,"line_end":60,"column_start":1,"column_end":9}},{"value":"/ use chrono::{NaiveDate, NaiveTime, Utc, TimeZone};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201681,"byte_end":201735,"line_start":61,"line_end":61,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201736,"byte_end":201739,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ let t = NaiveTime::from_hms_milli(8, 59, 59, 1_000);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201740,"byte_end":201796,"line_start":63,"line_end":63,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201797,"byte_end":201800,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let dt1 = NaiveDate::from_ymd(2015, 7, 1).and_hms_micro(8, 59, 59, 1_000_000);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201801,"byte_end":201883,"line_start":65,"line_end":65,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201884,"byte_end":201887,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let dt2 = Utc.ymd(2015, 6, 30).and_hms_nano(23, 59, 59, 1_000_000_000);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201888,"byte_end":201963,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ # let _ = (t, dt1, dt2);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201964,"byte_end":201992,"line_start":68,"line_end":68,"column_start":1,"column_end":29}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":201993,"byte_end":202001,"line_start":69,"line_end":69,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":202002,"byte_end":202005,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Note that the leap second can happen anytime given an appropriate time zone;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":202006,"byte_end":202086,"line_start":71,"line_end":71,"column_start":1,"column_end":81}},{"value":"/ 2015-07-01 01:23:60 would be a proper leap second if UTC+01:24 had existed.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":202087,"byte_end":202166,"line_start":72,"line_end":72,"column_start":1,"column_end":80}},{"value":"/ Practically speaking, though, by the time of the first leap second on 1972-06-30,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":202167,"byte_end":202252,"line_start":73,"line_end":73,"column_start":1,"column_end":86}},{"value":"/ every time zone offset around the world has standardized to the 5-minute alignment.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":202253,"byte_end":202340,"line_start":74,"line_end":74,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":202341,"byte_end":202344,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Date And Time Arithmetics","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":202345,"byte_end":202377,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":202378,"byte_end":202381,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ As a concrete example, let's assume that `03:00:60` and `04:00:60` are leap seconds.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":202382,"byte_end":202470,"line_start":78,"line_end":78,"column_start":1,"column_end":89}},{"value":"/ In reality, of course, leap seconds are separated by at least 6 months.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":202471,"byte_end":202546,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/ We will also use some intuitive concise notations for the explanation.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":202547,"byte_end":202621,"line_start":80,"line_end":80,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":202622,"byte_end":202625,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ `Time + Duration`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":202626,"byte_end":202647,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/ (short for [`NaiveTime::overflowing_add_signed`](#method.overflowing_add_signed)):","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":202648,"byte_end":202734,"line_start":83,"line_end":83,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":202735,"byte_end":202738,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ - `03:00:00 + 1s = 03:00:01`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":202739,"byte_end":202772,"line_start":85,"line_end":85,"column_start":1,"column_end":34}},{"value":"/ - `03:00:59 + 60s = 03:02:00`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":202773,"byte_end":202807,"line_start":86,"line_end":86,"column_start":1,"column_end":35}},{"value":"/ - `03:00:59 + 1s = 03:01:00`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":202808,"byte_end":202841,"line_start":87,"line_end":87,"column_start":1,"column_end":34}},{"value":"/ - `03:00:60 + 1s = 03:01:00`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":202842,"byte_end":202875,"line_start":88,"line_end":88,"column_start":1,"column_end":34}},{"value":"/   Note that the sum is identical to the previous.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":202876,"byte_end":202929,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/ - `03:00:60 + 60s = 03:01:59`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":202930,"byte_end":202964,"line_start":90,"line_end":90,"column_start":1,"column_end":35}},{"value":"/ - `03:00:60 + 61s = 03:02:00`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":202965,"byte_end":202999,"line_start":91,"line_end":91,"column_start":1,"column_end":35}},{"value":"/ - `03:00:60.1 + 0.8s = 03:00:60.9`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203000,"byte_end":203039,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203040,"byte_end":203043,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ `Time - Duration`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203044,"byte_end":203065,"line_start":94,"line_end":94,"column_start":1,"column_end":22}},{"value":"/ (short for [`NaiveTime::overflowing_sub_signed`](#method.overflowing_sub_signed)):","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203066,"byte_end":203152,"line_start":95,"line_end":95,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203153,"byte_end":203156,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ - `03:00:00 - 1s = 02:59:59`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203157,"byte_end":203190,"line_start":97,"line_end":97,"column_start":1,"column_end":34}},{"value":"/ - `03:01:00 - 1s = 03:00:59`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203191,"byte_end":203224,"line_start":98,"line_end":98,"column_start":1,"column_end":34}},{"value":"/ - `03:01:00 - 60s = 03:00:00`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203225,"byte_end":203259,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/ - `03:00:60 - 60s = 03:00:00`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203260,"byte_end":203294,"line_start":100,"line_end":100,"column_start":1,"column_end":35}},{"value":"/   Note that the result is identical to the previous.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203295,"byte_end":203351,"line_start":101,"line_end":101,"column_start":1,"column_end":57}},{"value":"/ - `03:00:60.7 - 0.4s = 03:00:60.3`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203352,"byte_end":203391,"line_start":102,"line_end":102,"column_start":1,"column_end":40}},{"value":"/ - `03:00:60.7 - 0.9s = 03:00:59.8`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203392,"byte_end":203431,"line_start":103,"line_end":103,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203432,"byte_end":203435,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `Time - Time`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203436,"byte_end":203453,"line_start":105,"line_end":105,"column_start":1,"column_end":18}},{"value":"/ (short for [`NaiveTime::signed_duration_since`](#method.signed_duration_since)):","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203454,"byte_end":203538,"line_start":106,"line_end":106,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203539,"byte_end":203542,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ - `04:00:00 - 03:00:00 = 3600s`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203543,"byte_end":203579,"line_start":108,"line_end":108,"column_start":1,"column_end":37}},{"value":"/ - `03:01:00 - 03:00:00 = 60s`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203580,"byte_end":203614,"line_start":109,"line_end":109,"column_start":1,"column_end":35}},{"value":"/ - `03:00:60 - 03:00:00 = 60s`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203615,"byte_end":203649,"line_start":110,"line_end":110,"column_start":1,"column_end":35}},{"value":"/   Note that the difference is identical to the previous.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203650,"byte_end":203710,"line_start":111,"line_end":111,"column_start":1,"column_end":61}},{"value":"/ - `03:00:60.6 - 03:00:59.4 = 1.2s`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203711,"byte_end":203750,"line_start":112,"line_end":112,"column_start":1,"column_end":40}},{"value":"/ - `03:01:00 - 03:00:59.8 = 0.2s`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203751,"byte_end":203788,"line_start":113,"line_end":113,"column_start":1,"column_end":38}},{"value":"/ - `03:01:00 - 03:00:60.5 = 0.5s`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203789,"byte_end":203826,"line_start":114,"line_end":114,"column_start":1,"column_end":38}},{"value":"/   Note that the difference is larger than the previous,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203827,"byte_end":203886,"line_start":115,"line_end":115,"column_start":1,"column_end":60}},{"value":"/   even though the leap second clearly follows the previous whole second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203887,"byte_end":203963,"line_start":116,"line_end":116,"column_start":1,"column_end":77}},{"value":"/ - `04:00:60.9 - 03:00:60.1 =","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203964,"byte_end":203996,"line_start":117,"line_end":117,"column_start":1,"column_end":33}},{"value":"/   (04:00:60.9 - 04:00:00) + (04:00:00 - 03:01:00) + (03:01:00 - 03:00:60.1) =","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":203997,"byte_end":204078,"line_start":118,"line_end":118,"column_start":1,"column_end":82}},{"value":"/   60.9s + 3540s + 0.9s = 3601.8s`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204079,"byte_end":204117,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204118,"byte_end":204121,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ In general,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204122,"byte_end":204137,"line_start":121,"line_end":121,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204138,"byte_end":204141,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ - `Time + Duration` unconditionally equals to `Duration + Time`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204142,"byte_end":204210,"line_start":123,"line_end":123,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204211,"byte_end":204214,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ - `Time - Duration` unconditionally equals to `Time + (-Duration)`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204215,"byte_end":204286,"line_start":125,"line_end":125,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204287,"byte_end":204290,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ - `Time1 - Time2` unconditionally equals to `-(Time2 - Time1)`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204291,"byte_end":204358,"line_start":127,"line_end":127,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204359,"byte_end":204362,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ - Associativity does not generally hold, because","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204363,"byte_end":204415,"line_start":129,"line_end":129,"column_start":1,"column_end":53}},{"value":"/   `(Time + Duration1) - Duration2` no longer equals to `Time + (Duration1 - Duration2)`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204416,"byte_end":204507,"line_start":130,"line_end":130,"column_start":1,"column_end":92}},{"value":"/   for two positive durations.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204508,"byte_end":204541,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204542,"byte_end":204545,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/     - As a special case, `(Time + Duration) - Duration` also does not equal to `Time`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204546,"byte_end":204636,"line_start":133,"line_end":133,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204637,"byte_end":204640,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/     - If you can assume that all durations have the same sign, however,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204641,"byte_end":204716,"line_start":135,"line_end":135,"column_start":1,"column_end":76}},{"value":"/       then the associativity holds:","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204717,"byte_end":204756,"line_start":136,"line_end":136,"column_start":1,"column_end":40}},{"value":"/       `(Time + Duration1) + Duration2` equals to `Time + (Duration1 + Duration2)`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204757,"byte_end":204842,"line_start":137,"line_end":137,"column_start":1,"column_end":86}},{"value":"/       for two positive durations.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204843,"byte_end":204880,"line_start":138,"line_end":138,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204881,"byte_end":204884,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ## Reading And Writing Leap Seconds","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204885,"byte_end":204924,"line_start":140,"line_end":140,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204925,"byte_end":204928,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ The \"typical\" leap seconds on the minute boundary are","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204929,"byte_end":204986,"line_start":142,"line_end":142,"column_start":1,"column_end":58}},{"value":"/ correctly handled both in the formatting and parsing.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":204987,"byte_end":205044,"line_start":143,"line_end":143,"column_start":1,"column_end":58}},{"value":"/ The leap second in the human-readable representation","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205045,"byte_end":205101,"line_start":144,"line_end":144,"column_start":1,"column_end":57}},{"value":"/ will be represented as the second part being 60, as required by ISO 8601.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205102,"byte_end":205179,"line_start":145,"line_end":145,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205180,"byte_end":205183,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205184,"byte_end":205192,"line_start":147,"line_end":147,"column_start":1,"column_end":9}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205193,"byte_end":205225,"line_start":148,"line_end":148,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205226,"byte_end":205229,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2015, 6, 30).and_hms_milli(23, 59, 59, 1_000);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205230,"byte_end":205297,"line_start":150,"line_end":150,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:59:60Z\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205298,"byte_end":205358,"line_start":151,"line_end":151,"column_start":1,"column_end":61}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205359,"byte_end":205367,"line_start":152,"line_end":152,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205368,"byte_end":205371,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ There are hypothetical leap seconds not on the minute boundary","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205372,"byte_end":205438,"line_start":154,"line_end":154,"column_start":1,"column_end":67}},{"value":"/ nevertheless supported by Chrono.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205439,"byte_end":205476,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/ They are allowed for the sake of completeness and consistency;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205477,"byte_end":205543,"line_start":156,"line_end":156,"column_start":1,"column_end":67}},{"value":"/ there were several \"exotic\" time zone offsets with fractional minutes prior to UTC after all.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205544,"byte_end":205641,"line_start":157,"line_end":157,"column_start":1,"column_end":98}},{"value":"/ For such cases the human-readable representation is ambiguous","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205642,"byte_end":205707,"line_start":158,"line_end":158,"column_start":1,"column_end":66}},{"value":"/ and would be read back to the next non-leap second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205708,"byte_end":205763,"line_start":159,"line_end":159,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205764,"byte_end":205767,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205768,"byte_end":205776,"line_start":161,"line_end":161,"column_start":1,"column_end":9}},{"value":"/ use chrono::{DateTime, Utc, TimeZone};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205777,"byte_end":205819,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205820,"byte_end":205823,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2015, 6, 30).and_hms_milli(23, 56, 4, 1_000);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205824,"byte_end":205890,"line_start":164,"line_end":164,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:56:05Z\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205891,"byte_end":205951,"line_start":165,"line_end":165,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205952,"byte_end":205955,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2015, 6, 30).and_hms(23, 56, 5);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":205956,"byte_end":206009,"line_start":167,"line_end":167,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:56:05Z\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206010,"byte_end":206070,"line_start":168,"line_end":168,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(DateTime::parse_from_rfc3339(\"2015-06-30T23:56:05Z\").unwrap(), dt);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206071,"byte_end":206153,"line_start":169,"line_end":169,"column_start":1,"column_end":83}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206154,"byte_end":206162,"line_start":170,"line_end":170,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206163,"byte_end":206166,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ Since Chrono alone cannot determine any existence of leap seconds,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206167,"byte_end":206237,"line_start":172,"line_end":172,"column_start":1,"column_end":71}},{"value":"/ **there is absolutely no guarantee that the leap second read has actually happened**.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206238,"byte_end":206327,"line_start":173,"line_end":173,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207061,"byte_end":207069,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"from_hms","qualname":"<NaiveTime>::from_hms","value":"pub fn from_hms(u32, u32, u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute and second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute and second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206460,"byte_end":206517,"line_start":181,"line_end":181,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206522,"byte_end":206525,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ No [leap second](#leap-second-handling) is allowed here;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206530,"byte_end":206590,"line_start":183,"line_end":183,"column_start":5,"column_end":65}},{"value":"/ use `NaiveTime::from_hms_*` methods with a subsecond parameter instead.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206595,"byte_end":206670,"line_start":184,"line_end":184,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206675,"byte_end":206678,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute and/or second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206683,"byte_end":206732,"line_start":186,"line_end":186,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206737,"byte_end":206740,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206745,"byte_end":206758,"line_start":188,"line_end":188,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206763,"byte_end":206766,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206771,"byte_end":206779,"line_start":190,"line_end":190,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206784,"byte_end":206822,"line_start":191,"line_end":191,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206827,"byte_end":206830,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms(23, 56, 4);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206835,"byte_end":206878,"line_start":193,"line_end":193,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206883,"byte_end":206912,"line_start":194,"line_end":194,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206917,"byte_end":206948,"line_start":195,"line_end":195,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206953,"byte_end":206983,"line_start":196,"line_end":196,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 0);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206988,"byte_end":207022,"line_start":197,"line_end":197,"column_start":5,"column_end":39}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207027,"byte_end":207035,"line_start":198,"line_end":198,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207040,"byte_end":207049,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207926,"byte_end":207938,"line_start":225,"line_end":225,"column_start":12,"column_end":24},"name":"from_hms_opt","qualname":"<NaiveTime>::from_hms_opt","value":"pub fn from_hms_opt(u32, u32, u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute and second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute and second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207198,"byte_end":207255,"line_start":204,"line_end":204,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207260,"byte_end":207263,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ No [leap second](#leap-second-handling) is allowed here;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207268,"byte_end":207328,"line_start":206,"line_end":206,"column_start":5,"column_end":65}},{"value":"/ use `NaiveTime::from_hms_*_opt` methods with a subsecond parameter instead.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207333,"byte_end":207412,"line_start":207,"line_end":207,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207417,"byte_end":207420,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute and/or second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207425,"byte_end":207482,"line_start":209,"line_end":209,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207487,"byte_end":207490,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207495,"byte_end":207508,"line_start":211,"line_end":211,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207513,"byte_end":207516,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207521,"byte_end":207529,"line_start":213,"line_end":213,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207534,"byte_end":207560,"line_start":214,"line_end":214,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207565,"byte_end":207568,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let from_hms_opt = NaiveTime::from_hms_opt;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207573,"byte_end":207620,"line_start":216,"line_end":216,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207625,"byte_end":207628,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ assert!(from_hms_opt(0, 0, 0).is_some());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207633,"byte_end":207678,"line_start":218,"line_end":218,"column_start":5,"column_end":50}},{"value":"/ assert!(from_hms_opt(23, 59, 59).is_some());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207683,"byte_end":207731,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/ assert!(from_hms_opt(24, 0, 0).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207736,"byte_end":207782,"line_start":220,"line_end":220,"column_start":5,"column_end":51}},{"value":"/ assert!(from_hms_opt(23, 60, 0).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207787,"byte_end":207834,"line_start":221,"line_end":221,"column_start":5,"column_end":52}},{"value":"/ assert!(from_hms_opt(23, 59, 60).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207839,"byte_end":207887,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207892,"byte_end":207900,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":207905,"byte_end":207914,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208679,"byte_end":208693,"line_start":248,"line_end":248,"column_start":12,"column_end":26},"name":"from_hms_milli","qualname":"<NaiveTime>::from_hms_milli","value":"pub fn from_hms_milli(u32, u32, u32, u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and millisecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208060,"byte_end":208130,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208135,"byte_end":208138,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The millisecond part can exceed 1,000","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208143,"byte_end":208184,"line_start":231,"line_end":231,"column_start":5,"column_end":46}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208189,"byte_end":208256,"line_start":232,"line_end":232,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208261,"byte_end":208264,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208269,"byte_end":208331,"line_start":234,"line_end":234,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208336,"byte_end":208339,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208344,"byte_end":208357,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208362,"byte_end":208365,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208370,"byte_end":208378,"line_start":238,"line_end":238,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208383,"byte_end":208421,"line_start":239,"line_end":239,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208426,"byte_end":208429,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms_milli(23, 56, 4, 12);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208434,"byte_end":208487,"line_start":241,"line_end":241,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208492,"byte_end":208521,"line_start":242,"line_end":242,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208526,"byte_end":208557,"line_start":243,"line_end":243,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208562,"byte_end":208592,"line_start":244,"line_end":244,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 12_000_000);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208597,"byte_end":208640,"line_start":245,"line_end":245,"column_start":5,"column_end":48}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208645,"byte_end":208653,"line_start":246,"line_end":246,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208658,"byte_end":208667,"line_start":247,"line_end":247,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":209753,"byte_end":209771,"line_start":275,"line_end":275,"column_start":12,"column_end":30},"name":"from_hms_milli_opt","qualname":"<NaiveTime>::from_hms_milli_opt","value":"pub fn from_hms_milli_opt(u32, u32, u32, u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and millisecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208847,"byte_end":208917,"line_start":252,"line_end":252,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208922,"byte_end":208925,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ The millisecond part can exceed 1,000","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208930,"byte_end":208971,"line_start":254,"line_end":254,"column_start":5,"column_end":46}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":208976,"byte_end":209043,"line_start":255,"line_end":255,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":209048,"byte_end":209051,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":209056,"byte_end":209126,"line_start":257,"line_end":257,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":209131,"byte_end":209134,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":209139,"byte_end":209152,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":209157,"byte_end":209160,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":209165,"byte_end":209173,"line_start":261,"line_end":261,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":209178,"byte_end":209204,"line_start":262,"line_end":262,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":209209,"byte_end":209212,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ let from_hmsm_opt = NaiveTime::from_hms_milli_opt;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":209217,"byte_end":209271,"line_start":264,"line_end":264,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":209276,"byte_end":209279,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ assert!(from_hmsm_opt(0, 0, 0, 0).is_some());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":209284,"byte_end":209333,"line_start":266,"line_end":266,"column_start":5,"column_end":54}},{"value":"/ assert!(from_hmsm_opt(23, 59, 59, 999).is_some());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":209338,"byte_end":209392,"line_start":267,"line_end":267,"column_start":5,"column_end":59}},{"value":"/ assert!(from_hmsm_opt(23, 59, 59, 1_999).is_some()); // a leap second after 23:59:59","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":209397,"byte_end":209485,"line_start":268,"line_end":268,"column_start":5,"column_end":93}},{"value":"/ assert!(from_hmsm_opt(24, 0, 0, 0).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":209490,"byte_end":209540,"line_start":269,"line_end":269,"column_start":5,"column_end":55}},{"value":"/ assert!(from_hmsm_opt(23, 60, 0, 0).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":209545,"byte_end":209596,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/ assert!(from_hmsm_opt(23, 59, 60, 0).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":209601,"byte_end":209653,"line_start":271,"line_end":271,"column_start":5,"column_end":57}},{"value":"/ assert!(from_hmsm_opt(23, 59, 59, 2_000).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":209658,"byte_end":209714,"line_start":272,"line_end":272,"column_start":5,"column_end":61}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":209719,"byte_end":209727,"line_start":273,"line_end":273,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":209732,"byte_end":209741,"line_start":274,"line_end":274,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210595,"byte_end":210609,"line_start":299,"line_end":299,"column_start":12,"column_end":26},"name":"from_hms_micro","qualname":"<NaiveTime>::from_hms_micro","value":"pub fn from_hms_micro(u32, u32, u32, u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and microsecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":209968,"byte_end":210038,"line_start":280,"line_end":280,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210043,"byte_end":210046,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ The microsecond part can exceed 1,000,000","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210051,"byte_end":210096,"line_start":282,"line_end":282,"column_start":5,"column_end":50}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210101,"byte_end":210168,"line_start":283,"line_end":283,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210173,"byte_end":210176,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210181,"byte_end":210243,"line_start":285,"line_end":285,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210248,"byte_end":210251,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210256,"byte_end":210269,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210274,"byte_end":210277,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210282,"byte_end":210290,"line_start":289,"line_end":289,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210295,"byte_end":210333,"line_start":290,"line_end":290,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210338,"byte_end":210341,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms_micro(23, 56, 4, 12_345);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210346,"byte_end":210403,"line_start":292,"line_end":292,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210408,"byte_end":210437,"line_start":293,"line_end":293,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210442,"byte_end":210473,"line_start":294,"line_end":294,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210478,"byte_end":210508,"line_start":295,"line_end":295,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 12_345_000);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210513,"byte_end":210556,"line_start":296,"line_end":296,"column_start":5,"column_end":48}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210561,"byte_end":210569,"line_start":297,"line_end":297,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210574,"byte_end":210583,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":211685,"byte_end":211703,"line_start":326,"line_end":326,"column_start":12,"column_end":30},"name":"from_hms_micro_opt","qualname":"<NaiveTime>::from_hms_micro_opt","value":"pub fn from_hms_micro_opt(u32, u32, u32, u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and microsecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210763,"byte_end":210833,"line_start":303,"line_end":303,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210838,"byte_end":210841,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ The microsecond part can exceed 1,000,000","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210846,"byte_end":210891,"line_start":305,"line_end":305,"column_start":5,"column_end":50}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210896,"byte_end":210963,"line_start":306,"line_end":306,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210968,"byte_end":210971,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":210976,"byte_end":211046,"line_start":308,"line_end":308,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":211051,"byte_end":211054,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":211059,"byte_end":211072,"line_start":310,"line_end":310,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":211077,"byte_end":211080,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":211085,"byte_end":211093,"line_start":312,"line_end":312,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":211098,"byte_end":211124,"line_start":313,"line_end":313,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":211129,"byte_end":211132,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let from_hmsu_opt = NaiveTime::from_hms_micro_opt;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":211137,"byte_end":211191,"line_start":315,"line_end":315,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":211196,"byte_end":211199,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ assert!(from_hmsu_opt(0, 0, 0, 0).is_some());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":211204,"byte_end":211253,"line_start":317,"line_end":317,"column_start":5,"column_end":54}},{"value":"/ assert!(from_hmsu_opt(23, 59, 59, 999_999).is_some());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":211258,"byte_end":211316,"line_start":318,"line_end":318,"column_start":5,"column_end":63}},{"value":"/ assert!(from_hmsu_opt(23, 59, 59, 1_999_999).is_some()); // a leap second after 23:59:59","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":211321,"byte_end":211413,"line_start":319,"line_end":319,"column_start":5,"column_end":97}},{"value":"/ assert!(from_hmsu_opt(24, 0, 0, 0).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":211418,"byte_end":211468,"line_start":320,"line_end":320,"column_start":5,"column_end":55}},{"value":"/ assert!(from_hmsu_opt(23, 60, 0, 0).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":211473,"byte_end":211524,"line_start":321,"line_end":321,"column_start":5,"column_end":56}},{"value":"/ assert!(from_hmsu_opt(23, 59, 60, 0).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":211529,"byte_end":211581,"line_start":322,"line_end":322,"column_start":5,"column_end":57}},{"value":"/ assert!(from_hmsu_opt(23, 59, 59, 2_000_000).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":211586,"byte_end":211646,"line_start":323,"line_end":323,"column_start":5,"column_end":65}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":211651,"byte_end":211659,"line_start":324,"line_end":324,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":211664,"byte_end":211673,"line_start":325,"line_end":325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212527,"byte_end":212540,"line_start":350,"line_end":350,"column_start":12,"column_end":25},"name":"from_hms_nano","qualname":"<NaiveTime>::from_hms_nano","value":"pub fn from_hms_nano(u32, u32, u32, u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and nanosecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":211896,"byte_end":211965,"line_start":331,"line_end":331,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":211970,"byte_end":211973,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":211978,"byte_end":212026,"line_start":333,"line_end":333,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212031,"byte_end":212098,"line_start":334,"line_end":334,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212103,"byte_end":212106,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212111,"byte_end":212172,"line_start":336,"line_end":336,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212177,"byte_end":212180,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212185,"byte_end":212198,"line_start":338,"line_end":338,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212203,"byte_end":212206,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212211,"byte_end":212219,"line_start":340,"line_end":340,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212224,"byte_end":212262,"line_start":341,"line_end":341,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212267,"byte_end":212270,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212275,"byte_end":212335,"line_start":343,"line_end":343,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212340,"byte_end":212369,"line_start":344,"line_end":344,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212374,"byte_end":212405,"line_start":345,"line_end":345,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212410,"byte_end":212440,"line_start":346,"line_end":346,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 12_345_678);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212445,"byte_end":212488,"line_start":347,"line_end":347,"column_start":5,"column_end":48}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212493,"byte_end":212501,"line_start":348,"line_end":348,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212506,"byte_end":212515,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":213625,"byte_end":213642,"line_start":377,"line_end":377,"column_start":12,"column_end":29},"name":"from_hms_nano_opt","qualname":"<NaiveTime>::from_hms_nano_opt","value":"pub fn from_hms_nano_opt(u32, u32, u32, u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and nanosecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212691,"byte_end":212760,"line_start":354,"line_end":354,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212765,"byte_end":212768,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212773,"byte_end":212821,"line_start":356,"line_end":356,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212826,"byte_end":212893,"line_start":357,"line_end":357,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212898,"byte_end":212901,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212906,"byte_end":212975,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212980,"byte_end":212983,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":212988,"byte_end":213001,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":213006,"byte_end":213009,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":213014,"byte_end":213022,"line_start":363,"line_end":363,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":213027,"byte_end":213053,"line_start":364,"line_end":364,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":213058,"byte_end":213061,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ let from_hmsn_opt = NaiveTime::from_hms_nano_opt;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":213066,"byte_end":213119,"line_start":366,"line_end":366,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":213124,"byte_end":213127,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ assert!(from_hmsn_opt(0, 0, 0, 0).is_some());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":213132,"byte_end":213181,"line_start":368,"line_end":368,"column_start":5,"column_end":54}},{"value":"/ assert!(from_hmsn_opt(23, 59, 59, 999_999_999).is_some());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":213186,"byte_end":213248,"line_start":369,"line_end":369,"column_start":5,"column_end":67}},{"value":"/ assert!(from_hmsn_opt(23, 59, 59, 1_999_999_999).is_some()); // a leap second after 23:59:59","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":213253,"byte_end":213349,"line_start":370,"line_end":370,"column_start":5,"column_end":101}},{"value":"/ assert!(from_hmsn_opt(24, 0, 0, 0).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":213354,"byte_end":213404,"line_start":371,"line_end":371,"column_start":5,"column_end":55}},{"value":"/ assert!(from_hmsn_opt(23, 60, 0, 0).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":213409,"byte_end":213460,"line_start":372,"line_end":372,"column_start":5,"column_end":56}},{"value":"/ assert!(from_hmsn_opt(23, 59, 60, 0).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":213465,"byte_end":213517,"line_start":373,"line_end":373,"column_start":5,"column_end":57}},{"value":"/ assert!(from_hmsn_opt(23, 59, 59, 2_000_000_000).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":213522,"byte_end":213586,"line_start":374,"line_end":374,"column_start":5,"column_end":69}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":213591,"byte_end":213599,"line_start":375,"line_end":375,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":213604,"byte_end":213613,"line_start":376,"line_end":376,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214566,"byte_end":214596,"line_start":402,"line_end":402,"column_start":12,"column_end":42},"name":"from_num_seconds_from_midnight","qualname":"<NaiveTime>::from_num_seconds_from_midnight","value":"pub fn from_num_seconds_from_midnight(u32, u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":213909,"byte_end":213994,"line_start":383,"line_end":383,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":213999,"byte_end":214002,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214007,"byte_end":214055,"line_start":385,"line_end":385,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214060,"byte_end":214127,"line_start":386,"line_end":386,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214132,"byte_end":214135,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid number of seconds and/or nanosecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214140,"byte_end":214198,"line_start":388,"line_end":388,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214203,"byte_end":214206,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214211,"byte_end":214224,"line_start":390,"line_end":390,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214229,"byte_end":214232,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214237,"byte_end":214245,"line_start":392,"line_end":392,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214250,"byte_end":214288,"line_start":393,"line_end":393,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214293,"byte_end":214296,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_num_seconds_from_midnight(86164, 12_345_678);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214301,"byte_end":214374,"line_start":395,"line_end":395,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214379,"byte_end":214408,"line_start":396,"line_end":396,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214413,"byte_end":214444,"line_start":397,"line_end":397,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214449,"byte_end":214479,"line_start":398,"line_end":398,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 12_345_678);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214484,"byte_end":214527,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214532,"byte_end":214540,"line_start":400,"line_end":400,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214545,"byte_end":214554,"line_start":401,"line_end":401,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":215568,"byte_end":215602,"line_start":427,"line_end":427,"column_start":12,"column_end":46},"name":"from_num_seconds_from_midnight_opt","qualname":"<NaiveTime>::from_num_seconds_from_midnight_opt","value":"pub fn from_num_seconds_from_midnight_opt(u32, u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214734,"byte_end":214819,"line_start":406,"line_end":406,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214824,"byte_end":214827,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214832,"byte_end":214880,"line_start":408,"line_end":408,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214885,"byte_end":214952,"line_start":409,"line_end":409,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214957,"byte_end":214960,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid number of seconds and/or nanosecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":214965,"byte_end":215031,"line_start":411,"line_end":411,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":215036,"byte_end":215039,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":215044,"byte_end":215057,"line_start":413,"line_end":413,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":215062,"byte_end":215065,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":215070,"byte_end":215078,"line_start":415,"line_end":415,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":215083,"byte_end":215109,"line_start":416,"line_end":416,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":215114,"byte_end":215117,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ let from_nsecs_opt = NaiveTime::from_num_seconds_from_midnight_opt;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":215122,"byte_end":215193,"line_start":418,"line_end":418,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":215198,"byte_end":215201,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ assert!(from_nsecs_opt(0, 0).is_some());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":215206,"byte_end":215250,"line_start":420,"line_end":420,"column_start":5,"column_end":49}},{"value":"/ assert!(from_nsecs_opt(86399, 999_999_999).is_some());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":215255,"byte_end":215313,"line_start":421,"line_end":421,"column_start":5,"column_end":63}},{"value":"/ assert!(from_nsecs_opt(86399, 1_999_999_999).is_some()); // a leap second after 23:59:59","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":215318,"byte_end":215410,"line_start":422,"line_end":422,"column_start":5,"column_end":97}},{"value":"/ assert!(from_nsecs_opt(86_400, 0).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":215415,"byte_end":215464,"line_start":423,"line_end":423,"column_start":5,"column_end":54}},{"value":"/ assert!(from_nsecs_opt(86399, 2_000_000_000).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":215469,"byte_end":215529,"line_start":424,"line_end":424,"column_start":5,"column_end":65}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":215534,"byte_end":215542,"line_start":425,"line_end":425,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":215547,"byte_end":215556,"line_start":426,"line_end":426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":218252,"byte_end":218266,"line_start":493,"line_end":493,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<NaiveTime>::parse_from_str","value":"pub fn parse_from_str(&str, &str) -> ParseResult<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new `NaiveTime`.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and returns a new `NaiveTime`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":215778,"byte_end":215861,"line_start":432,"line_end":432,"column_start":5,"column_end":88}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":215866,"byte_end":215936,"line_start":433,"line_end":433,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":215941,"byte_end":215979,"line_start":434,"line_end":434,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":215984,"byte_end":215987,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":215992,"byte_end":216005,"line_start":436,"line_end":436,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216010,"byte_end":216013,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216018,"byte_end":216026,"line_start":438,"line_end":438,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216031,"byte_end":216057,"line_start":439,"line_end":439,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216062,"byte_end":216065,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216070,"byte_end":216121,"line_start":441,"line_end":441,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216126,"byte_end":216129,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(parse_from_str(\"23:56:04\", \"%H:%M:%S\"),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216134,"byte_end":216188,"line_start":443,"line_end":443,"column_start":5,"column_end":59}},{"value":"/            Ok(NaiveTime::from_hms(23, 56, 4)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216193,"byte_end":216244,"line_start":444,"line_end":444,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(parse_from_str(\"pm012345.6789\", \"%p%I%M%S%.f\"),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216249,"byte_end":216311,"line_start":445,"line_end":445,"column_start":5,"column_end":67}},{"value":"/            Ok(NaiveTime::from_hms_micro(13, 23, 45, 678_900)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216316,"byte_end":216383,"line_start":446,"line_end":446,"column_start":5,"column_end":72}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216388,"byte_end":216396,"line_start":447,"line_end":447,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216401,"byte_end":216404,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ Date and offset is ignored for the purpose of parsing.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216409,"byte_end":216467,"line_start":449,"line_end":449,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216472,"byte_end":216475,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216480,"byte_end":216488,"line_start":451,"line_end":451,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216493,"byte_end":216521,"line_start":452,"line_end":452,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216526,"byte_end":216579,"line_start":453,"line_end":453,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216584,"byte_end":216665,"line_start":454,"line_end":454,"column_start":5,"column_end":86}},{"value":"/            Ok(NaiveTime::from_hms(12, 34, 56)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216670,"byte_end":216722,"line_start":455,"line_end":455,"column_start":5,"column_end":57}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216727,"byte_end":216735,"line_start":456,"line_end":456,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216740,"byte_end":216743,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ [Leap seconds](#leap-second-handling) are correctly handled by","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216748,"byte_end":216814,"line_start":458,"line_end":458,"column_start":5,"column_end":71}},{"value":"/ treating any time of the form `hh:mm:60` as a leap second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216819,"byte_end":216881,"line_start":459,"line_end":459,"column_start":5,"column_end":67}},{"value":"/ (This equally applies to the formatting, so the round trip is possible.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216886,"byte_end":216962,"line_start":460,"line_end":460,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216967,"byte_end":216970,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216975,"byte_end":216983,"line_start":462,"line_end":462,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":216988,"byte_end":217016,"line_start":463,"line_end":463,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217021,"byte_end":217074,"line_start":464,"line_end":464,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parse_from_str(\"08:59:60.123\", \"%H:%M:%S%.f\"),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217079,"byte_end":217140,"line_start":465,"line_end":465,"column_start":5,"column_end":66}},{"value":"/            Ok(NaiveTime::from_hms_milli(8, 59, 59, 1_123)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217145,"byte_end":217209,"line_start":466,"line_end":466,"column_start":5,"column_end":69}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217214,"byte_end":217222,"line_start":467,"line_end":467,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217227,"byte_end":217230,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ Missing seconds are assumed to be zero,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217235,"byte_end":217278,"line_start":469,"line_end":469,"column_start":5,"column_end":48}},{"value":"/ but out-of-bound times or insufficient fields are errors otherwise.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217283,"byte_end":217354,"line_start":470,"line_end":470,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217359,"byte_end":217362,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217367,"byte_end":217375,"line_start":472,"line_end":472,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217380,"byte_end":217408,"line_start":473,"line_end":473,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217413,"byte_end":217466,"line_start":474,"line_end":474,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parse_from_str(\"7:15\", \"%H:%M\"),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217471,"byte_end":217518,"line_start":475,"line_end":475,"column_start":5,"column_end":52}},{"value":"/            Ok(NaiveTime::from_hms(7, 15, 0)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217523,"byte_end":217573,"line_start":476,"line_end":476,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217578,"byte_end":217581,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ assert!(parse_from_str(\"04m33s\", \"%Mm%Ss\").is_err());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217586,"byte_end":217643,"line_start":478,"line_end":478,"column_start":5,"column_end":62}},{"value":"/ assert!(parse_from_str(\"12\", \"%H\").is_err());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217648,"byte_end":217697,"line_start":479,"line_end":479,"column_start":5,"column_end":54}},{"value":"/ assert!(parse_from_str(\"17:60\", \"%H:%M\").is_err());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217702,"byte_end":217757,"line_start":480,"line_end":480,"column_start":5,"column_end":60}},{"value":"/ assert!(parse_from_str(\"24:00:00\", \"%H:%M:%S\").is_err());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217762,"byte_end":217823,"line_start":481,"line_end":481,"column_start":5,"column_end":66}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217828,"byte_end":217836,"line_start":482,"line_end":482,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217841,"byte_end":217844,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ All parsed fields should be consistent to each other, otherwise it's an error.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217849,"byte_end":217931,"line_start":484,"line_end":484,"column_start":5,"column_end":87}},{"value":"/ Here `%H` is for 24-hour clocks, unlike `%I`,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217936,"byte_end":217985,"line_start":485,"line_end":485,"column_start":5,"column_end":54}},{"value":"/ and thus can be independently determined without AM/PM.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":217990,"byte_end":218049,"line_start":486,"line_end":486,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":218054,"byte_end":218057,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":218062,"byte_end":218070,"line_start":488,"line_end":488,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":218075,"byte_end":218103,"line_start":489,"line_end":489,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":218108,"byte_end":218161,"line_start":490,"line_end":490,"column_start":5,"column_end":58}},{"value":"/ assert!(parse_from_str(\"13:07 AM\", \"%H:%M %p\").is_err());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":218166,"byte_end":218227,"line_start":491,"line_end":491,"column_start":5,"column_end":66}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":218232,"byte_end":218240,"line_start":492,"line_end":492,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":219434,"byte_end":219456,"line_start":522,"line_end":522,"column_start":12,"column_end":34},"name":"overflowing_add_signed","qualname":"<NaiveTime>::overflowing_add_signed","value":"pub fn overflowing_add_signed(&Self, OldDuration) -> (NaiveTime, i64)","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current time,\n and also returns the number of *seconds*\n in the integral number of days ignored from the addition.\n (We cannot return `Duration` because it is subject to overflow or underflow.)","sig":null,"attributes":[{"value":"/ Adds given `Duration` to the current time,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":218459,"byte_end":218505,"line_start":499,"line_end":499,"column_start":5,"column_end":51}},{"value":"/ and also returns the number of *seconds*","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":218510,"byte_end":218554,"line_start":500,"line_end":500,"column_start":5,"column_end":49}},{"value":"/ in the integral number of days ignored from the addition.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":218559,"byte_end":218620,"line_start":501,"line_end":501,"column_start":5,"column_end":66}},{"value":"/ (We cannot return `Duration` because it is subject to overflow or underflow.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":218625,"byte_end":218706,"line_start":502,"line_end":502,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":218711,"byte_end":218714,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":218719,"byte_end":218732,"line_start":504,"line_end":504,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":218737,"byte_end":218740,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":218745,"byte_end":218753,"line_start":506,"line_end":506,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; extern crate time; fn main() {","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":218758,"byte_end":218815,"line_start":507,"line_end":507,"column_start":5,"column_end":62}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":218820,"byte_end":218846,"line_start":508,"line_end":508,"column_start":5,"column_end":31}},{"value":"/ use time::Duration;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":218851,"byte_end":218874,"line_start":509,"line_end":509,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":218879,"byte_end":218882,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ let from_hms = NaiveTime::from_hms;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":218887,"byte_end":218926,"line_start":511,"line_end":511,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":218931,"byte_end":218934,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(11)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":218939,"byte_end":219016,"line_start":513,"line_end":513,"column_start":5,"column_end":82}},{"value":"/            (from_hms(14, 4, 5), 0));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":219021,"byte_end":219061,"line_start":514,"line_end":514,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(23)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":219066,"byte_end":219143,"line_start":515,"line_end":515,"column_start":5,"column_end":82}},{"value":"/            (from_hms(2, 4, 5), 86_400));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":219148,"byte_end":219192,"line_start":516,"line_end":516,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(-7)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":219197,"byte_end":219274,"line_start":517,"line_end":517,"column_start":5,"column_end":82}},{"value":"/            (from_hms(20, 4, 5), -86_400));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":219279,"byte_end":219325,"line_start":518,"line_end":518,"column_start":5,"column_end":51}},{"value":"/ # }","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":219330,"byte_end":219337,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":219342,"byte_end":219350,"line_start":520,"line_end":520,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222965,"byte_end":222987,"line_start":608,"line_end":608,"column_start":12,"column_end":34},"name":"overflowing_sub_signed","qualname":"<NaiveTime>::overflowing_sub_signed","value":"pub fn overflowing_sub_signed(&Self, OldDuration) -> (NaiveTime, i64)","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current time,\n and also returns the number of *seconds*\n in the integral number of days ignored from the subtraction.\n (We cannot return `Duration` because it is subject to overflow or underflow.)","sig":null,"attributes":[{"value":"/ Subtracts given `Duration` from the current time,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222039,"byte_end":222092,"line_start":585,"line_end":585,"column_start":5,"column_end":58}},{"value":"/ and also returns the number of *seconds*","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222097,"byte_end":222141,"line_start":586,"line_end":586,"column_start":5,"column_end":49}},{"value":"/ in the integral number of days ignored from the subtraction.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222146,"byte_end":222210,"line_start":587,"line_end":587,"column_start":5,"column_end":69}},{"value":"/ (We cannot return `Duration` because it is subject to overflow or underflow.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222215,"byte_end":222296,"line_start":588,"line_end":588,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222301,"byte_end":222304,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222309,"byte_end":222322,"line_start":590,"line_end":590,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222327,"byte_end":222330,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222335,"byte_end":222343,"line_start":592,"line_end":592,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; extern crate time; fn main() {","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222348,"byte_end":222405,"line_start":593,"line_end":593,"column_start":5,"column_end":62}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222410,"byte_end":222436,"line_start":594,"line_end":594,"column_start":5,"column_end":31}},{"value":"/ use time::Duration;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222441,"byte_end":222464,"line_start":595,"line_end":595,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222469,"byte_end":222472,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ let from_hms = NaiveTime::from_hms;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222477,"byte_end":222516,"line_start":597,"line_end":597,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222521,"byte_end":222524,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(2)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222529,"byte_end":222605,"line_start":599,"line_end":599,"column_start":5,"column_end":81}},{"value":"/            (from_hms(1, 4, 5), 0));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222610,"byte_end":222649,"line_start":600,"line_end":600,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(17)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222654,"byte_end":222731,"line_start":601,"line_end":601,"column_start":5,"column_end":82}},{"value":"/            (from_hms(10, 4, 5), 86_400));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222736,"byte_end":222781,"line_start":602,"line_end":602,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(-22)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222786,"byte_end":222864,"line_start":603,"line_end":603,"column_start":5,"column_end":83}},{"value":"/            (from_hms(1, 4, 5), -86_400));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222869,"byte_end":222914,"line_start":604,"line_end":604,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222919,"byte_end":222926,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222931,"byte_end":222939,"line_start":606,"line_end":606,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":222944,"byte_end":222953,"line_start":607,"line_end":607,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":226041,"byte_end":226062,"line_start":673,"line_end":673,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<NaiveTime>::signed_duration_since","value":"pub fn signed_duration_since(Self, NaiveTime) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `NaiveTime` from the current time.\n Returns a `Duration` within +/- 1 day.\n This does not overflow or underflow at all.","sig":null,"attributes":[{"value":"/ Subtracts another `NaiveTime` from the current time.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":223179,"byte_end":223235,"line_start":613,"line_end":613,"column_start":5,"column_end":61}},{"value":"/ Returns a `Duration` within +/- 1 day.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":223240,"byte_end":223282,"line_start":614,"line_end":614,"column_start":5,"column_end":47}},{"value":"/ This does not overflow or underflow at all.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":223287,"byte_end":223334,"line_start":615,"line_end":615,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":223339,"byte_end":223342,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ As a part of Chrono's [leap second handling](#leap-second-handling),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":223347,"byte_end":223419,"line_start":617,"line_end":617,"column_start":5,"column_end":77}},{"value":"/ the subtraction assumes that **there is no leap second ever**,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":223424,"byte_end":223490,"line_start":618,"line_end":618,"column_start":5,"column_end":71}},{"value":"/ except when any of the `NaiveTime`s themselves represents a leap second","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":223495,"byte_end":223570,"line_start":619,"line_end":619,"column_start":5,"column_end":80}},{"value":"/ in which case the assumption becomes that","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":223575,"byte_end":223620,"line_start":620,"line_end":620,"column_start":5,"column_end":50}},{"value":"/ **there are exactly one (or two) leap second(s) ever**.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":223625,"byte_end":223684,"line_start":621,"line_end":621,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":223689,"byte_end":223692,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":223697,"byte_end":223710,"line_start":623,"line_end":623,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":223715,"byte_end":223718,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":223723,"byte_end":223731,"line_start":625,"line_end":625,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; extern crate time; fn main() {","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":223736,"byte_end":223793,"line_start":626,"line_end":626,"column_start":5,"column_end":62}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":223798,"byte_end":223824,"line_start":627,"line_end":627,"column_start":5,"column_end":31}},{"value":"/ use time::Duration;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":223829,"byte_end":223852,"line_start":628,"line_end":628,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":223857,"byte_end":223860,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ let from_hmsm = NaiveTime::from_hms_milli;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":223865,"byte_end":223911,"line_start":630,"line_end":630,"column_start":5,"column_end":51}},{"value":"/ let since = NaiveTime::signed_duration_since;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":223916,"byte_end":223965,"line_start":631,"line_end":631,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":223970,"byte_end":223973,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 7, 900)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":223978,"byte_end":224049,"line_start":633,"line_end":633,"column_start":5,"column_end":76}},{"value":"/            Duration::zero());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":224054,"byte_end":224087,"line_start":634,"line_end":634,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 7, 875)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":224092,"byte_end":224163,"line_start":635,"line_end":635,"column_start":5,"column_end":76}},{"value":"/            Duration::milliseconds(25));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":224168,"byte_end":224211,"line_start":636,"line_end":636,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 6, 925)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":224216,"byte_end":224287,"line_start":637,"line_end":637,"column_start":5,"column_end":76}},{"value":"/            Duration::milliseconds(975));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":224292,"byte_end":224336,"line_start":638,"line_end":638,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 0, 900)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":224341,"byte_end":224412,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(7));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":224417,"byte_end":224454,"line_start":640,"line_end":640,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 0, 7, 900)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":224459,"byte_end":224530,"line_start":641,"line_end":641,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(5 * 60));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":224535,"byte_end":224577,"line_start":642,"line_end":642,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(0, 5, 7, 900)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":224582,"byte_end":224653,"line_start":643,"line_end":643,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(3 * 3600));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":224658,"byte_end":224702,"line_start":644,"line_end":644,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(4, 5, 7, 900)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":224707,"byte_end":224778,"line_start":645,"line_end":645,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(-3600));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":224783,"byte_end":224824,"line_start":646,"line_end":646,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(2, 4, 6, 800)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":224829,"byte_end":224900,"line_start":647,"line_end":647,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(3600 + 60 + 1) + Duration::milliseconds(100));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":224905,"byte_end":224984,"line_start":648,"line_end":648,"column_start":5,"column_end":84}},{"value":"/ # }","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":224989,"byte_end":224996,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":225001,"byte_end":225009,"line_start":650,"line_end":650,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":225014,"byte_end":225017,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ Leap seconds are handled, but the subtraction assumes that","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":225022,"byte_end":225084,"line_start":652,"line_end":652,"column_start":5,"column_end":67}},{"value":"/ there were no other leap seconds happened.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":225089,"byte_end":225135,"line_start":653,"line_end":653,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":225140,"byte_end":225143,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":225148,"byte_end":225156,"line_start":655,"line_end":655,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; extern crate time; fn main() {","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":225161,"byte_end":225218,"line_start":656,"line_end":656,"column_start":5,"column_end":62}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":225223,"byte_end":225251,"line_start":657,"line_end":657,"column_start":5,"column_end":33}},{"value":"/ # use time::Duration;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":225256,"byte_end":225281,"line_start":658,"line_end":658,"column_start":5,"column_end":30}},{"value":"/ # let from_hmsm = NaiveTime::from_hms_milli;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":225286,"byte_end":225334,"line_start":659,"line_end":659,"column_start":5,"column_end":53}},{"value":"/ # let since = NaiveTime::signed_duration_since;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":225339,"byte_end":225390,"line_start":660,"line_end":660,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(3, 0, 59, 0)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":225395,"byte_end":225468,"line_start":661,"line_end":661,"column_start":5,"column_end":78}},{"value":"/            Duration::seconds(1));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":225473,"byte_end":225510,"line_start":662,"line_end":662,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 59, 1_500), from_hmsm(3, 0, 59, 0)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":225515,"byte_end":225588,"line_start":663,"line_end":663,"column_start":5,"column_end":78}},{"value":"/            Duration::milliseconds(1500));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":225593,"byte_end":225638,"line_start":664,"line_end":664,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(3, 0, 0, 0)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":225643,"byte_end":225715,"line_start":665,"line_end":665,"column_start":5,"column_end":77}},{"value":"/            Duration::seconds(60));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":225720,"byte_end":225758,"line_start":666,"line_end":666,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 0, 0), from_hmsm(2, 59, 59, 1_000)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":225763,"byte_end":225836,"line_start":667,"line_end":667,"column_start":5,"column_end":78}},{"value":"/            Duration::seconds(1));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":225841,"byte_end":225878,"line_start":668,"line_end":668,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(2, 59, 59, 1_000)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":225883,"byte_end":225961,"line_start":669,"line_end":669,"column_start":5,"column_end":83}},{"value":"/            Duration::seconds(61));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":225966,"byte_end":226004,"line_start":670,"line_end":670,"column_start":5,"column_end":43}},{"value":"/ # }","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":226009,"byte_end":226016,"line_start":671,"line_end":671,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":226021,"byte_end":226029,"line_start":672,"line_end":672,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":228449,"byte_end":228466,"line_start":727,"line_end":727,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<NaiveTime>::format_with_items","value":"pub fn format_with_items<'a, I>(&Self, I) -> DelayedFormat<I> where\nI: Iterator<Item = Item> + Clone","parent":null,"children":[],"decl_id":null,"docs":" Formats the time with the specified formatting items.\n Otherwise it is same to the ordinary [`format`](#method.format) method.","sig":null,"attributes":[{"value":"/ Formats the time with the specified formatting items.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":227332,"byte_end":227389,"line_start":699,"line_end":699,"column_start":5,"column_end":62}},{"value":"/ Otherwise it is same to the ordinary [`format`](#method.format) method.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":227394,"byte_end":227469,"line_start":700,"line_end":700,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":227474,"byte_end":227477,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ The `Iterator` of items should be `Clone`able,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":227482,"byte_end":227532,"line_start":702,"line_end":702,"column_start":5,"column_end":55}},{"value":"/ since the resulting `DelayedFormat` value may be formatted multiple times.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":227537,"byte_end":227615,"line_start":703,"line_end":703,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":227620,"byte_end":227623,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":227628,"byte_end":227641,"line_start":705,"line_end":705,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":227646,"byte_end":227649,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":227654,"byte_end":227662,"line_start":707,"line_end":707,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":227667,"byte_end":227693,"line_start":708,"line_end":708,"column_start":5,"column_end":31}},{"value":"/ use chrono::format::strftime::StrftimeItems;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":227698,"byte_end":227746,"line_start":709,"line_end":709,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":227751,"byte_end":227754,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ let fmt = StrftimeItems::new(\"%H:%M:%S\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":227759,"byte_end":227804,"line_start":711,"line_end":711,"column_start":5,"column_end":50}},{"value":"/ let t = NaiveTime::from_hms(23, 56, 4);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":227809,"byte_end":227852,"line_start":712,"line_end":712,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(t.format_with_items(fmt.clone()).to_string(), \"23:56:04\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":227857,"byte_end":227930,"line_start":713,"line_end":713,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(t.format(\"%H:%M:%S\").to_string(),             \"23:56:04\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":227935,"byte_end":228008,"line_start":714,"line_end":714,"column_start":5,"column_end":78}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":228013,"byte_end":228021,"line_start":715,"line_end":715,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":228026,"byte_end":228029,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ The resulting `DelayedFormat` can be formatted directly via the `Display` trait.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":228034,"byte_end":228118,"line_start":717,"line_end":717,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":228123,"byte_end":228126,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":228131,"byte_end":228139,"line_start":719,"line_end":719,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":228144,"byte_end":228172,"line_start":720,"line_end":720,"column_start":5,"column_end":33}},{"value":"/ # use chrono::format::strftime::StrftimeItems;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":228177,"byte_end":228227,"line_start":721,"line_end":721,"column_start":5,"column_end":55}},{"value":"/ # let fmt = StrftimeItems::new(\"%H:%M:%S\").clone();","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":228232,"byte_end":228287,"line_start":722,"line_end":722,"column_start":5,"column_end":60}},{"value":"/ # let t = NaiveTime::from_hms(23, 56, 4);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":228292,"byte_end":228337,"line_start":723,"line_end":723,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(format!(\"{}\", t.format_with_items(fmt)), \"23:56:04\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":228342,"byte_end":228410,"line_start":724,"line_end":724,"column_start":5,"column_end":73}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":228415,"byte_end":228423,"line_start":725,"line_end":725,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":228428,"byte_end":228437,"line_start":726,"line_end":726,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":230197,"byte_end":230203,"line_start":767,"line_end":767,"column_start":12,"column_end":18},"name":"format","qualname":"<NaiveTime>::format","value":"pub fn format<'a>(&Self, &'a str) -> DelayedFormat<StrftimeItems>","parent":null,"children":[],"decl_id":null,"docs":" Formats the time with the specified format string.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Formats the time with the specified format string.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":228630,"byte_end":228684,"line_start":732,"line_end":732,"column_start":5,"column_end":59}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":228689,"byte_end":228759,"line_start":733,"line_end":733,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":228764,"byte_end":228802,"line_start":734,"line_end":734,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":228807,"byte_end":228810,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ This returns a `DelayedFormat`,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":228815,"byte_end":228850,"line_start":736,"line_end":736,"column_start":5,"column_end":40}},{"value":"/ which gets converted to a string only when actual formatting happens.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":228855,"byte_end":228928,"line_start":737,"line_end":737,"column_start":5,"column_end":78}},{"value":"/ You may use the `to_string` method to get a `String`,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":228933,"byte_end":228990,"line_start":738,"line_end":738,"column_start":5,"column_end":62}},{"value":"/ or just feed it into `print!` and other formatting macros.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":228995,"byte_end":229057,"line_start":739,"line_end":739,"column_start":5,"column_end":67}},{"value":"/ (In this way it avoids the redundant memory allocation.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229062,"byte_end":229122,"line_start":740,"line_end":740,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229127,"byte_end":229130,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ A wrong format string does *not* issue an error immediately.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229135,"byte_end":229199,"line_start":742,"line_end":742,"column_start":5,"column_end":69}},{"value":"/ Rather, converting or formatting the `DelayedFormat` fails.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229204,"byte_end":229267,"line_start":743,"line_end":743,"column_start":5,"column_end":68}},{"value":"/ You are recommended to immediately use `DelayedFormat` for this reason.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229272,"byte_end":229347,"line_start":744,"line_end":744,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229352,"byte_end":229355,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229360,"byte_end":229373,"line_start":746,"line_end":746,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229378,"byte_end":229381,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229386,"byte_end":229394,"line_start":748,"line_end":748,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229399,"byte_end":229425,"line_start":749,"line_end":749,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229430,"byte_end":229433,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229438,"byte_end":229498,"line_start":751,"line_end":751,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(t.format(\"%H:%M:%S\").to_string(), \"23:56:04\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229503,"byte_end":229564,"line_start":752,"line_end":752,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(t.format(\"%H:%M:%S%.6f\").to_string(), \"23:56:04.012345\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229569,"byte_end":229641,"line_start":753,"line_end":753,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(t.format(\"%-I:%M %p\").to_string(), \"11:56 PM\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229646,"byte_end":229708,"line_start":754,"line_end":754,"column_start":5,"column_end":67}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229713,"byte_end":229721,"line_start":755,"line_end":755,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229726,"byte_end":229729,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ The resulting `DelayedFormat` can be formatted directly via the `Display` trait.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229734,"byte_end":229818,"line_start":757,"line_end":757,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229823,"byte_end":229826,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229831,"byte_end":229839,"line_start":759,"line_end":759,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229844,"byte_end":229872,"line_start":760,"line_end":760,"column_start":5,"column_end":33}},{"value":"/ # let t = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229877,"byte_end":229939,"line_start":761,"line_end":761,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(format!(\"{}\", t.format(\"%H:%M:%S\")), \"23:56:04\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":229944,"byte_end":230008,"line_start":762,"line_end":762,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(format!(\"{}\", t.format(\"%H:%M:%S%.6f\")), \"23:56:04.012345\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":230013,"byte_end":230088,"line_start":763,"line_end":763,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(format!(\"{}\", t.format(\"%-I:%M %p\")), \"11:56 PM\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":230093,"byte_end":230158,"line_start":764,"line_end":764,"column_start":5,"column_end":70}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":230163,"byte_end":230171,"line_start":765,"line_end":765,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":230176,"byte_end":230185,"line_start":766,"line_end":766,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2089},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271017,"byte_end":271030,"line_start":51,"line_end":51,"column_start":12,"column_end":25},"name":"NaiveDateTime","qualname":"::naive::datetime::NaiveDateTime","value":"NaiveDateTime {  }","parent":null,"children":[{"krate":0,"index":2090},{"krate":0,"index":2091}],"decl_id":null,"docs":" ISO 8601 combined date and time without timezone.","sig":null,"attributes":[{"value":"/ ISO 8601 combined date and time without timezone.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270153,"byte_end":270206,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270207,"byte_end":270210,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270211,"byte_end":270224,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270225,"byte_end":270228,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ `NaiveDateTime` is commonly created from [`NaiveDate`](./struct.NaiveDate.html).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270229,"byte_end":270313,"line_start":29,"line_end":29,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270314,"byte_end":270317,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270318,"byte_end":270326,"line_start":31,"line_end":31,"column_start":1,"column_end":9}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270327,"byte_end":270370,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270371,"byte_end":270374,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270375,"byte_end":270454,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ # let _ = dt;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270455,"byte_end":270472,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270473,"byte_end":270481,"line_start":36,"line_end":36,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270482,"byte_end":270485,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ You can use typical [date-like](../trait.Datelike.html) and","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270486,"byte_end":270549,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/ [time-like](../trait.Timelike.html) methods,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270550,"byte_end":270598,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/ provided that relevant traits are in the scope.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270599,"byte_end":270650,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270651,"byte_end":270654,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270655,"byte_end":270663,"line_start":42,"line_end":42,"column_start":1,"column_end":9}},{"value":"/ # use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270664,"byte_end":270709,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ # let dt: NaiveDateTime = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270710,"byte_end":270791,"line_start":44,"line_end":44,"column_start":1,"column_end":82}},{"value":"/ use chrono::{Datelike, Timelike, Weekday};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270792,"byte_end":270838,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270839,"byte_end":270842,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Fri);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270843,"byte_end":270886,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(dt.num_seconds_from_midnight(), 33011);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270887,"byte_end":270941,"line_start":48,"line_end":48,"column_start":1,"column_end":55}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":270942,"byte_end":270950,"line_start":49,"line_end":49,"column_start":1,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271692,"byte_end":271695,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<NaiveDateTime>::new","value":"pub fn new(NaiveDate, NaiveTime) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from date and time components.\n Equivalent to [`date.and_time(time)`](./struct.NaiveDate.html#method.and_time)\n and many other helper constructors on `NaiveDate`.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from date and time components.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271103,"byte_end":271165,"line_start":57,"line_end":57,"column_start":5,"column_end":67}},{"value":"/ Equivalent to [`date.and_time(time)`](./struct.NaiveDate.html#method.and_time)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271170,"byte_end":271252,"line_start":58,"line_end":58,"column_start":5,"column_end":87}},{"value":"/ and many other helper constructors on `NaiveDate`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271257,"byte_end":271311,"line_start":59,"line_end":59,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271316,"byte_end":271319,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271324,"byte_end":271337,"line_start":61,"line_end":61,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271342,"byte_end":271345,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271350,"byte_end":271358,"line_start":63,"line_end":63,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, NaiveTime, NaiveDateTime};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271363,"byte_end":271417,"line_start":64,"line_end":64,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271422,"byte_end":271425,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271430,"byte_end":271474,"line_start":66,"line_end":66,"column_start":5,"column_end":49}},{"value":"/ let t = NaiveTime::from_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271479,"byte_end":271534,"line_start":67,"line_end":67,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271539,"byte_end":271542,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDateTime::new(d, t);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271547,"byte_end":271585,"line_start":69,"line_end":69,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(dt.date(), d);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271590,"byte_end":271619,"line_start":70,"line_end":70,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dt.time(), t);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271624,"byte_end":271653,"line_start":71,"line_end":71,"column_start":5,"column_end":34}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271658,"byte_end":271666,"line_start":72,"line_end":72,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271671,"byte_end":271680,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272978,"byte_end":272992,"line_start":104,"line_end":104,"column_start":12,"column_end":26},"name":"from_timestamp","qualname":"<NaiveDateTime>::from_timestamp","value":"pub fn from_timestamp(i64, u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` corresponding to a UTC date and time,\n from the number of non-leap seconds\n since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` corresponding to a UTC date and time,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271809,"byte_end":271878,"line_start":78,"line_end":78,"column_start":5,"column_end":74}},{"value":"/ from the number of non-leap seconds","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271883,"byte_end":271922,"line_start":79,"line_end":79,"column_start":5,"column_end":44}},{"value":"/ since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271927,"byte_end":271995,"line_start":80,"line_end":80,"column_start":5,"column_end":73}},{"value":"/ and the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272000,"byte_end":272071,"line_start":81,"line_end":81,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272076,"byte_end":272079,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ For a non-naive version of this function see","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272084,"byte_end":272132,"line_start":83,"line_end":83,"column_start":5,"column_end":53}},{"value":"/ [`TimeZone::timestamp`](../offset/trait.TimeZone.html#method.timestamp).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272137,"byte_end":272213,"line_start":84,"line_end":84,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272218,"byte_end":272221,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000 in order to represent the","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272226,"byte_end":272300,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ [leap second](./struct.NaiveTime.html#leap-second-handling). (The true \"UNIX","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272305,"byte_end":272385,"line_start":87,"line_end":87,"column_start":5,"column_end":85}},{"value":"/ timestamp\" cannot represent a leap second unambiguously.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272390,"byte_end":272451,"line_start":88,"line_end":88,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272456,"byte_end":272459,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range number of seconds and/or invalid nanosecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272464,"byte_end":272539,"line_start":90,"line_end":90,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272544,"byte_end":272547,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272552,"byte_end":272565,"line_start":92,"line_end":92,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272570,"byte_end":272573,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272578,"byte_end":272586,"line_start":94,"line_end":94,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272591,"byte_end":272634,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272639,"byte_end":272642,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDateTime::from_timestamp(0, 42_000_000);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272647,"byte_end":272705,"line_start":97,"line_end":97,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(dt, NaiveDate::from_ymd(1970, 1, 1).and_hms_milli(0, 0, 0, 42));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272710,"byte_end":272789,"line_start":98,"line_end":98,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272794,"byte_end":272797,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDateTime::from_timestamp(1_000_000_000, 0);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272802,"byte_end":272863,"line_start":100,"line_end":100,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt, NaiveDate::from_ymd(2001, 9, 9).and_hms(1, 46, 40));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272868,"byte_end":272939,"line_start":101,"line_end":101,"column_start":5,"column_end":76}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272944,"byte_end":272952,"line_start":102,"line_end":102,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":272957,"byte_end":272966,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":274334,"byte_end":274352,"line_start":135,"line_end":135,"column_start":12,"column_end":30},"name":"from_timestamp_opt","qualname":"<NaiveDateTime>::from_timestamp_opt","value":"pub fn from_timestamp_opt(i64, u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` corresponding to a UTC date and time,\n from the number of non-leap seconds\n since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` corresponding to a UTC date and time,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":273177,"byte_end":273246,"line_start":109,"line_end":109,"column_start":5,"column_end":74}},{"value":"/ from the number of non-leap seconds","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":273251,"byte_end":273290,"line_start":110,"line_end":110,"column_start":5,"column_end":44}},{"value":"/ since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":273295,"byte_end":273363,"line_start":111,"line_end":111,"column_start":5,"column_end":73}},{"value":"/ and the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":273368,"byte_end":273439,"line_start":112,"line_end":112,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":273444,"byte_end":273447,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":273452,"byte_end":273500,"line_start":114,"line_end":114,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":273505,"byte_end":273595,"line_start":115,"line_end":115,"column_start":5,"column_end":95}},{"value":"/ (The true \"UNIX timestamp\" cannot represent a leap second unambiguously.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":273600,"byte_end":273677,"line_start":116,"line_end":116,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":273682,"byte_end":273685,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range number of seconds and/or invalid nanosecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":273690,"byte_end":273773,"line_start":118,"line_end":118,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":273778,"byte_end":273781,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":273786,"byte_end":273799,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":273804,"byte_end":273807,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":273812,"byte_end":273820,"line_start":122,"line_end":122,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":273825,"byte_end":273868,"line_start":123,"line_end":123,"column_start":5,"column_end":48}},{"value":"/ use std::i64;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":273873,"byte_end":273890,"line_start":124,"line_end":124,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":273895,"byte_end":273898,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let from_timestamp_opt = NaiveDateTime::from_timestamp_opt;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":273903,"byte_end":273966,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":273971,"byte_end":273974,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert!(from_timestamp_opt(0, 0).is_some());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":273979,"byte_end":274027,"line_start":128,"line_end":128,"column_start":5,"column_end":53}},{"value":"/ assert!(from_timestamp_opt(0, 999_999_999).is_some());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":274032,"byte_end":274090,"line_start":129,"line_end":129,"column_start":5,"column_end":63}},{"value":"/ assert!(from_timestamp_opt(0, 1_500_000_000).is_some()); // leap second","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":274095,"byte_end":274170,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"/ assert!(from_timestamp_opt(0, 2_000_000_000).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":274175,"byte_end":274235,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/ assert!(from_timestamp_opt(i64::MAX, 0).is_none());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":274240,"byte_end":274295,"line_start":132,"line_end":132,"column_start":5,"column_end":60}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":274300,"byte_end":274308,"line_start":133,"line_end":133,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":274313,"byte_end":274322,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":277731,"byte_end":277745,"line_start":207,"line_end":207,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<NaiveDateTime>::parse_from_str","value":"pub fn parse_from_str(&str, &str) -> ParseResult<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new `NaiveDateTime`.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and returns a new `NaiveDateTime`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":274868,"byte_end":274955,"line_start":146,"line_end":146,"column_start":5,"column_end":92}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":274960,"byte_end":275030,"line_start":147,"line_end":147,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275035,"byte_end":275073,"line_start":148,"line_end":148,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275078,"byte_end":275081,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275086,"byte_end":275099,"line_start":150,"line_end":150,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275104,"byte_end":275107,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275112,"byte_end":275120,"line_start":152,"line_end":152,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275125,"byte_end":275168,"line_start":153,"line_end":153,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275173,"byte_end":275176,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275181,"byte_end":275236,"line_start":155,"line_end":155,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275241,"byte_end":275244,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(parse_from_str(\"2015-09-05 23:56:04\", \"%Y-%m-%d %H:%M:%S\"),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275249,"byte_end":275323,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275328,"byte_end":275399,"line_start":158,"line_end":158,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(parse_from_str(\"5sep2015pm012345.6789\", \"%d%b%Y%p%I%M%S%.f\"),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275404,"byte_end":275480,"line_start":159,"line_end":159,"column_start":5,"column_end":81}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 9, 5).and_hms_micro(13, 23, 45, 678_900)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275485,"byte_end":275572,"line_start":160,"line_end":160,"column_start":5,"column_end":92}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275577,"byte_end":275585,"line_start":161,"line_end":161,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275590,"byte_end":275593,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Offset is ignored for the purpose of parsing.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275598,"byte_end":275647,"line_start":163,"line_end":163,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275652,"byte_end":275655,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275660,"byte_end":275668,"line_start":165,"line_end":165,"column_start":5,"column_end":13}},{"value":"/ # use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275673,"byte_end":275718,"line_start":166,"line_end":166,"column_start":5,"column_end":50}},{"value":"/ # let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275723,"byte_end":275780,"line_start":167,"line_end":167,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275785,"byte_end":275866,"line_start":168,"line_end":168,"column_start":5,"column_end":86}},{"value":"/            Ok(NaiveDate::from_ymd(2014, 5, 17).and_hms(12, 34, 56)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275871,"byte_end":275944,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275949,"byte_end":275957,"line_start":170,"line_end":170,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275962,"byte_end":275965,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ [Leap seconds](./struct.NaiveTime.html#leap-second-handling) are correctly handled by","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":275970,"byte_end":276059,"line_start":172,"line_end":172,"column_start":5,"column_end":94}},{"value":"/ treating any time of the form `hh:mm:60` as a leap second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":276064,"byte_end":276126,"line_start":173,"line_end":173,"column_start":5,"column_end":67}},{"value":"/ (This equally applies to the formatting, so the round trip is possible.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":276131,"byte_end":276207,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":276212,"byte_end":276215,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":276220,"byte_end":276228,"line_start":176,"line_end":176,"column_start":5,"column_end":13}},{"value":"/ # use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":276233,"byte_end":276278,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/ # let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":276283,"byte_end":276340,"line_start":178,"line_end":178,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(parse_from_str(\"2015-07-01 08:59:60.123\", \"%Y-%m-%d %H:%M:%S%.f\"),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":276345,"byte_end":276426,"line_start":179,"line_end":179,"column_start":5,"column_end":86}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 7, 1).and_hms_milli(8, 59, 59, 1_123)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":276431,"byte_end":276515,"line_start":180,"line_end":180,"column_start":5,"column_end":89}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":276520,"byte_end":276528,"line_start":181,"line_end":181,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":276533,"byte_end":276536,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Missing seconds are assumed to be zero,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":276541,"byte_end":276584,"line_start":183,"line_end":183,"column_start":5,"column_end":48}},{"value":"/ but out-of-bound times or insufficient fields are errors otherwise.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":276589,"byte_end":276660,"line_start":184,"line_end":184,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":276665,"byte_end":276668,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":276673,"byte_end":276681,"line_start":186,"line_end":186,"column_start":5,"column_end":13}},{"value":"/ # use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":276686,"byte_end":276731,"line_start":187,"line_end":187,"column_start":5,"column_end":50}},{"value":"/ # let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":276736,"byte_end":276793,"line_start":188,"line_end":188,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(parse_from_str(\"94/9/4 7:15\", \"%y/%m/%d %H:%M\"),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":276798,"byte_end":276861,"line_start":189,"line_end":189,"column_start":5,"column_end":68}},{"value":"/            Ok(NaiveDate::from_ymd(1994, 9, 4).and_hms(7, 15, 0)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":276866,"byte_end":276936,"line_start":190,"line_end":190,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":276941,"byte_end":276944,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ assert!(parse_from_str(\"04m33s\", \"%Mm%Ss\").is_err());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":276949,"byte_end":277006,"line_start":192,"line_end":192,"column_start":5,"column_end":62}},{"value":"/ assert!(parse_from_str(\"94/9/4 12\", \"%y/%m/%d %H\").is_err());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":277011,"byte_end":277076,"line_start":193,"line_end":193,"column_start":5,"column_end":70}},{"value":"/ assert!(parse_from_str(\"94/9/4 17:60\", \"%y/%m/%d %H:%M\").is_err());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":277081,"byte_end":277152,"line_start":194,"line_end":194,"column_start":5,"column_end":76}},{"value":"/ assert!(parse_from_str(\"94/9/4 24:00:00\", \"%y/%m/%d %H:%M:%S\").is_err());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":277157,"byte_end":277234,"line_start":195,"line_end":195,"column_start":5,"column_end":82}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":277239,"byte_end":277247,"line_start":196,"line_end":196,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":277252,"byte_end":277255,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ All parsed fields should be consistent to each other, otherwise it's an error.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":277260,"byte_end":277342,"line_start":198,"line_end":198,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":277347,"byte_end":277350,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":277355,"byte_end":277363,"line_start":200,"line_end":200,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveDateTime;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":277368,"byte_end":277400,"line_start":201,"line_end":201,"column_start":5,"column_end":37}},{"value":"/ # let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":277405,"byte_end":277462,"line_start":202,"line_end":202,"column_start":5,"column_end":62}},{"value":"/ let fmt = \"%Y-%m-%d %H:%M:%S = UNIX timestamp %s\";","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":277467,"byte_end":277521,"line_start":203,"line_end":203,"column_start":5,"column_end":59}},{"value":"/ assert!(parse_from_str(\"2001-09-09 01:46:39 = UNIX timestamp 999999999\", fmt).is_ok());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":277526,"byte_end":277617,"line_start":204,"line_end":204,"column_start":5,"column_end":96}},{"value":"/ assert!(parse_from_str(\"1970-01-01 00:00:00 = UNIX timestamp 1\", fmt).is_err());","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":277622,"byte_end":277706,"line_start":205,"line_end":205,"column_start":5,"column_end":89}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":277711,"byte_end":277719,"line_start":206,"line_end":206,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278272,"byte_end":278276,"line_start":224,"line_end":224,"column_start":12,"column_end":16},"name":"date","qualname":"<NaiveDateTime>::date","value":"pub fn date(&Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a date component.","sig":null,"attributes":[{"value":"/ Retrieves a date component.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":277983,"byte_end":278014,"line_start":213,"line_end":213,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278019,"byte_end":278022,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278027,"byte_end":278040,"line_start":215,"line_end":215,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278045,"byte_end":278048,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278053,"byte_end":278061,"line_start":217,"line_end":217,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278066,"byte_end":278092,"line_start":218,"line_end":218,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278097,"byte_end":278100,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278105,"byte_end":278169,"line_start":220,"line_end":220,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(dt.date(), NaiveDate::from_ymd(2016, 7, 8));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278174,"byte_end":278233,"line_start":221,"line_end":221,"column_start":5,"column_end":64}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278238,"byte_end":278246,"line_start":222,"line_end":222,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278251,"byte_end":278260,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278629,"byte_end":278633,"line_start":239,"line_end":239,"column_start":12,"column_end":16},"name":"time","qualname":"<NaiveDateTime>::time","value":"pub fn time(&Self) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a time component.","sig":null,"attributes":[{"value":"/ Retrieves a time component.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278328,"byte_end":278359,"line_start":228,"line_end":228,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278364,"byte_end":278367,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278372,"byte_end":278385,"line_start":230,"line_end":230,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278390,"byte_end":278393,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278398,"byte_end":278406,"line_start":232,"line_end":232,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, NaiveTime};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278411,"byte_end":278450,"line_start":233,"line_end":233,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278455,"byte_end":278458,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278463,"byte_end":278527,"line_start":235,"line_end":235,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(dt.time(), NaiveTime::from_hms(9, 10, 11));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278532,"byte_end":278590,"line_start":236,"line_end":236,"column_start":5,"column_end":63}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278595,"byte_end":278603,"line_start":237,"line_end":237,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278608,"byte_end":278617,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":279540,"byte_end":279549,"line_start":266,"line_end":266,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<NaiveDateTime>::timestamp","value":"pub fn timestamp(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap seconds since the midnight on January 1, 1970.","sig":null,"attributes":[{"value":"/ Returns the number of non-leap seconds since the midnight on January 1, 1970.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278685,"byte_end":278766,"line_start":243,"line_end":243,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278771,"byte_end":278774,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Note that this does *not* account for the timezone!","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278779,"byte_end":278834,"line_start":245,"line_end":245,"column_start":5,"column_end":60}},{"value":"/ The true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278839,"byte_end":278927,"line_start":246,"line_end":246,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278932,"byte_end":278935,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278940,"byte_end":278953,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278958,"byte_end":278961,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278966,"byte_end":278974,"line_start":250,"line_end":250,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":278979,"byte_end":279005,"line_start":251,"line_end":251,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":279010,"byte_end":279013,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1970, 1, 1).and_hms_milli(0, 0, 1, 980);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":279018,"byte_end":279091,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(dt.timestamp(), 1);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":279096,"byte_end":279130,"line_start":254,"line_end":254,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":279135,"byte_end":279138,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2001, 9, 9).and_hms(1, 46, 40);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":279143,"byte_end":279207,"line_start":256,"line_end":256,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(dt.timestamp(), 1_000_000_000);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":279212,"byte_end":279258,"line_start":257,"line_end":257,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":279263,"byte_end":279266,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1969, 12, 31).and_hms(23, 59, 59);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":279271,"byte_end":279338,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(dt.timestamp(), -1);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":279343,"byte_end":279378,"line_start":260,"line_end":260,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":279383,"byte_end":279386,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(-1, 1, 1).and_hms(0, 0, 0);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":279391,"byte_end":279451,"line_start":262,"line_end":262,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(dt.timestamp(), -62198755200);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":279456,"byte_end":279501,"line_start":263,"line_end":263,"column_start":5,"column_end":50}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":279506,"byte_end":279514,"line_start":264,"line_end":264,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":279519,"byte_end":279528,"line_start":265,"line_end":265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280927,"byte_end":280943,"line_start":298,"line_end":298,"column_start":12,"column_end":28},"name":"timestamp_millis","qualname":"<NaiveDateTime>::timestamp_millis","value":"pub fn timestamp_millis(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap *milliseconds* since midnight on January 1, 1970.","sig":null,"attributes":[{"value":"/ Returns the number of non-leap *milliseconds* since midnight on January 1, 1970.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":279851,"byte_end":279935,"line_start":273,"line_end":273,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":279940,"byte_end":279943,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Note that this does *not* account for the timezone!","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":279948,"byte_end":280003,"line_start":275,"line_end":275,"column_start":5,"column_end":60}},{"value":"/ The true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280008,"byte_end":280096,"line_start":276,"line_end":276,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280101,"byte_end":280104,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note also that this does reduce the number of years that can be","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280109,"byte_end":280176,"line_start":278,"line_end":278,"column_start":5,"column_end":72}},{"value":"/ represented from ~584 Billion to ~584 Million. (If this is a problem,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280181,"byte_end":280254,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ please file an issue to let me know what domain needs millisecond","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280259,"byte_end":280328,"line_start":280,"line_end":280,"column_start":5,"column_end":74}},{"value":"/ precision over billions of years, I'm curious.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280333,"byte_end":280384,"line_start":281,"line_end":281,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280389,"byte_end":280392,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280397,"byte_end":280410,"line_start":283,"line_end":283,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280415,"byte_end":280418,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280423,"byte_end":280431,"line_start":285,"line_end":285,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280436,"byte_end":280462,"line_start":286,"line_end":286,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280467,"byte_end":280470,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1970, 1, 1).and_hms_milli(0, 0, 1, 444);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280475,"byte_end":280548,"line_start":288,"line_end":288,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(dt.timestamp_millis(), 1_444);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280553,"byte_end":280598,"line_start":289,"line_end":289,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280603,"byte_end":280606,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2001, 9, 9).and_hms_milli(1, 46, 40, 555);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280611,"byte_end":280686,"line_start":291,"line_end":291,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(dt.timestamp_millis(), 1_000_000_000_555);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280691,"byte_end":280748,"line_start":292,"line_end":292,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280753,"byte_end":280756,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1969, 12, 31).and_hms_milli(23, 59, 59, 100);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280761,"byte_end":280839,"line_start":294,"line_end":294,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(dt.timestamp_millis(), -900);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280844,"byte_end":280888,"line_start":295,"line_end":295,"column_start":5,"column_end":49}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280893,"byte_end":280901,"line_start":296,"line_end":296,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":280906,"byte_end":280915,"line_start":297,"line_end":297,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282410,"byte_end":282425,"line_start":337,"line_end":337,"column_start":12,"column_end":27},"name":"timestamp_nanos","qualname":"<NaiveDateTime>::timestamp_nanos","value":"pub fn timestamp_nanos(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap *nanoseconds* since midnight on January 1, 1970.","sig":null,"attributes":[{"value":"/ Returns the number of non-leap *nanoseconds* since midnight on January 1, 1970.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":281074,"byte_end":281157,"line_start":303,"line_end":303,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":281162,"byte_end":281165,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Note that this does *not* account for the timezone!","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":281170,"byte_end":281225,"line_start":305,"line_end":305,"column_start":5,"column_end":60}},{"value":"/ The true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":281230,"byte_end":281318,"line_start":306,"line_end":306,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":281323,"byte_end":281326,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":281331,"byte_end":281343,"line_start":308,"line_end":308,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":281348,"byte_end":281351,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ Note also that this does reduce the number of years that can be","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":281356,"byte_end":281423,"line_start":310,"line_end":310,"column_start":5,"column_end":72}},{"value":"/ represented from ~584 Billion to ~584 years. The dates that can be","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":281428,"byte_end":281498,"line_start":311,"line_end":311,"column_start":5,"column_end":75}},{"value":"/ represented as nanoseconds are between 1677-09-21T00:12:44.0 and","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":281503,"byte_end":281571,"line_start":312,"line_end":312,"column_start":5,"column_end":73}},{"value":"/ 2262-04-11T23:47:16.854775804.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":281576,"byte_end":281610,"line_start":313,"line_end":313,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":281615,"byte_end":281618,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ (If this is a problem, please file an issue to let me know what domain","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":281623,"byte_end":281697,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/ needs nanosecond precision over millenia, I'm curious.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":281702,"byte_end":281761,"line_start":316,"line_end":316,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":281766,"byte_end":281769,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":281774,"byte_end":281787,"line_start":318,"line_end":318,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":281792,"byte_end":281795,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":281800,"byte_end":281808,"line_start":320,"line_end":320,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":281813,"byte_end":281856,"line_start":321,"line_end":321,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":281861,"byte_end":281864,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1970, 1, 1).and_hms_nano(0, 0, 1, 444);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":281869,"byte_end":281941,"line_start":323,"line_end":323,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(dt.timestamp_nanos(), 1_000_000_444);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":281946,"byte_end":281998,"line_start":324,"line_end":324,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282003,"byte_end":282006,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2001, 9, 9).and_hms_nano(1, 46, 40, 555);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282011,"byte_end":282085,"line_start":326,"line_end":326,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282090,"byte_end":282093,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ const A_BILLION: i64 = 1_000_000_000;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282098,"byte_end":282139,"line_start":328,"line_end":328,"column_start":5,"column_end":46}},{"value":"/ let nanos = dt.timestamp_nanos();","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282144,"byte_end":282181,"line_start":329,"line_end":329,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(nanos, 1_000_000_000_000_000_555);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282186,"byte_end":282235,"line_start":330,"line_end":330,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282240,"byte_end":282255,"line_start":331,"line_end":331,"column_start":5,"column_end":20}},{"value":"/     dt,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282260,"byte_end":282271,"line_start":332,"line_end":332,"column_start":5,"column_end":16}},{"value":"/     NaiveDateTime::from_timestamp(nanos / A_BILLION, (nanos % A_BILLION) as u32)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282276,"byte_end":282360,"line_start":333,"line_end":333,"column_start":5,"column_end":89}},{"value":"/ );","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282365,"byte_end":282371,"line_start":334,"line_end":334,"column_start":5,"column_end":11}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282376,"byte_end":282384,"line_start":335,"line_end":335,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282389,"byte_end":282398,"line_start":336,"line_end":336,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283203,"byte_end":283226,"line_start":359,"line_end":359,"column_start":12,"column_end":35},"name":"timestamp_subsec_millis","qualname":"<NaiveDateTime>::timestamp_subsec_millis","value":"pub fn timestamp_subsec_millis(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of milliseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Returns the number of milliseconds since the last whole non-leap second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282564,"byte_end":282640,"line_start":342,"line_end":342,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282645,"byte_end":282648,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 999,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282653,"byte_end":282695,"line_start":344,"line_end":344,"column_start":5,"column_end":47}},{"value":"/ or for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282700,"byte_end":282782,"line_start":345,"line_end":345,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282787,"byte_end":282790,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282795,"byte_end":282808,"line_start":347,"line_end":347,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282813,"byte_end":282816,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282821,"byte_end":282829,"line_start":349,"line_end":349,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282834,"byte_end":282860,"line_start":350,"line_end":350,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282865,"byte_end":282868,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms_nano(9, 10, 11, 123_456_789);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282873,"byte_end":282955,"line_start":352,"line_end":352,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(dt.timestamp_subsec_millis(), 123);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":282960,"byte_end":283010,"line_start":353,"line_end":353,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283015,"byte_end":283018,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 7, 1).and_hms_nano(8, 59, 59, 1_234_567_890);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283023,"byte_end":283107,"line_start":355,"line_end":355,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(dt.timestamp_subsec_millis(), 1_234);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283112,"byte_end":283164,"line_start":356,"line_end":356,"column_start":5,"column_end":57}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283169,"byte_end":283177,"line_start":357,"line_end":357,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283182,"byte_end":283191,"line_start":358,"line_end":358,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283959,"byte_end":283982,"line_start":380,"line_end":380,"column_start":12,"column_end":35},"name":"timestamp_subsec_micros","qualname":"<NaiveDateTime>::timestamp_subsec_micros","value":"pub fn timestamp_subsec_micros(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of microseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Returns the number of microseconds since the last whole non-leap second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283304,"byte_end":283380,"line_start":363,"line_end":363,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283385,"byte_end":283388,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 999,999,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283393,"byte_end":283439,"line_start":365,"line_end":365,"column_start":5,"column_end":51}},{"value":"/ or for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999,999.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283444,"byte_end":283530,"line_start":366,"line_end":366,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283535,"byte_end":283538,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283543,"byte_end":283556,"line_start":368,"line_end":368,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283561,"byte_end":283564,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283569,"byte_end":283577,"line_start":370,"line_end":370,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283582,"byte_end":283608,"line_start":371,"line_end":371,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283613,"byte_end":283616,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms_nano(9, 10, 11, 123_456_789);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283621,"byte_end":283703,"line_start":373,"line_end":373,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(dt.timestamp_subsec_micros(), 123_456);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283708,"byte_end":283762,"line_start":374,"line_end":374,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283767,"byte_end":283770,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 7, 1).and_hms_nano(8, 59, 59, 1_234_567_890);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283775,"byte_end":283859,"line_start":376,"line_end":376,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(dt.timestamp_subsec_micros(), 1_234_567);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283864,"byte_end":283920,"line_start":377,"line_end":377,"column_start":5,"column_end":61}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283925,"byte_end":283933,"line_start":378,"line_end":378,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":283938,"byte_end":283947,"line_start":379,"line_end":379,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":284724,"byte_end":284746,"line_start":401,"line_end":401,"column_start":12,"column_end":34},"name":"timestamp_subsec_nanos","qualname":"<NaiveDateTime>::timestamp_subsec_nanos","value":"pub fn timestamp_subsec_nanos(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Returns the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":284056,"byte_end":284131,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":284136,"byte_end":284139,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 999,999,999,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":284144,"byte_end":284194,"line_start":386,"line_end":386,"column_start":5,"column_end":55}},{"value":"/ or for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999,999,999.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":284199,"byte_end":284289,"line_start":387,"line_end":387,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":284294,"byte_end":284297,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":284302,"byte_end":284315,"line_start":389,"line_end":389,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":284320,"byte_end":284323,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":284328,"byte_end":284336,"line_start":391,"line_end":391,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":284341,"byte_end":284367,"line_start":392,"line_end":392,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":284372,"byte_end":284375,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms_nano(9, 10, 11, 123_456_789);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":284380,"byte_end":284462,"line_start":394,"line_end":394,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(dt.timestamp_subsec_nanos(), 123_456_789);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":284467,"byte_end":284524,"line_start":395,"line_end":395,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":284529,"byte_end":284532,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 7, 1).and_hms_nano(8, 59, 59, 1_234_567_890);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":284537,"byte_end":284621,"line_start":397,"line_end":397,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(dt.timestamp_subsec_nanos(), 1_234_567_890);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":284626,"byte_end":284685,"line_start":398,"line_end":398,"column_start":5,"column_end":64}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":284690,"byte_end":284698,"line_start":399,"line_end":399,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":284703,"byte_end":284712,"line_start":400,"line_end":400,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":288125,"byte_end":288143,"line_start":479,"line_end":479,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<NaiveDateTime>::checked_add_signed","value":"pub fn checked_add_signed(Self, OldDuration) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current date and time.","sig":null,"attributes":[{"value":"/ Adds given `Duration` to the current date and time.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":284805,"byte_end":284860,"line_start":405,"line_end":405,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":284865,"byte_end":284868,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ As a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":284873,"byte_end":284968,"line_start":407,"line_end":407,"column_start":5,"column_end":100}},{"value":"/ the addition assumes that **there is no leap second ever**,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":284973,"byte_end":285036,"line_start":408,"line_end":408,"column_start":5,"column_end":68}},{"value":"/ except when the `NaiveDateTime` itself represents a leap second","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285041,"byte_end":285108,"line_start":409,"line_end":409,"column_start":5,"column_end":72}},{"value":"/ in which case the assumption becomes that **there is exactly a single leap second ever**.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285113,"byte_end":285206,"line_start":410,"line_end":410,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285211,"byte_end":285214,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285219,"byte_end":285270,"line_start":412,"line_end":412,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285275,"byte_end":285278,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285283,"byte_end":285296,"line_start":414,"line_end":414,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285301,"byte_end":285304,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285309,"byte_end":285317,"line_start":416,"line_end":416,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; extern crate time; fn main() {","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285322,"byte_end":285379,"line_start":417,"line_end":417,"column_start":5,"column_end":62}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285384,"byte_end":285410,"line_start":418,"line_end":418,"column_start":5,"column_end":31}},{"value":"/ use time::Duration;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285415,"byte_end":285438,"line_start":419,"line_end":419,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285443,"byte_end":285446,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285451,"byte_end":285490,"line_start":421,"line_end":421,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285495,"byte_end":285498,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ let d = from_ymd(2016, 7, 8);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285503,"byte_end":285536,"line_start":423,"line_end":423,"column_start":5,"column_end":38}},{"value":"/ let hms = |h, m, s| d.and_hms(h, m, s);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285541,"byte_end":285584,"line_start":424,"line_end":424,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::zero()),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285589,"byte_end":285654,"line_start":425,"line_end":425,"column_start":5,"column_end":70}},{"value":"/            Some(hms(3, 5, 7)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285659,"byte_end":285694,"line_start":426,"line_end":426,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(1)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285699,"byte_end":285768,"line_start":427,"line_end":427,"column_start":5,"column_end":74}},{"value":"/            Some(hms(3, 5, 8)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285773,"byte_end":285808,"line_start":428,"line_end":428,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(-1)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285813,"byte_end":285883,"line_start":429,"line_end":429,"column_start":5,"column_end":75}},{"value":"/            Some(hms(3, 5, 6)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285888,"byte_end":285923,"line_start":430,"line_end":430,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(3600 + 60)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":285928,"byte_end":286005,"line_start":431,"line_end":431,"column_start":5,"column_end":82}},{"value":"/            Some(hms(4, 6, 7)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286010,"byte_end":286045,"line_start":432,"line_end":432,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(86_400)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286050,"byte_end":286124,"line_start":433,"line_end":433,"column_start":5,"column_end":79}},{"value":"/            Some(from_ymd(2016, 7, 9).and_hms(3, 5, 7)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286129,"byte_end":286189,"line_start":434,"line_end":434,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286194,"byte_end":286197,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let hmsm = |h, m, s, milli| d.and_hms_milli(h, m, s, milli);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286202,"byte_end":286266,"line_start":436,"line_end":436,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(hmsm(3, 5, 7, 980).checked_add_signed(Duration::milliseconds(450)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286271,"byte_end":286353,"line_start":437,"line_end":437,"column_start":5,"column_end":87}},{"value":"/            Some(hmsm(3, 5, 8, 430)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286358,"byte_end":286399,"line_start":438,"line_end":438,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286404,"byte_end":286411,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286416,"byte_end":286424,"line_start":440,"line_end":440,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286429,"byte_end":286432,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Overflow returns `None`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286437,"byte_end":286465,"line_start":442,"line_end":442,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286470,"byte_end":286473,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286478,"byte_end":286486,"line_start":444,"line_end":444,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; extern crate time; fn main() {","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286491,"byte_end":286548,"line_start":445,"line_end":445,"column_start":5,"column_end":62}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286553,"byte_end":286581,"line_start":446,"line_end":446,"column_start":5,"column_end":33}},{"value":"/ # use time::Duration;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286586,"byte_end":286611,"line_start":447,"line_end":447,"column_start":5,"column_end":30}},{"value":"/ # let hms = |h, m, s| NaiveDate::from_ymd(2016, 7, 8).and_hms(h, m, s);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286616,"byte_end":286691,"line_start":448,"line_end":448,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::days(1_000_000_000)), None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286696,"byte_end":286781,"line_start":449,"line_end":449,"column_start":5,"column_end":90}},{"value":"/ # }","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286786,"byte_end":286793,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286798,"byte_end":286806,"line_start":451,"line_end":451,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286811,"byte_end":286814,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ Leap seconds are handled,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286819,"byte_end":286848,"line_start":453,"line_end":453,"column_start":5,"column_end":34}},{"value":"/ but the addition assumes that it is the only leap second happened.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286853,"byte_end":286923,"line_start":454,"line_end":454,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286928,"byte_end":286931,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286936,"byte_end":286944,"line_start":456,"line_end":456,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; extern crate time; fn main() {","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":286949,"byte_end":287006,"line_start":457,"line_end":457,"column_start":5,"column_end":62}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":287011,"byte_end":287039,"line_start":458,"line_end":458,"column_start":5,"column_end":33}},{"value":"/ # use time::Duration;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":287044,"byte_end":287069,"line_start":459,"line_end":459,"column_start":5,"column_end":30}},{"value":"/ # let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":287074,"byte_end":287115,"line_start":460,"line_end":460,"column_start":5,"column_end":46}},{"value":"/ # let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli(h, m, s, milli);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":287120,"byte_end":287205,"line_start":461,"line_end":461,"column_start":5,"column_end":90}},{"value":"/ let leap = hmsm(3, 5, 59, 1_300);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":287210,"byte_end":287247,"line_start":462,"line_end":462,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::zero()),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":287252,"byte_end":287309,"line_start":463,"line_end":463,"column_start":5,"column_end":62}},{"value":"/            Some(hmsm(3, 5, 59, 1_300)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":287314,"byte_end":287358,"line_start":464,"line_end":464,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::milliseconds(-500)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":287363,"byte_end":287432,"line_start":465,"line_end":465,"column_start":5,"column_end":74}},{"value":"/            Some(hmsm(3, 5, 59, 800)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":287437,"byte_end":287479,"line_start":466,"line_end":466,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::milliseconds(500)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":287484,"byte_end":287552,"line_start":467,"line_end":467,"column_start":5,"column_end":73}},{"value":"/            Some(hmsm(3, 5, 59, 1_800)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":287557,"byte_end":287601,"line_start":468,"line_end":468,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::milliseconds(800)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":287606,"byte_end":287674,"line_start":469,"line_end":469,"column_start":5,"column_end":73}},{"value":"/            Some(hmsm(3, 6, 0, 100)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":287679,"byte_end":287720,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::seconds(10)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":287725,"byte_end":287787,"line_start":471,"line_end":471,"column_start":5,"column_end":67}},{"value":"/            Some(hmsm(3, 6, 9, 300)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":287792,"byte_end":287833,"line_start":472,"line_end":472,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::seconds(-10)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":287838,"byte_end":287901,"line_start":473,"line_end":473,"column_start":5,"column_end":68}},{"value":"/            Some(hmsm(3, 5, 50, 300)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":287906,"byte_end":287948,"line_start":474,"line_end":474,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::days(1)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":287953,"byte_end":288011,"line_start":475,"line_end":475,"column_start":5,"column_end":63}},{"value":"/            Some(from_ymd(2016, 7, 9).and_hms_milli(3, 5, 59, 300)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":288016,"byte_end":288088,"line_start":476,"line_end":476,"column_start":5,"column_end":77}},{"value":"/ # }","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":288093,"byte_end":288100,"line_start":477,"line_end":477,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":288105,"byte_end":288113,"line_start":478,"line_end":478,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":291687,"byte_end":291705,"line_start":561,"line_end":561,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<NaiveDateTime>::checked_sub_signed","value":"pub fn checked_sub_signed(Self, OldDuration) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current date and time.","sig":null,"attributes":[{"value":"/ Subtracts given `Duration` from the current date and time.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":288590,"byte_end":288652,"line_start":491,"line_end":491,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":288657,"byte_end":288660,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ As a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":288665,"byte_end":288760,"line_start":493,"line_end":493,"column_start":5,"column_end":100}},{"value":"/ the subtraction assumes that **there is no leap second ever**,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":288765,"byte_end":288831,"line_start":494,"line_end":494,"column_start":5,"column_end":71}},{"value":"/ except when the `NaiveDateTime` itself represents a leap second","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":288836,"byte_end":288903,"line_start":495,"line_end":495,"column_start":5,"column_end":72}},{"value":"/ in which case the assumption becomes that **there is exactly a single leap second ever**.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":288908,"byte_end":289001,"line_start":496,"line_end":496,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289006,"byte_end":289009,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289014,"byte_end":289065,"line_start":498,"line_end":498,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289070,"byte_end":289073,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289078,"byte_end":289091,"line_start":500,"line_end":500,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289096,"byte_end":289099,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289104,"byte_end":289112,"line_start":502,"line_end":502,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; extern crate time; fn main() {","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289117,"byte_end":289174,"line_start":503,"line_end":503,"column_start":5,"column_end":62}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289179,"byte_end":289205,"line_start":504,"line_end":504,"column_start":5,"column_end":31}},{"value":"/ use time::Duration;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289210,"byte_end":289233,"line_start":505,"line_end":505,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289238,"byte_end":289241,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289246,"byte_end":289285,"line_start":507,"line_end":507,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289290,"byte_end":289293,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let d = from_ymd(2016, 7, 8);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289298,"byte_end":289331,"line_start":509,"line_end":509,"column_start":5,"column_end":38}},{"value":"/ let hms = |h, m, s| d.and_hms(h, m, s);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289336,"byte_end":289379,"line_start":510,"line_end":510,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::zero()),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289384,"byte_end":289449,"line_start":511,"line_end":511,"column_start":5,"column_end":70}},{"value":"/            Some(hms(3, 5, 7)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289454,"byte_end":289489,"line_start":512,"line_end":512,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(1)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289494,"byte_end":289563,"line_start":513,"line_end":513,"column_start":5,"column_end":74}},{"value":"/            Some(hms(3, 5, 6)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289568,"byte_end":289603,"line_start":514,"line_end":514,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(-1)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289608,"byte_end":289678,"line_start":515,"line_end":515,"column_start":5,"column_end":75}},{"value":"/            Some(hms(3, 5, 8)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289683,"byte_end":289718,"line_start":516,"line_end":516,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(3600 + 60)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289723,"byte_end":289800,"line_start":517,"line_end":517,"column_start":5,"column_end":82}},{"value":"/            Some(hms(2, 4, 7)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289805,"byte_end":289840,"line_start":518,"line_end":518,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(86_400)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289845,"byte_end":289919,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/            Some(from_ymd(2016, 7, 7).and_hms(3, 5, 7)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289924,"byte_end":289984,"line_start":520,"line_end":520,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289989,"byte_end":289992,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ let hmsm = |h, m, s, milli| d.and_hms_milli(h, m, s, milli);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":289997,"byte_end":290061,"line_start":522,"line_end":522,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(hmsm(3, 5, 7, 450).checked_sub_signed(Duration::milliseconds(670)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290066,"byte_end":290148,"line_start":523,"line_end":523,"column_start":5,"column_end":87}},{"value":"/            Some(hmsm(3, 5, 6, 780)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290153,"byte_end":290194,"line_start":524,"line_end":524,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290199,"byte_end":290206,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290211,"byte_end":290219,"line_start":526,"line_end":526,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290224,"byte_end":290227,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ Overflow returns `None`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290232,"byte_end":290260,"line_start":528,"line_end":528,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290265,"byte_end":290268,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290273,"byte_end":290281,"line_start":530,"line_end":530,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; extern crate time; fn main() {","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290286,"byte_end":290343,"line_start":531,"line_end":531,"column_start":5,"column_end":62}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290348,"byte_end":290376,"line_start":532,"line_end":532,"column_start":5,"column_end":33}},{"value":"/ # use time::Duration;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290381,"byte_end":290406,"line_start":533,"line_end":533,"column_start":5,"column_end":30}},{"value":"/ # let hms = |h, m, s| NaiveDate::from_ymd(2016, 7, 8).and_hms(h, m, s);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290411,"byte_end":290486,"line_start":534,"line_end":534,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::days(1_000_000_000)), None);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290491,"byte_end":290576,"line_start":535,"line_end":535,"column_start":5,"column_end":90}},{"value":"/ # }","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290581,"byte_end":290588,"line_start":536,"line_end":536,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290593,"byte_end":290601,"line_start":537,"line_end":537,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290606,"byte_end":290609,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ Leap seconds are handled,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290614,"byte_end":290643,"line_start":539,"line_end":539,"column_start":5,"column_end":34}},{"value":"/ but the subtraction assumes that it is the only leap second happened.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290648,"byte_end":290721,"line_start":540,"line_end":540,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290726,"byte_end":290729,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290734,"byte_end":290742,"line_start":542,"line_end":542,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; extern crate time; fn main() {","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290747,"byte_end":290804,"line_start":543,"line_end":543,"column_start":5,"column_end":62}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290809,"byte_end":290837,"line_start":544,"line_end":544,"column_start":5,"column_end":33}},{"value":"/ # use time::Duration;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290842,"byte_end":290867,"line_start":545,"line_end":545,"column_start":5,"column_end":30}},{"value":"/ # let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290872,"byte_end":290913,"line_start":546,"line_end":546,"column_start":5,"column_end":46}},{"value":"/ # let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli(h, m, s, milli);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":290918,"byte_end":291003,"line_start":547,"line_end":547,"column_start":5,"column_end":90}},{"value":"/ let leap = hmsm(3, 5, 59, 1_300);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":291008,"byte_end":291045,"line_start":548,"line_end":548,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::zero()),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":291050,"byte_end":291107,"line_start":549,"line_end":549,"column_start":5,"column_end":62}},{"value":"/            Some(hmsm(3, 5, 59, 1_300)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":291112,"byte_end":291156,"line_start":550,"line_end":550,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::milliseconds(200)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":291161,"byte_end":291229,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/            Some(hmsm(3, 5, 59, 1_100)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":291234,"byte_end":291278,"line_start":552,"line_end":552,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::milliseconds(500)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":291283,"byte_end":291351,"line_start":553,"line_end":553,"column_start":5,"column_end":73}},{"value":"/            Some(hmsm(3, 5, 59, 800)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":291356,"byte_end":291398,"line_start":554,"line_end":554,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::seconds(60)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":291403,"byte_end":291465,"line_start":555,"line_end":555,"column_start":5,"column_end":67}},{"value":"/            Some(hmsm(3, 5, 0, 300)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":291470,"byte_end":291511,"line_start":556,"line_end":556,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::days(1)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":291516,"byte_end":291574,"line_start":557,"line_end":557,"column_start":5,"column_end":63}},{"value":"/            Some(from_ymd(2016, 7, 7).and_hms_milli(3, 6, 0, 300)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":291579,"byte_end":291650,"line_start":558,"line_end":558,"column_start":5,"column_end":76}},{"value":"/ # }","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":291655,"byte_end":291662,"line_start":559,"line_end":559,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":291667,"byte_end":291675,"line_start":560,"line_end":560,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":294114,"byte_end":294135,"line_start":617,"line_end":617,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<NaiveDateTime>::signed_duration_since","value":"pub fn signed_duration_since(Self, NaiveDateTime) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `NaiveDateTime` from the current date and time.\n This does not overflow or underflow at all.","sig":null,"attributes":[{"value":"/ Subtracts another `NaiveDateTime` from the current date and time.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":292152,"byte_end":292221,"line_start":573,"line_end":573,"column_start":5,"column_end":74}},{"value":"/ This does not overflow or underflow at all.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":292226,"byte_end":292273,"line_start":574,"line_end":574,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":292278,"byte_end":292281,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ As a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":292286,"byte_end":292381,"line_start":576,"line_end":576,"column_start":5,"column_end":100}},{"value":"/ the subtraction assumes that **there is no leap second ever**,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":292386,"byte_end":292452,"line_start":577,"line_end":577,"column_start":5,"column_end":71}},{"value":"/ except when any of the `NaiveDateTime`s themselves represents a leap second","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":292457,"byte_end":292536,"line_start":578,"line_end":578,"column_start":5,"column_end":84}},{"value":"/ in which case the assumption becomes that","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":292541,"byte_end":292586,"line_start":579,"line_end":579,"column_start":5,"column_end":50}},{"value":"/ **there are exactly one (or two) leap second(s) ever**.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":292591,"byte_end":292650,"line_start":580,"line_end":580,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":292655,"byte_end":292658,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":292663,"byte_end":292676,"line_start":582,"line_end":582,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":292681,"byte_end":292684,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":292689,"byte_end":292697,"line_start":584,"line_end":584,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; extern crate time; fn main() {","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":292702,"byte_end":292759,"line_start":585,"line_end":585,"column_start":5,"column_end":62}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":292764,"byte_end":292790,"line_start":586,"line_end":586,"column_start":5,"column_end":31}},{"value":"/ use time::Duration;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":292795,"byte_end":292818,"line_start":587,"line_end":587,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":292823,"byte_end":292826,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":292831,"byte_end":292870,"line_start":589,"line_end":589,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":292875,"byte_end":292878,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ let d = from_ymd(2016, 7, 8);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":292883,"byte_end":292916,"line_start":591,"line_end":591,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(d.and_hms(3, 5, 7).signed_duration_since(d.and_hms(2, 4, 6)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":292921,"byte_end":292997,"line_start":592,"line_end":592,"column_start":5,"column_end":81}},{"value":"/            Duration::seconds(3600 + 60 + 1));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":293002,"byte_end":293051,"line_start":593,"line_end":593,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":293056,"byte_end":293059,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ // July 8 is 190th day in the year 2016","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":293064,"byte_end":293107,"line_start":595,"line_end":595,"column_start":5,"column_end":48}},{"value":"/ let d0 = from_ymd(2016, 1, 1);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":293112,"byte_end":293146,"line_start":596,"line_end":596,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(d.and_hms_milli(0, 7, 6, 500).signed_duration_since(d0.and_hms(0, 0, 0)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":293151,"byte_end":293239,"line_start":597,"line_end":597,"column_start":5,"column_end":93}},{"value":"/            Duration::seconds(189 * 86_400 + 7 * 60 + 6) + Duration::milliseconds(500));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":293244,"byte_end":293335,"line_start":598,"line_end":598,"column_start":5,"column_end":96}},{"value":"/ # }","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":293340,"byte_end":293347,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":293352,"byte_end":293360,"line_start":600,"line_end":600,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":293365,"byte_end":293368,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ Leap seconds are handled, but the subtraction assumes that","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":293373,"byte_end":293435,"line_start":602,"line_end":602,"column_start":5,"column_end":67}},{"value":"/ there were no other leap seconds happened.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":293440,"byte_end":293486,"line_start":603,"line_end":603,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":293491,"byte_end":293494,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":293499,"byte_end":293507,"line_start":605,"line_end":605,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; extern crate time; fn main() {","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":293512,"byte_end":293569,"line_start":606,"line_end":606,"column_start":5,"column_end":62}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":293574,"byte_end":293602,"line_start":607,"line_end":607,"column_start":5,"column_end":33}},{"value":"/ # use time::Duration;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":293607,"byte_end":293632,"line_start":608,"line_end":608,"column_start":5,"column_end":30}},{"value":"/ # let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":293637,"byte_end":293678,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/ let leap = from_ymd(2015, 6, 30).and_hms_milli(23, 59, 59, 1_500);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":293683,"byte_end":293753,"line_start":610,"line_end":610,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(leap.signed_duration_since(from_ymd(2015, 6, 30).and_hms(23, 0, 0)),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":293758,"byte_end":293841,"line_start":611,"line_end":611,"column_start":5,"column_end":88}},{"value":"/            Duration::seconds(3600) + Duration::milliseconds(500));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":293846,"byte_end":293916,"line_start":612,"line_end":612,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(from_ymd(2015, 7, 1).and_hms(1, 0, 0).signed_duration_since(leap),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":293921,"byte_end":294002,"line_start":613,"line_end":613,"column_start":5,"column_end":86}},{"value":"/            Duration::seconds(3600) - Duration::milliseconds(500));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":294007,"byte_end":294077,"line_start":614,"line_end":614,"column_start":5,"column_end":75}},{"value":"/ # }","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":294082,"byte_end":294089,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":294094,"byte_end":294102,"line_start":616,"line_end":616,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":295515,"byte_end":295532,"line_start":649,"line_end":649,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<NaiveDateTime>::format_with_items","value":"pub fn format_with_items<'a, I>(&Self, I) -> DelayedFormat<I> where\nI: Iterator<Item = Item> + Clone","parent":null,"children":[],"decl_id":null,"docs":" Formats the combined date and time with the specified formatting items.\n Otherwise it is same to the ordinary [`format`](#method.format) method.","sig":null,"attributes":[{"value":"/ Formats the combined date and time with the specified formatting items.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":294284,"byte_end":294359,"line_start":621,"line_end":621,"column_start":5,"column_end":80}},{"value":"/ Otherwise it is same to the ordinary [`format`](#method.format) method.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":294364,"byte_end":294439,"line_start":622,"line_end":622,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":294444,"byte_end":294447,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ The `Iterator` of items should be `Clone`able,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":294452,"byte_end":294502,"line_start":624,"line_end":624,"column_start":5,"column_end":55}},{"value":"/ since the resulting `DelayedFormat` value may be formatted multiple times.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":294507,"byte_end":294585,"line_start":625,"line_end":625,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":294590,"byte_end":294593,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":294598,"byte_end":294611,"line_start":627,"line_end":627,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":294616,"byte_end":294619,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":294624,"byte_end":294632,"line_start":629,"line_end":629,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":294637,"byte_end":294663,"line_start":630,"line_end":630,"column_start":5,"column_end":31}},{"value":"/ use chrono::format::strftime::StrftimeItems;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":294668,"byte_end":294716,"line_start":631,"line_end":631,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":294721,"byte_end":294724,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ let fmt = StrftimeItems::new(\"%Y-%m-%d %H:%M:%S\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":294729,"byte_end":294783,"line_start":633,"line_end":633,"column_start":5,"column_end":59}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":294788,"byte_end":294852,"line_start":634,"line_end":634,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(dt.format_with_items(fmt.clone()).to_string(), \"2015-09-05 23:56:04\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":294857,"byte_end":294942,"line_start":635,"line_end":635,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(),    \"2015-09-05 23:56:04\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":294947,"byte_end":295032,"line_start":636,"line_end":636,"column_start":5,"column_end":90}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":295037,"byte_end":295045,"line_start":637,"line_end":637,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":295050,"byte_end":295053,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ The resulting `DelayedFormat` can be formatted directly via the `Display` trait.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":295058,"byte_end":295142,"line_start":639,"line_end":639,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":295147,"byte_end":295150,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":295155,"byte_end":295163,"line_start":641,"line_end":641,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":295168,"byte_end":295196,"line_start":642,"line_end":642,"column_start":5,"column_end":33}},{"value":"/ # use chrono::format::strftime::StrftimeItems;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":295201,"byte_end":295251,"line_start":643,"line_end":643,"column_start":5,"column_end":55}},{"value":"/ # let fmt = StrftimeItems::new(\"%Y-%m-%d %H:%M:%S\").clone();","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":295256,"byte_end":295320,"line_start":644,"line_end":644,"column_start":5,"column_end":69}},{"value":"/ # let dt = NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":295325,"byte_end":295391,"line_start":645,"line_end":645,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(format!(\"{}\", dt.format_with_items(fmt)), \"2015-09-05 23:56:04\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":295396,"byte_end":295476,"line_start":646,"line_end":646,"column_start":5,"column_end":85}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":295481,"byte_end":295489,"line_start":647,"line_end":647,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":295494,"byte_end":295503,"line_start":648,"line_end":648,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":297243,"byte_end":297249,"line_start":687,"line_end":687,"column_start":12,"column_end":18},"name":"format","qualname":"<NaiveDateTime>::format","value":"pub fn format<'a>(&Self, &'a str) -> DelayedFormat<StrftimeItems>","parent":null,"children":[],"decl_id":null,"docs":" Formats the combined date and time with the specified format string.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Formats the combined date and time with the specified format string.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":295711,"byte_end":295783,"line_start":654,"line_end":654,"column_start":5,"column_end":77}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":295788,"byte_end":295858,"line_start":655,"line_end":655,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":295863,"byte_end":295901,"line_start":656,"line_end":656,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":295906,"byte_end":295909,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ This returns a `DelayedFormat`,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":295914,"byte_end":295949,"line_start":658,"line_end":658,"column_start":5,"column_end":40}},{"value":"/ which gets converted to a string only when actual formatting happens.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":295954,"byte_end":296027,"line_start":659,"line_end":659,"column_start":5,"column_end":78}},{"value":"/ You may use the `to_string` method to get a `String`,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296032,"byte_end":296089,"line_start":660,"line_end":660,"column_start":5,"column_end":62}},{"value":"/ or just feed it into `print!` and other formatting macros.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296094,"byte_end":296156,"line_start":661,"line_end":661,"column_start":5,"column_end":67}},{"value":"/ (In this way it avoids the redundant memory allocation.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296161,"byte_end":296221,"line_start":662,"line_end":662,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296226,"byte_end":296229,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ A wrong format string does *not* issue an error immediately.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296234,"byte_end":296298,"line_start":664,"line_end":664,"column_start":5,"column_end":69}},{"value":"/ Rather, converting or formatting the `DelayedFormat` fails.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296303,"byte_end":296366,"line_start":665,"line_end":665,"column_start":5,"column_end":68}},{"value":"/ You are recommended to immediately use `DelayedFormat` for this reason.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296371,"byte_end":296446,"line_start":666,"line_end":666,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296451,"byte_end":296454,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296459,"byte_end":296472,"line_start":668,"line_end":668,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296477,"byte_end":296480,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296485,"byte_end":296493,"line_start":670,"line_end":670,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296498,"byte_end":296524,"line_start":671,"line_end":671,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296529,"byte_end":296532,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296537,"byte_end":296601,"line_start":673,"line_end":673,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(), \"2015-09-05 23:56:04\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296606,"byte_end":296688,"line_start":674,"line_end":674,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(dt.format(\"around %l %p on %b %-d\").to_string(), \"around 11 PM on Sep 5\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296693,"byte_end":296782,"line_start":675,"line_end":675,"column_start":5,"column_end":94}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296787,"byte_end":296795,"line_start":676,"line_end":676,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296800,"byte_end":296803,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ The resulting `DelayedFormat` can be formatted directly via the `Display` trait.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296808,"byte_end":296892,"line_start":678,"line_end":678,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296897,"byte_end":296900,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296905,"byte_end":296913,"line_start":680,"line_end":680,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296918,"byte_end":296946,"line_start":681,"line_end":681,"column_start":5,"column_end":33}},{"value":"/ # let dt = NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":296951,"byte_end":297017,"line_start":682,"line_end":682,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(format!(\"{}\", dt.format(\"%Y-%m-%d %H:%M:%S\")), \"2015-09-05 23:56:04\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":297022,"byte_end":297107,"line_start":683,"line_end":683,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(format!(\"{}\", dt.format(\"around %l %p on %b %-d\")), \"around 11 PM on Sep 5\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":297112,"byte_end":297204,"line_start":684,"line_end":684,"column_start":5,"column_end":97}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":297209,"byte_end":297217,"line_start":685,"line_end":685,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":297222,"byte_end":297231,"line_start":686,"line_end":686,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2106},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":363908,"byte_end":363912,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"Date","qualname":"::date::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":2108},{"krate":0,"index":2109}],"decl_id":null,"docs":" ISO 8601 calendar date with time zone.","sig":null,"attributes":[{"value":"/ ISO 8601 calendar date with time zone.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":362535,"byte_end":362577,"line_start":17,"line_end":17,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":362578,"byte_end":362581,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This type should be considered ambiguous at best,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":362582,"byte_end":362635,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/ due to the inherent lack of precision required for the time zone resolution.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":362636,"byte_end":362716,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ For serialization and deserialization uses, it is best to use `NaiveDate` instead.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":362717,"byte_end":362803,"line_start":21,"line_end":21,"column_start":1,"column_end":87}},{"value":"/ There are some guarantees on the usage of `Date<Tz>`:","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":362804,"byte_end":362861,"line_start":22,"line_end":22,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":362862,"byte_end":362865,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ - If properly constructed via `TimeZone::ymd` and others without an error,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":362866,"byte_end":362944,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/   the corresponding local date should exist for at least a moment.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":362945,"byte_end":363015,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/   (It may still have a gap from the offset changes.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":363016,"byte_end":363072,"line_start":26,"line_end":26,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":363073,"byte_end":363076,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ - The `TimeZone` is free to assign *any* `Offset` to the local date,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":363077,"byte_end":363149,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"/   as long as that offset did occur in given day.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":363150,"byte_end":363202,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"/   For example, if `2015-03-08T01:59-08:00` is followed by `2015-03-08T03:00-07:00`,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":363203,"byte_end":363290,"line_start":30,"line_end":30,"column_start":1,"column_end":88}},{"value":"/   it may produce either `2015-03-08-08:00` or `2015-03-08-07:00`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":363291,"byte_end":363359,"line_start":31,"line_end":31,"column_start":1,"column_end":69}},{"value":"/   but *not* `2015-03-08+00:00` and others.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":363360,"byte_end":363406,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":363407,"byte_end":363410,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ - Once constructed as a full `DateTime`,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":363411,"byte_end":363455,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/   `DateTime::date` and other associated methods should return those for the original `Date`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":363456,"byte_end":363552,"line_start":35,"line_end":35,"column_start":1,"column_end":97}},{"value":"/   For example, if `dt = tz.ymd(y,m,d).hms(h,n,s)` were valid, `dt.date() == tz.ymd(y,m,d)`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":363553,"byte_end":363648,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":363649,"byte_end":363652,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ - The date is timezone-agnostic up to one day (i.e. practically always),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":363653,"byte_end":363729,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/   so the local date and UTC date should be equal for most cases","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":363730,"byte_end":363797,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/   even though the raw calculation between `NaiveDate` and `Duration` may not.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":363798,"byte_end":363879,"line_start":40,"line_end":40,"column_start":1,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":364020,"byte_end":364028,"line_start":48,"line_end":48,"column_start":11,"column_end":19},"name":"MIN_DATE","qualname":"::date::MIN_DATE","value":"Date<Utc>","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `Date`.\n","sig":null,"attributes":[{"value":"/ The minimum possible `Date`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":363977,"byte_end":364009,"line_start":47,"line_end":47,"column_start":1,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":364130,"byte_end":364138,"line_start":50,"line_end":50,"column_start":11,"column_end":19},"name":"MAX_DATE","qualname":"::date::MAX_DATE","value":"Date<Utc>","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `Date`.\n","sig":null,"attributes":[{"value":"/ The maximum possible `Date`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":364087,"byte_end":364119,"line_start":49,"line_end":49,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":364487,"byte_end":364495,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"from_utc","qualname":"<Date<Tz>>::from_utc","value":"pub fn from_utc(NaiveDate, Tz::Offset) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` with given *UTC* date and offset.\n The local date should be constructed via the `TimeZone` trait.\n","sig":null,"attributes":[{"value":"/ Makes a new `Date` with given *UTC* date and offset.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":364232,"byte_end":364288,"line_start":53,"line_end":53,"column_start":5,"column_end":61}},{"value":"/ The local date should be constructed via the `TimeZone` trait.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":364293,"byte_end":364359,"line_start":54,"line_end":54,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":364466,"byte_end":364475,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":364796,"byte_end":364804,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"and_time","qualname":"<Date<Tz>>::and_time","value":"pub fn and_time(&Self, NaiveTime) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date and given `NaiveTime`.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date and given `NaiveTime`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":364602,"byte_end":364673,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":364678,"byte_end":364726,"line_start":63,"line_end":63,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":364731,"byte_end":364734,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid datetime.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":364739,"byte_end":364770,"line_start":65,"line_end":65,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":364775,"byte_end":364784,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":365201,"byte_end":365208,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"and_hms","qualname":"<Date<Tz>>::and_hms","value":"pub fn and_hms(&Self, u32, u32, u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute and second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute and second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":364986,"byte_end":365060,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":365065,"byte_end":365113,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":365118,"byte_end":365121,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute and/or second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":365126,"byte_end":365175,"line_start":75,"line_end":75,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":365180,"byte_end":365189,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":365563,"byte_end":365574,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"and_hms_opt","qualname":"<Date<Tz>>::and_hms_opt","value":"pub fn and_hms_opt(&Self, u32, u32, u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute and second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute and second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":365340,"byte_end":365414,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":365419,"byte_end":365467,"line_start":82,"line_end":82,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":365472,"byte_end":365475,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute and/or second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":365480,"byte_end":365537,"line_start":84,"line_end":84,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":365542,"byte_end":365551,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":366061,"byte_end":366074,"line_start":96,"line_end":96,"column_start":12,"column_end":25},"name":"and_hms_milli","qualname":"<Date<Tz>>::and_hms_milli","value":"pub fn and_hms_milli(&Self, u32, u32, u32, u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\n The millisecond part can exceed 1,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":365735,"byte_end":365822,"line_start":90,"line_end":90,"column_start":5,"column_end":92}},{"value":"/ The millisecond part can exceed 1,000 in order to represent the leap second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":365827,"byte_end":365907,"line_start":91,"line_end":91,"column_start":5,"column_end":85}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":365912,"byte_end":365960,"line_start":92,"line_end":92,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":365965,"byte_end":365968,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":365973,"byte_end":366035,"line_start":94,"line_end":94,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":366040,"byte_end":366049,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":366565,"byte_end":366582,"line_start":106,"line_end":106,"column_start":12,"column_end":29},"name":"and_hms_milli_opt","qualname":"<Date<Tz>>::and_hms_milli_opt","value":"pub fn and_hms_milli_opt(&Self, u32, u32, u32, u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\n The millisecond part can exceed 1,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":366231,"byte_end":366318,"line_start":100,"line_end":100,"column_start":5,"column_end":92}},{"value":"/ The millisecond part can exceed 1,000 in order to represent the leap second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":366323,"byte_end":366403,"line_start":101,"line_end":101,"column_start":5,"column_end":85}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":366408,"byte_end":366456,"line_start":102,"line_end":102,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":366461,"byte_end":366464,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":366469,"byte_end":366539,"line_start":104,"line_end":104,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":366544,"byte_end":366553,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":367127,"byte_end":367140,"line_start":117,"line_end":117,"column_start":12,"column_end":25},"name":"and_hms_micro","qualname":"<Date<Tz>>::and_hms_micro","value":"pub fn and_hms_micro(&Self, u32, u32, u32, u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\n The microsecond part can exceed 1,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":366797,"byte_end":366884,"line_start":111,"line_end":111,"column_start":5,"column_end":92}},{"value":"/ The microsecond part can exceed 1,000,000 in order to represent the leap second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":366889,"byte_end":366973,"line_start":112,"line_end":112,"column_start":5,"column_end":89}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":366978,"byte_end":367026,"line_start":113,"line_end":113,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":367031,"byte_end":367034,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":367039,"byte_end":367101,"line_start":115,"line_end":115,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":367106,"byte_end":367115,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":367635,"byte_end":367652,"line_start":127,"line_end":127,"column_start":12,"column_end":29},"name":"and_hms_micro_opt","qualname":"<Date<Tz>>::and_hms_micro_opt","value":"pub fn and_hms_micro_opt(&Self, u32, u32, u32, u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\n The microsecond part can exceed 1,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":367297,"byte_end":367384,"line_start":121,"line_end":121,"column_start":5,"column_end":92}},{"value":"/ The microsecond part can exceed 1,000,000 in order to represent the leap second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":367389,"byte_end":367473,"line_start":122,"line_end":122,"column_start":5,"column_end":89}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":367478,"byte_end":367526,"line_start":123,"line_end":123,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":367531,"byte_end":367534,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":367539,"byte_end":367609,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":367614,"byte_end":367623,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":368198,"byte_end":368210,"line_start":138,"line_end":138,"column_start":12,"column_end":24},"name":"and_hms_nano","qualname":"<Date<Tz>>::and_hms_nano","value":"pub fn and_hms_nano(&Self, u32, u32, u32, u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\n The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":367867,"byte_end":367953,"line_start":132,"line_end":132,"column_start":5,"column_end":91}},{"value":"/ The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":367958,"byte_end":368045,"line_start":133,"line_end":133,"column_start":5,"column_end":92}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":368050,"byte_end":368098,"line_start":134,"line_end":134,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":368103,"byte_end":368106,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":368111,"byte_end":368172,"line_start":136,"line_end":136,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":368177,"byte_end":368186,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":368703,"byte_end":368719,"line_start":148,"line_end":148,"column_start":12,"column_end":28},"name":"and_hms_nano_opt","qualname":"<Date<Tz>>::and_hms_nano_opt","value":"pub fn and_hms_nano_opt(&Self, u32, u32, u32, u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\n The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":368364,"byte_end":368450,"line_start":142,"line_end":142,"column_start":5,"column_end":91}},{"value":"/ The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":368455,"byte_end":368542,"line_start":143,"line_end":143,"column_start":5,"column_end":92}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":368547,"byte_end":368595,"line_start":144,"line_end":144,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":368600,"byte_end":368603,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":368608,"byte_end":368677,"line_start":146,"line_end":146,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":368682,"byte_end":368691,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":369064,"byte_end":369068,"line_start":157,"line_end":157,"column_start":12,"column_end":16},"name":"succ","qualname":"<Date<Tz>>::succ","value":"pub fn succ(&Self) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the next date.","sig":null,"attributes":[{"value":"/ Makes a new `Date` for the next date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":368930,"byte_end":368971,"line_start":153,"line_end":153,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":368976,"byte_end":368979,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Panics when `self` is the last representable date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":368984,"byte_end":369038,"line_start":155,"line_end":155,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":369043,"byte_end":369052,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":369290,"byte_end":369298,"line_start":165,"line_end":165,"column_start":12,"column_end":20},"name":"succ_opt","qualname":"<Date<Tz>>::succ_opt","value":"pub fn succ_opt(&Self) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the next date.","sig":null,"attributes":[{"value":"/ Makes a new `Date` for the next date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":369148,"byte_end":369189,"line_start":161,"line_end":161,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":369194,"byte_end":369197,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when `self` is the last representable date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":369202,"byte_end":369264,"line_start":163,"line_end":163,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":369269,"byte_end":369278,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":369558,"byte_end":369562,"line_start":173,"line_end":173,"column_start":12,"column_end":16},"name":"pred","qualname":"<Date<Tz>>::pred","value":"pub fn pred(&Self) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the prior date.","sig":null,"attributes":[{"value":"/ Makes a new `Date` for the prior date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":369422,"byte_end":369464,"line_start":169,"line_end":169,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":369469,"byte_end":369472,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Panics when `self` is the first representable date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":369477,"byte_end":369532,"line_start":171,"line_end":171,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":369537,"byte_end":369546,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":369786,"byte_end":369794,"line_start":181,"line_end":181,"column_start":12,"column_end":20},"name":"pred_opt","qualname":"<Date<Tz>>::pred_opt","value":"pub fn pred_opt(&Self) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the prior date.","sig":null,"attributes":[{"value":"/ Makes a new `Date` for the prior date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":369642,"byte_end":369684,"line_start":177,"line_end":177,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":369689,"byte_end":369692,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when `self` is the first representable date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":369697,"byte_end":369760,"line_start":179,"line_end":179,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":369765,"byte_end":369774,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":369988,"byte_end":369994,"line_start":187,"line_end":187,"column_start":12,"column_end":18},"name":"offset","qualname":"<Date<Tz>>::offset","value":"pub fn offset(&Self) -> &Tz::Offset","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated offset from UTC.\n","sig":null,"attributes":[{"value":"/ Retrieves an associated offset from UTC.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":369918,"byte_end":369962,"line_start":185,"line_end":185,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":369967,"byte_end":369976,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":370115,"byte_end":370123,"line_start":193,"line_end":193,"column_start":12,"column_end":20},"name":"timezone","qualname":"<Date<Tz>>::timezone","value":"pub fn timezone(&Self) -> Tz","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated time zone.\n","sig":null,"attributes":[{"value":"/ Retrieves an associated time zone.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":370051,"byte_end":370089,"line_start":191,"line_end":191,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":370094,"byte_end":370103,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":370349,"byte_end":370362,"line_start":200,"line_end":200,"column_start":12,"column_end":25},"name":"with_timezone","qualname":"<Date<Tz>>::with_timezone","value":"pub fn with_timezone<Tz2: TimeZone>(&Self, &Tz2) -> Date<Tz2>","parent":null,"children":[],"decl_id":null,"docs":" Changes the associated time zone.\n This does not change the actual `Date` (but will change the string representation).\n","sig":null,"attributes":[{"value":"/ Changes the associated time zone.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":370194,"byte_end":370231,"line_start":197,"line_end":197,"column_start":5,"column_end":42}},{"value":"/ This does not change the actual `Date` (but will change the string representation).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":370236,"byte_end":370323,"line_start":198,"line_end":198,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":370328,"byte_end":370337,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":370594,"byte_end":370612,"line_start":208,"line_end":208,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<Date<Tz>>::checked_add_signed","value":"pub fn checked_add_signed(Self, OldDuration) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current date.","sig":null,"attributes":[{"value":"/ Adds given `Duration` to the current date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":370458,"byte_end":370504,"line_start":204,"line_end":204,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":370509,"byte_end":370512,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":370517,"byte_end":370568,"line_start":206,"line_end":206,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":370573,"byte_end":370582,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":370932,"byte_end":370950,"line_start":217,"line_end":217,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<Date<Tz>>::checked_sub_signed","value":"pub fn checked_sub_signed(Self, OldDuration) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current date.","sig":null,"attributes":[{"value":"/ Subtracts given `Duration` from the current date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":370789,"byte_end":370842,"line_start":213,"line_end":213,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":370847,"byte_end":370850,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":370855,"byte_end":370906,"line_start":215,"line_end":215,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":370911,"byte_end":370920,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":371451,"byte_end":371472,"line_start":229,"line_end":229,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<Date<Tz>>::signed_duration_since","value":"pub fn signed_duration_since<Tz2: TimeZone>(Self, Date<Tz2>) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `Date` from the current date.\n Returns a `Duration` of integral numbers.","sig":null,"attributes":[{"value":"/ Subtracts another `Date` from the current date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":371127,"byte_end":371178,"line_start":222,"line_end":222,"column_start":5,"column_end":56}},{"value":"/ Returns a `Duration` of integral numbers.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":371183,"byte_end":371228,"line_start":223,"line_end":223,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":371233,"byte_end":371236,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ This does not overflow or underflow at all,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":371241,"byte_end":371288,"line_start":225,"line_end":225,"column_start":5,"column_end":52}},{"value":"/ as all possible output fits in the range of `Duration`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":371293,"byte_end":371352,"line_start":226,"line_end":226,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":371430,"byte_end":371439,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":371655,"byte_end":371664,"line_start":235,"line_end":235,"column_start":12,"column_end":21},"name":"naive_utc","qualname":"<Date<Tz>>::naive_utc","value":"pub fn naive_utc(&Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive UTC date.\n","sig":null,"attributes":[{"value":"/ Returns a view to the naive UTC date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":371588,"byte_end":371629,"line_start":233,"line_end":233,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":371634,"byte_end":371643,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":371970,"byte_end":371981,"line_start":245,"line_end":245,"column_start":12,"column_end":23},"name":"naive_local","qualname":"<Date<Tz>>::naive_local","value":"pub fn naive_local(&Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive local date.","sig":null,"attributes":[{"value":"/ Returns a view to the naive local date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":371716,"byte_end":371759,"line_start":239,"line_end":239,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":371764,"byte_end":371767,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This is technically same to [`naive_utc`](#method.naive_utc)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":371772,"byte_end":371836,"line_start":241,"line_end":241,"column_start":5,"column_end":69}},{"value":"/ because the offset is restricted to never exceed one day,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":371841,"byte_end":371902,"line_start":242,"line_end":242,"column_start":5,"column_end":66}},{"value":"/ but provided for the consistency.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":371907,"byte_end":371944,"line_start":243,"line_end":243,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":371949,"byte_end":371958,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":372468,"byte_end":372485,"line_start":259,"line_end":259,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<Date<Tz>>::format_with_items","value":"pub fn format_with_items<'a, I>(&Self, I) -> DelayedFormat<I> where\nI: Iterator<Item = Item> + Clone","parent":null,"children":[],"decl_id":null,"docs":" Formats the date with the specified formatting items.\n","sig":null,"attributes":[{"value":"/ Formats the date with the specified formatting items.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":372385,"byte_end":372442,"line_start":257,"line_end":257,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":372447,"byte_end":372456,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":372885,"byte_end":372891,"line_start":268,"line_end":268,"column_start":12,"column_end":18},"name":"format","qualname":"<Date<Tz>>::format","value":"pub fn format<'a>(&Self, &'a str) -> DelayedFormat<StrftimeItems>","parent":null,"children":[],"decl_id":null,"docs":" Formats the date with the specified format string.\n See the [`format::strftime` module](./format/strftime/index.html)\n on the supported escape sequences.\n","sig":null,"attributes":[{"value":"/ Formats the date with the specified format string.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":372688,"byte_end":372742,"line_start":264,"line_end":264,"column_start":5,"column_end":59}},{"value":"/ See the [`format::strftime` module](./format/strftime/index.html)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":372747,"byte_end":372816,"line_start":265,"line_end":265,"column_start":5,"column_end":74}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":372821,"byte_end":372859,"line_start":266,"line_end":266,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":372864,"byte_end":372873,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":377449,"byte_end":377453,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"Secs","qualname":"::datetime::SecondsFormat::Secs","value":"SecondsFormat::Secs","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Format whole seconds only, with no decimal point nor subseconds.\n","sig":null,"attributes":[{"value":"/ Format whole seconds only, with no decimal point nor subseconds.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":377376,"byte_end":377444,"line_start":27,"line_end":27,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2116},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":377592,"byte_end":377598,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Millis","qualname":"::datetime::SecondsFormat::Millis","value":"SecondsFormat::Millis","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Use fixed 3 subsecond digits. This corresponds to\n [Fixed::Nanosecond3](format/enum.Fixed.html#variant.Nanosecond3).\n","sig":null,"attributes":[{"value":"/ Use fixed 3 subsecond digits. This corresponds to","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":377460,"byte_end":377513,"line_start":30,"line_end":30,"column_start":5,"column_end":58}},{"value":"/ [Fixed::Nanosecond3](format/enum.Fixed.html#variant.Nanosecond3).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":377518,"byte_end":377587,"line_start":31,"line_end":31,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2118},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":377737,"byte_end":377743,"line_start":36,"line_end":36,"column_start":5,"column_end":11},"name":"Micros","qualname":"::datetime::SecondsFormat::Micros","value":"SecondsFormat::Micros","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Use fixed 6 subsecond digits. This corresponds to\n [Fixed::Nanosecond6](format/enum.Fixed.html#variant.Nanosecond6).\n","sig":null,"attributes":[{"value":"/ Use fixed 6 subsecond digits. This corresponds to","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":377605,"byte_end":377658,"line_start":34,"line_end":34,"column_start":5,"column_end":58}},{"value":"/ [Fixed::Nanosecond6](format/enum.Fixed.html#variant.Nanosecond6).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":377663,"byte_end":377732,"line_start":35,"line_end":35,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2120},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":377882,"byte_end":377887,"line_start":40,"line_end":40,"column_start":5,"column_end":10},"name":"Nanos","qualname":"::datetime::SecondsFormat::Nanos","value":"SecondsFormat::Nanos","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Use fixed 9 subsecond digits. This corresponds to\n [Fixed::Nanosecond9](format/enum.Fixed.html#variant.Nanosecond9).\n","sig":null,"attributes":[{"value":"/ Use fixed 9 subsecond digits. This corresponds to","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":377750,"byte_end":377803,"line_start":38,"line_end":38,"column_start":5,"column_end":58}},{"value":"/ [Fixed::Nanosecond9](format/enum.Fixed.html#variant.Nanosecond9).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":377808,"byte_end":377877,"line_start":39,"line_end":39,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2122},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":378123,"byte_end":378129,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"AutoSi","qualname":"::datetime::SecondsFormat::AutoSi","value":"SecondsFormat::AutoSi","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Automatically select one of `Secs`, `Millis`, `Micros`, or `Nanos` to\n display all available non-zero sub-second digits.  This corresponds to\n [Fixed::Nanosecond](format/enum.Fixed.html#variant.Nanosecond).\n","sig":null,"attributes":[{"value":"/ Automatically select one of `Secs`, `Millis`, `Micros`, or `Nanos` to","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":377894,"byte_end":377967,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ display all available non-zero sub-second digits.  This corresponds to","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":377972,"byte_end":378046,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/ [Fixed::Nanosecond](format/enum.Fixed.html#variant.Nanosecond).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":378051,"byte_end":378118,"line_start":44,"line_end":44,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2124},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":378189,"byte_end":378204,"line_start":49,"line_end":49,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::datetime::SecondsFormat::__NonExhaustive","value":"SecondsFormat::__NonExhaustive","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2113},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":377356,"byte_end":377369,"line_start":26,"line_end":26,"column_start":10,"column_end":23},"name":"SecondsFormat","qualname":"::datetime::SecondsFormat","value":"pub enum SecondsFormat {\n    Secs,\n    Millis,\n    Micros,\n    Nanos,\n    AutoSi,\n    __NonExhaustive,\n}","parent":null,"children":[{"krate":0,"index":2114},{"krate":0,"index":2116},{"krate":0,"index":2118},{"krate":0,"index":2120},{"krate":0,"index":2122},{"krate":0,"index":2124}],"decl_id":null,"docs":" Specific formatting options for seconds. This may be extended in the\n future, so exhaustive matching in external code is not recommended.","sig":null,"attributes":[{"value":"/ Specific formatting options for seconds. This may be extended in the","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":377093,"byte_end":377165,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ future, so exhaustive matching in external code is not recommended.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":377166,"byte_end":377237,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":377238,"byte_end":377241,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ See the `TimeZone::to_rfc3339_opts` function for usage.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":377242,"byte_end":377301,"line_start":24,"line_end":24,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2137},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":378502,"byte_end":378510,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"DateTime","qualname":"::datetime::DateTime","value":"DateTime {  }","parent":null,"children":[{"krate":0,"index":2139},{"krate":0,"index":2140}],"decl_id":null,"docs":" ISO 8601 combined date and time with time zone.","sig":null,"attributes":[{"value":"/ ISO 8601 combined date and time with time zone.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":378209,"byte_end":378260,"line_start":52,"line_end":52,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":378261,"byte_end":378264,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ There are some constructors implemented here (the `from_*` methods), but","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":378265,"byte_end":378341,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ the general-purpose constructors are all via the methods on the","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":378342,"byte_end":378409,"line_start":55,"line_end":55,"column_start":1,"column_end":68}},{"value":"/ [`TimeZone`](./offset/trait.TimeZone.html) implementations.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":378410,"byte_end":378473,"line_start":56,"line_end":56,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":379151,"byte_end":379159,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"from_utc","qualname":"<DateTime<Tz>>::from_utc","value":"pub fn from_utc(NaiveDateTime, Tz::Offset) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` with given *UTC* datetime and offset.\n The local datetime should be constructed via the `TimeZone` trait.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` with given *UTC* datetime and offset.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":378621,"byte_end":378685,"line_start":64,"line_end":64,"column_start":5,"column_end":69}},{"value":"/ The local datetime should be constructed via the `TimeZone` trait.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":378690,"byte_end":378760,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":378765,"byte_end":378768,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":378773,"byte_end":378786,"line_start":67,"line_end":67,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":378791,"byte_end":378794,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":378799,"byte_end":378807,"line_start":69,"line_end":69,"column_start":5,"column_end":13}},{"value":"/ use chrono::{DateTime, TimeZone, NaiveDateTime, Utc};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":378812,"byte_end":378869,"line_start":70,"line_end":70,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":378874,"byte_end":378877,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let dt = DateTime::<Utc>::from_utc(NaiveDateTime::from_timestamp(61, 0), Utc);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":378882,"byte_end":378964,"line_start":72,"line_end":72,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(Utc.timestamp(61, 0), dt);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":378969,"byte_end":379010,"line_start":73,"line_end":73,"column_start":5,"column_end":46}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":379015,"byte_end":379023,"line_start":74,"line_end":74,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":379130,"byte_end":379139,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":379347,"byte_end":379351,"line_start":84,"line_end":84,"column_start":12,"column_end":16},"name":"date","qualname":"<DateTime<Tz>>::date","value":"pub fn date(&Self) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a date component.\n","sig":null,"attributes":[{"value":"/ Retrieves a date component.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":379290,"byte_end":379321,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":379326,"byte_end":379335,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":379576,"byte_end":379580,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"time","qualname":"<DateTime<Tz>>::time","value":"pub fn time(&Self) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a time component.\n Unlike `date`, this is not associated to the time zone.\n","sig":null,"attributes":[{"value":"/ Retrieves a time component.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":379455,"byte_end":379486,"line_start":88,"line_end":88,"column_start":5,"column_end":36}},{"value":"/ Unlike `date`, this is not associated to the time zone.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":379491,"byte_end":379550,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":379555,"byte_end":379564,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":379797,"byte_end":379806,"line_start":98,"line_end":98,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<DateTime<Tz>>::timestamp","value":"pub fn timestamp(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC\n (aka \"UNIX timestamp\").\n","sig":null,"attributes":[{"value":"/ Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":379663,"byte_end":379739,"line_start":95,"line_end":95,"column_start":5,"column_end":81}},{"value":"/ (aka \"UNIX timestamp\").","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":379744,"byte_end":379771,"line_start":96,"line_end":96,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":379776,"byte_end":379785,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380627,"byte_end":380643,"line_start":122,"line_end":122,"column_start":12,"column_end":28},"name":"timestamp_millis","qualname":"<DateTime<Tz>>::timestamp_millis","value":"pub fn timestamp_millis(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap-milliseconds since January 1, 1970 UTC","sig":null,"attributes":[{"value":"/ Returns the number of non-leap-milliseconds since January 1, 1970 UTC","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":379868,"byte_end":379941,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":379946,"byte_end":379949,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Note that this does reduce the number of years that can be represented","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":379954,"byte_end":380028,"line_start":104,"line_end":104,"column_start":5,"column_end":79}},{"value":"/ from ~584 Billion to ~584 Million. (If this is a problem, please file","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380033,"byte_end":380106,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ an issue to let me know what domain needs millisecond precision over","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380111,"byte_end":380183,"line_start":106,"line_end":106,"column_start":5,"column_end":77}},{"value":"/ billions of years, I'm curious.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380188,"byte_end":380224,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380229,"byte_end":380232,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380237,"byte_end":380250,"line_start":109,"line_end":109,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380255,"byte_end":380258,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380263,"byte_end":380271,"line_start":111,"line_end":111,"column_start":5,"column_end":13}},{"value":"/ use chrono::Utc;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380276,"byte_end":380296,"line_start":112,"line_end":112,"column_start":5,"column_end":25}},{"value":"/ use chrono::TimeZone;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380301,"byte_end":380326,"line_start":113,"line_end":113,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380331,"byte_end":380334,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(1970, 1, 1).and_hms_milli(0, 0, 1, 444);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380339,"byte_end":380400,"line_start":115,"line_end":115,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.timestamp_millis(), 1_444);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380405,"byte_end":380450,"line_start":116,"line_end":116,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380455,"byte_end":380458,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(2001, 9, 9).and_hms_milli(1, 46, 40, 555);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380463,"byte_end":380526,"line_start":118,"line_end":118,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(dt.timestamp_millis(), 1_000_000_000_555);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380531,"byte_end":380588,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380593,"byte_end":380601,"line_start":120,"line_end":120,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380606,"byte_end":380615,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381464,"byte_end":381479,"line_start":146,"line_end":146,"column_start":12,"column_end":27},"name":"timestamp_nanos","qualname":"<DateTime<Tz>>::timestamp_nanos","value":"pub fn timestamp_nanos(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap-nanoseconds since January 1, 1970 UTC","sig":null,"attributes":[{"value":"/ Returns the number of non-leap-nanoseconds since January 1, 1970 UTC","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380712,"byte_end":380784,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380789,"byte_end":380792,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Note that this does reduce the number of years that can be represented","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380797,"byte_end":380871,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ from ~584 Billion to ~584. (If this is a problem, please file","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380876,"byte_end":380941,"line_start":129,"line_end":129,"column_start":5,"column_end":70}},{"value":"/ an issue to let me know what domain needs nanosecond precision over","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":380946,"byte_end":381017,"line_start":130,"line_end":130,"column_start":5,"column_end":76}},{"value":"/ millenia, I'm curious.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381022,"byte_end":381049,"line_start":131,"line_end":131,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381054,"byte_end":381057,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381062,"byte_end":381075,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381080,"byte_end":381083,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381088,"byte_end":381096,"line_start":135,"line_end":135,"column_start":5,"column_end":13}},{"value":"/ use chrono::Utc;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381101,"byte_end":381121,"line_start":136,"line_end":136,"column_start":5,"column_end":25}},{"value":"/ use chrono::TimeZone;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381126,"byte_end":381151,"line_start":137,"line_end":137,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381156,"byte_end":381159,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(1970, 1, 1).and_hms_nano(0, 0, 1, 444);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381164,"byte_end":381224,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(dt.timestamp_nanos(), 1_000_000_444);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381229,"byte_end":381281,"line_start":140,"line_end":140,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381286,"byte_end":381289,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(2001, 9, 9).and_hms_nano(1, 46, 40, 555);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381294,"byte_end":381356,"line_start":142,"line_end":142,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(dt.timestamp_nanos(), 1_000_000_000_000_000_555);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381361,"byte_end":381425,"line_start":143,"line_end":143,"column_start":5,"column_end":69}},{"value":"/ ~~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381430,"byte_end":381438,"line_start":144,"line_end":144,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381443,"byte_end":381452,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381809,"byte_end":381832,"line_start":156,"line_end":156,"column_start":12,"column_end":35},"name":"timestamp_subsec_millis","qualname":"<DateTime<Tz>>::timestamp_subsec_millis","value":"pub fn timestamp_subsec_millis(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of milliseconds since the last second boundary","sig":null,"attributes":[{"value":"/ Returns the number of milliseconds since the last second boundary","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381547,"byte_end":381616,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381621,"byte_end":381624,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ warning: in event of a leap second, this may exceed 999","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381629,"byte_end":381688,"line_start":152,"line_end":152,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381693,"byte_end":381696,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ note: this is not the number of milliseconds since January 1, 1970 0:00:00 UTC","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381701,"byte_end":381783,"line_start":154,"line_end":154,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381788,"byte_end":381797,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":382174,"byte_end":382197,"line_start":166,"line_end":166,"column_start":12,"column_end":35},"name":"timestamp_subsec_micros","qualname":"<DateTime<Tz>>::timestamp_subsec_micros","value":"pub fn timestamp_subsec_micros(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of microseconds since the last second boundary","sig":null,"attributes":[{"value":"/ Returns the number of microseconds since the last second boundary","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381908,"byte_end":381977,"line_start":160,"line_end":160,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381982,"byte_end":381985,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ warning: in event of a leap second, this may exceed 999_999","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":381990,"byte_end":382053,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":382058,"byte_end":382061,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ note: this is not the number of microseconds since January 1, 1970 0:00:00 UTC","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":382066,"byte_end":382148,"line_start":164,"line_end":164,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":382153,"byte_end":382162,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":382541,"byte_end":382563,"line_start":176,"line_end":176,"column_start":12,"column_end":34},"name":"timestamp_subsec_nanos","qualname":"<DateTime<Tz>>::timestamp_subsec_nanos","value":"pub fn timestamp_subsec_nanos(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of nanoseconds since the last second boundary","sig":null,"attributes":[{"value":"/ Returns the number of nanoseconds since the last second boundary","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":382273,"byte_end":382341,"line_start":170,"line_end":170,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":382346,"byte_end":382349,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ warning: in event of a leap second, this may exceed 999_999_999","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":382354,"byte_end":382421,"line_start":172,"line_end":172,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":382426,"byte_end":382429,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ note: this is not the number of nanoseconds since January 1, 1970 0:00:00 UTC","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":382434,"byte_end":382515,"line_start":174,"line_end":174,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":382520,"byte_end":382529,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":382708,"byte_end":382714,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"offset","qualname":"<DateTime<Tz>>::offset","value":"pub fn offset(&Self) -> &Tz::Offset","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated offset from UTC.\n","sig":null,"attributes":[{"value":"/ Retrieves an associated offset from UTC.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":382638,"byte_end":382682,"line_start":180,"line_end":180,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":382687,"byte_end":382696,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1309},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":382835,"byte_end":382843,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"timezone","qualname":"<DateTime<Tz>>::timezone","value":"pub fn timezone(&Self) -> Tz","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated time zone.\n","sig":null,"attributes":[{"value":"/ Retrieves an associated time zone.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":382771,"byte_end":382809,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":382814,"byte_end":382823,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1310},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":383073,"byte_end":383086,"line_start":195,"line_end":195,"column_start":12,"column_end":25},"name":"with_timezone","qualname":"<DateTime<Tz>>::with_timezone","value":"pub fn with_timezone<Tz2: TimeZone>(&Self, &Tz2) -> DateTime<Tz2>","parent":null,"children":[],"decl_id":null,"docs":" Changes the associated time zone.\n This does not change the actual `DateTime` (but will change the string representation).\n","sig":null,"attributes":[{"value":"/ Changes the associated time zone.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":382914,"byte_end":382951,"line_start":192,"line_end":192,"column_start":5,"column_end":42}},{"value":"/ This does not change the actual `DateTime` (but will change the string representation).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":382956,"byte_end":383047,"line_start":193,"line_end":193,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":383052,"byte_end":383061,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":383339,"byte_end":383357,"line_start":203,"line_end":203,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<DateTime<Tz>>::checked_add_signed","value":"pub fn checked_add_signed(Self, OldDuration) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current date and time.","sig":null,"attributes":[{"value":"/ Adds given `Duration` to the current date and time.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":383194,"byte_end":383249,"line_start":199,"line_end":199,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":383254,"byte_end":383257,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":383262,"byte_end":383313,"line_start":201,"line_end":201,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":383318,"byte_end":383327,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1313},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":383723,"byte_end":383741,"line_start":213,"line_end":213,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<DateTime<Tz>>::checked_sub_signed","value":"pub fn checked_sub_signed(Self, OldDuration) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current date and time.","sig":null,"attributes":[{"value":"/ Subtracts given `Duration` from the current date and time.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":383571,"byte_end":383633,"line_start":209,"line_end":209,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":383638,"byte_end":383641,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":383646,"byte_end":383697,"line_start":211,"line_end":211,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":383702,"byte_end":383711,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":384170,"byte_end":384191,"line_start":223,"line_end":223,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<DateTime<Tz>>::signed_duration_since","value":"pub fn signed_duration_since<Tz2: TimeZone>(Self, DateTime<Tz2>)\n-> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `DateTime` from the current date and time.\n This does not overflow or underflow at all.\n","sig":null,"attributes":[{"value":"/ Subtracts another `DateTime` from the current date and time.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":383955,"byte_end":384019,"line_start":219,"line_end":219,"column_start":5,"column_end":69}},{"value":"/ This does not overflow or underflow at all.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":384024,"byte_end":384071,"line_start":220,"line_end":220,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":384149,"byte_end":384158,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":384390,"byte_end":384399,"line_start":229,"line_end":229,"column_start":12,"column_end":21},"name":"naive_utc","qualname":"<DateTime<Tz>>::naive_utc","value":"pub fn naive_utc(&Self) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive UTC datetime.\n","sig":null,"attributes":[{"value":"/ Returns a view to the naive UTC datetime.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":384319,"byte_end":384364,"line_start":227,"line_end":227,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":384369,"byte_end":384378,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":384532,"byte_end":384543,"line_start":235,"line_end":235,"column_start":12,"column_end":23},"name":"naive_local","qualname":"<DateTime<Tz>>::naive_local","value":"pub fn naive_local(&Self) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive local datetime.\n","sig":null,"attributes":[{"value":"/ Returns a view to the naive local datetime.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":384459,"byte_end":384506,"line_start":233,"line_end":233,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":384511,"byte_end":384520,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1335},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":387935,"byte_end":387953,"line_start":318,"line_end":318,"column_start":12,"column_end":30},"name":"parse_from_rfc2822","qualname":"<DateTime<FixedOffset>>::parse_from_rfc2822","value":"pub fn parse_from_rfc2822(&str) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`,\n then returns a new `DateTime` with a parsed `FixedOffset`.\n","sig":null,"attributes":[{"value":"/ Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":387771,"byte_end":387856,"line_start":316,"line_end":316,"column_start":5,"column_end":90}},{"value":"/ then returns a new `DateTime` with a parsed `FixedOffset`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":387861,"byte_end":387923,"line_start":317,"line_end":317,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":388592,"byte_end":388610,"line_start":330,"line_end":330,"column_start":12,"column_end":30},"name":"parse_from_rfc3339","qualname":"<DateTime<FixedOffset>>::parse_from_rfc3339","value":"pub fn parse_from_rfc3339(&str) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`,\n then returns a new `DateTime` with a parsed `FixedOffset`.","sig":null,"attributes":[{"value":"/ Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":388223,"byte_end":388316,"line_start":325,"line_end":325,"column_start":5,"column_end":98}},{"value":"/ then returns a new `DateTime` with a parsed `FixedOffset`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":388321,"byte_end":388383,"line_start":326,"line_end":326,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":388388,"byte_end":388391,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ Why isn't this named `parse_from_iso8601`? That's because ISO 8601 allows some freedom","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":388396,"byte_end":388486,"line_start":328,"line_end":328,"column_start":5,"column_end":95}},{"value":"/ over the syntax and RFC 3339 exercises that freedom to rigidly define a fixed format.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":388491,"byte_end":388580,"line_start":329,"line_end":329,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":389832,"byte_end":389846,"line_start":357,"line_end":357,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<DateTime<FixedOffset>>::parse_from_str","value":"pub fn parse_from_str(&str, &str) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and\n returns a new `DateTime` with a parsed `FixedOffset`.\n See the [`format::strftime` module](./format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":388880,"byte_end":388936,"line_start":337,"line_end":337,"column_start":5,"column_end":61}},{"value":"/ returns a new `DateTime` with a parsed `FixedOffset`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":388941,"byte_end":388998,"line_start":338,"line_end":338,"column_start":5,"column_end":62}},{"value":"/ See the [`format::strftime` module](./format/strftime/index.html)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":389003,"byte_end":389072,"line_start":339,"line_end":339,"column_start":5,"column_end":74}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":389077,"byte_end":389115,"line_start":340,"line_end":340,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":389120,"byte_end":389123,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ See also `Offset::datetime_from_str` which gives a local `DateTime` on specific time zone.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":389128,"byte_end":389222,"line_start":342,"line_end":342,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":389227,"byte_end":389230,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Note that this method *requires a timezone* in the string. See","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":389235,"byte_end":389301,"line_start":344,"line_end":344,"column_start":5,"column_end":71}},{"value":"/ [`NaiveDateTime::parse_from_str`](./naive/struct.NaiveDateTime.html#method.parse_from_str)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":389306,"byte_end":389400,"line_start":345,"line_end":345,"column_start":5,"column_end":99}},{"value":"/ for a version that does not require a timezone in the to-be-parsed str.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":389405,"byte_end":389480,"line_start":346,"line_end":346,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":389485,"byte_end":389488,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":389493,"byte_end":389506,"line_start":348,"line_end":348,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":389511,"byte_end":389514,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":389519,"byte_end":389530,"line_start":350,"line_end":350,"column_start":5,"column_end":16}},{"value":"/ use chrono::{DateTime, FixedOffset, TimeZone};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":389535,"byte_end":389585,"line_start":351,"line_end":351,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":389590,"byte_end":389593,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ let dt = DateTime::parse_from_str(","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":389598,"byte_end":389636,"line_start":353,"line_end":353,"column_start":5,"column_end":43}},{"value":"/     \"1983 Apr 13 12:09:14.274 +0000\", \"%Y %b %d %H:%M:%S%.3f %z\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":389641,"byte_end":389711,"line_start":354,"line_end":354,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(dt, Ok(FixedOffset::east(0).ymd(1983, 4, 13).and_hms_milli(12, 9, 14, 274)));","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":389716,"byte_end":389808,"line_start":355,"line_end":355,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":389813,"byte_end":389820,"line_start":356,"line_end":356,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":390214,"byte_end":390224,"line_start":366,"line_end":366,"column_start":12,"column_end":22},"name":"to_rfc2822","qualname":"<DateTime<Tz>>::to_rfc2822","value":"pub fn to_rfc2822(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`.\n","sig":null,"attributes":[{"value":"/ Returns an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":390116,"byte_end":390202,"line_start":365,"line_end":365,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":390507,"byte_end":390517,"line_start":372,"line_end":372,"column_start":12,"column_end":22},"name":"to_rfc3339","qualname":"<DateTime<Tz>>::to_rfc3339","value":"pub fn to_rfc3339(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`.\n","sig":null,"attributes":[{"value":"/ Returns an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":390401,"byte_end":390495,"line_start":371,"line_end":371,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":391931,"byte_end":391946,"line_start":401,"line_end":401,"column_start":12,"column_end":27},"name":"to_rfc3339_opts","qualname":"<DateTime<Tz>>::to_rfc3339_opts","value":"pub fn to_rfc3339_opts(&Self, SecondsFormat, bool) -> String","parent":null,"children":[],"decl_id":null,"docs":" Return an RFC 3339 and ISO 8601 date and time string with subseconds\n formatted as per a `SecondsFormat`. If passed `use_z` true and the\n timezone is UTC (offset 0), use 'Z', as per\n [Fixed::TimezoneOffsetColonZ](format/enum.Fixed.html#variant.TimezoneOffsetColonZ).\n If passed `use_z` false, use\n [Fixed::TimezoneOffsetColon](format/enum.Fixed.html#variant.TimezoneOffsetColon).","sig":null,"attributes":[{"value":"/ Return an RFC 3339 and ISO 8601 date and time string with subseconds","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":390694,"byte_end":390766,"line_start":377,"line_end":377,"column_start":5,"column_end":77}},{"value":"/ formatted as per a `SecondsFormat`. If passed `use_z` true and the","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":390771,"byte_end":390841,"line_start":378,"line_end":378,"column_start":5,"column_end":75}},{"value":"/ timezone is UTC (offset 0), use 'Z', as per","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":390846,"byte_end":390893,"line_start":379,"line_end":379,"column_start":5,"column_end":52}},{"value":"/ [Fixed::TimezoneOffsetColonZ](format/enum.Fixed.html#variant.TimezoneOffsetColonZ).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":390898,"byte_end":390985,"line_start":380,"line_end":380,"column_start":5,"column_end":92}},{"value":"/ If passed `use_z` false, use","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":390990,"byte_end":391022,"line_start":381,"line_end":381,"column_start":5,"column_end":37}},{"value":"/ [Fixed::TimezoneOffsetColon](format/enum.Fixed.html#variant.TimezoneOffsetColon).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":391027,"byte_end":391112,"line_start":382,"line_end":382,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":391117,"byte_end":391120,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":391125,"byte_end":391139,"line_start":384,"line_end":384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":391144,"byte_end":391147,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":391152,"byte_end":391163,"line_start":386,"line_end":386,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{DateTime, FixedOffset, SecondsFormat, TimeZone, Utc};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":391168,"byte_end":391240,"line_start":387,"line_end":387,"column_start":5,"column_end":77}},{"value":"/ let dt = Utc.ymd(2018, 1, 26).and_hms_micro(18, 30, 9, 453_829);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":391245,"byte_end":391313,"line_start":388,"line_end":388,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(dt.to_rfc3339_opts(SecondsFormat::Millis, false),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":391318,"byte_end":391382,"line_start":389,"line_end":389,"column_start":5,"column_end":69}},{"value":"/            \"2018-01-26T18:30:09.453+00:00\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":391387,"byte_end":391435,"line_start":390,"line_end":390,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(dt.to_rfc3339_opts(SecondsFormat::Millis, true),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":391440,"byte_end":391503,"line_start":391,"line_end":391,"column_start":5,"column_end":68}},{"value":"/            \"2018-01-26T18:30:09.453Z\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":391508,"byte_end":391551,"line_start":392,"line_end":392,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.to_rfc3339_opts(SecondsFormat::Secs, true),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":391556,"byte_end":391617,"line_start":393,"line_end":393,"column_start":5,"column_end":66}},{"value":"/            \"2018-01-26T18:30:09Z\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":391622,"byte_end":391661,"line_start":394,"line_end":394,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":391666,"byte_end":391669,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ let pst = FixedOffset::east(8 * 60 * 60);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":391674,"byte_end":391719,"line_start":396,"line_end":396,"column_start":5,"column_end":50}},{"value":"/ let dt = pst.ymd(2018, 1, 26).and_hms_micro(10, 30, 9, 453_829);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":391724,"byte_end":391792,"line_start":397,"line_end":397,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(dt.to_rfc3339_opts(SecondsFormat::Secs, true),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":391797,"byte_end":391858,"line_start":398,"line_end":398,"column_start":5,"column_end":66}},{"value":"/            \"2018-01-26T10:30:09+08:00\");","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":391863,"byte_end":391907,"line_start":399,"line_end":399,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":391912,"byte_end":391919,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":393665,"byte_end":393682,"line_start":453,"line_end":453,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<DateTime<Tz>>::format_with_items","value":"pub fn format_with_items<'a, I>(&Self, I) -> DelayedFormat<I> where\nI: Iterator<Item = Item> + Clone","parent":null,"children":[],"decl_id":null,"docs":" Formats the combined date and time with the specified formatting items.\n","sig":null,"attributes":[{"value":"/ Formats the combined date and time with the specified formatting items.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":393564,"byte_end":393639,"line_start":451,"line_end":451,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":393644,"byte_end":393653,"line_start":452,"line_end":452,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":394148,"byte_end":394154,"line_start":463,"line_end":463,"column_start":12,"column_end":18},"name":"format","qualname":"<DateTime<Tz>>::format","value":"pub fn format<'a>(&Self, &'a str) -> DelayedFormat<StrftimeItems>","parent":null,"children":[],"decl_id":null,"docs":" Formats the combined date and time with the specified format string.\n See the [`format::strftime` module](./format/strftime/index.html)\n on the supported escape sequences.\n","sig":null,"attributes":[{"value":"/ Formats the combined date and time with the specified format string.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":393933,"byte_end":394005,"line_start":459,"line_end":459,"column_start":5,"column_end":77}},{"value":"/ See the [`format::strftime` module](./format/strftime/index.html)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":394010,"byte_end":394079,"line_start":460,"line_end":460,"column_start":5,"column_end":74}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":394084,"byte_end":394122,"line_start":461,"line_end":461,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":394127,"byte_end":394136,"line_start":462,"line_end":462,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1457},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"format","qualname":"::format","value":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","parent":null,"children":[{"krate":0,"index":1458},{"krate":0,"index":1461},{"krate":0,"index":1464},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1471},{"krate":0,"index":1474},{"krate":0,"index":1477},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1484},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1491},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1498},{"krate":0,"index":1501},{"krate":0,"index":1504},{"krate":0,"index":1507},{"krate":0,"index":2144},{"krate":0,"index":2145},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2153},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2169},{"krate":0,"index":2171},{"krate":0,"index":2215},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2224},{"krate":0,"index":1510},{"krate":0,"index":1512},{"krate":0,"index":1514},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":2226},{"krate":0,"index":2264},{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2273},{"krate":0,"index":2275},{"krate":0,"index":2277},{"krate":0,"index":2279},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2288},{"krate":0,"index":2297},{"krate":0,"index":2299},{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2307},{"krate":0,"index":2330},{"krate":0,"index":2333},{"krate":0,"index":2335},{"krate":0,"index":2339},{"krate":0,"index":2341},{"krate":0,"index":2344},{"krate":0,"index":2347},{"krate":0,"index":2350},{"krate":0,"index":2352},{"krate":0,"index":2354},{"krate":0,"index":2355},{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2377},{"krate":0,"index":2379},{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2387},{"krate":0,"index":1526},{"krate":0,"index":1528},{"krate":0,"index":1530},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1595},{"krate":0,"index":1706},{"krate":0,"index":1760},{"krate":0,"index":1817},{"krate":0,"index":2440},{"krate":0,"index":2446},{"krate":0,"index":1853},{"krate":0,"index":1859},{"krate":0,"index":1863}],"decl_id":null,"docs":" Formatting (and parsing) utilities for date and time.","sig":null,"attributes":[{"value":"/ Formatting (and parsing) utilities for date and time.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":443964,"byte_end":444021,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":444022,"byte_end":444025,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module provides the common types and routines to implement,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":444026,"byte_end":444094,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/ for example, [`DateTime::format`](../struct.DateTime.html#method.format) or","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":444095,"byte_end":444174,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ [`DateTime::parse_from_str`](../struct.DateTime.html#method.parse_from_str) methods.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":444175,"byte_end":444263,"line_start":8,"line_end":8,"column_start":1,"column_end":89}},{"value":"/ For most cases you should use these high-level interfaces.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":444264,"byte_end":444326,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":444327,"byte_end":444330,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Internally the formatting and parsing shares the same abstract **formatting items**,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":444331,"byte_end":444419,"line_start":11,"line_end":11,"column_start":1,"column_end":89}},{"value":"/ which are just an [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) of","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":444420,"byte_end":444513,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/ the [`Item`](./enum.Item.html) type.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":444514,"byte_end":444554,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ They are generated from more readable **format strings**;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":444555,"byte_end":444616,"line_start":14,"line_end":14,"column_start":1,"column_end":62}},{"value":"/ currently Chrono supports [one built-in syntax closely resembling","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":444617,"byte_end":444686,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/ C's `strftime` format](./strftime/index.html).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":444687,"byte_end":444737,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"allow(ellipsis_inclusive_range_patterns)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":444739,"byte_end":444783,"line_start":18,"line_end":18,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2154},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":445352,"byte_end":445356,"line_start":41,"line_end":41,"column_start":5,"column_end":9},"name":"None","qualname":"::format::Pad::None","value":"Pad::None","parent":{"krate":0,"index":2153},"children":[],"decl_id":null,"docs":" No padding.\n","sig":null,"attributes":[{"value":"/ No padding.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":445332,"byte_end":445347,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2156},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":445390,"byte_end":445394,"line_start":43,"line_end":43,"column_start":5,"column_end":9},"name":"Zero","qualname":"::format::Pad::Zero","value":"Pad::Zero","parent":{"krate":0,"index":2153},"children":[],"decl_id":null,"docs":" Zero (`0`) padding.\n","sig":null,"attributes":[{"value":"/ Zero (`0`) padding.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":445362,"byte_end":445385,"line_start":42,"line_end":42,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2158},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":445423,"byte_end":445428,"line_start":45,"line_end":45,"column_start":5,"column_end":10},"name":"Space","qualname":"::format::Pad::Space","value":"Pad::Space","parent":{"krate":0,"index":2153},"children":[],"decl_id":null,"docs":" Space padding.\n","sig":null,"attributes":[{"value":"/ Space padding.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":445400,"byte_end":445418,"line_start":44,"line_end":44,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":2153},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":445322,"byte_end":445325,"line_start":39,"line_end":39,"column_start":10,"column_end":13},"name":"Pad","qualname":"::format::Pad","value":"pub enum Pad { None, Zero, Space, }","parent":null,"children":[{"krate":0,"index":2154},{"krate":0,"index":2156},{"krate":0,"index":2158}],"decl_id":null,"docs":" Padding characters for numeric items.\n","sig":null,"attributes":[{"value":"/ Padding characters for numeric items.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":445226,"byte_end":445267,"line_start":37,"line_end":37,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2172},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":446325,"byte_end":446329,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Year","qualname":"::format::Numeric::Year","value":"Numeric::Year","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" Full Gregorian year (FW=4, PW=∞).\n May accept years before 1 BCE or after 9999 CE, given an initial sign.\n","sig":null,"attributes":[{"value":"/ Full Gregorian year (FW=4, PW=∞).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":446202,"byte_end":446241,"line_start":63,"line_end":63,"column_start":5,"column_end":42}},{"value":"/ May accept years before 1 BCE or after 9999 CE, given an initial sign.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":446246,"byte_end":446320,"line_start":64,"line_end":64,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2174},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":446431,"byte_end":446441,"line_start":67,"line_end":67,"column_start":5,"column_end":15},"name":"YearDiv100","qualname":"::format::Numeric::YearDiv100","value":"Numeric::YearDiv100","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.\n","sig":null,"attributes":[{"value":"/ Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":446335,"byte_end":446426,"line_start":66,"line_end":66,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2176},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":446512,"byte_end":446522,"line_start":69,"line_end":69,"column_start":5,"column_end":15},"name":"YearMod100","qualname":"::format::Numeric::YearMod100","value":"Numeric::YearMod100","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" Gregorian year modulo 100 (FW=PW=2). Cannot be negative.\n","sig":null,"attributes":[{"value":"/ Gregorian year modulo 100 (FW=PW=2). Cannot be negative.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":446447,"byte_end":446507,"line_start":68,"line_end":68,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2178},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":446657,"byte_end":446664,"line_start":72,"line_end":72,"column_start":5,"column_end":12},"name":"IsoYear","qualname":"::format::Numeric::IsoYear","value":"Numeric::IsoYear","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" Year in the ISO week date (FW=4, PW=∞).\n May accept years before 1 BCE or after 9999 CE, given an initial sign.\n","sig":null,"attributes":[{"value":"/ Year in the ISO week date (FW=4, PW=∞).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":446528,"byte_end":446573,"line_start":70,"line_end":70,"column_start":5,"column_end":48}},{"value":"/ May accept years before 1 BCE or after 9999 CE, given an initial sign.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":446578,"byte_end":446652,"line_start":71,"line_end":71,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2180},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":446762,"byte_end":446775,"line_start":74,"line_end":74,"column_start":5,"column_end":18},"name":"IsoYearDiv100","qualname":"::format::Numeric::IsoYearDiv100","value":"Numeric::IsoYearDiv100","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.\n","sig":null,"attributes":[{"value":"/ Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":446670,"byte_end":446757,"line_start":73,"line_end":73,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2182},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":446858,"byte_end":446871,"line_start":76,"line_end":76,"column_start":5,"column_end":18},"name":"IsoYearMod100","qualname":"::format::Numeric::IsoYearMod100","value":"Numeric::IsoYearMod100","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.\n","sig":null,"attributes":[{"value":"/ Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":446781,"byte_end":446853,"line_start":75,"line_end":75,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2184},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":446902,"byte_end":446907,"line_start":78,"line_end":78,"column_start":5,"column_end":10},"name":"Month","qualname":"::format::Numeric::Month","value":"Numeric::Month","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" Month (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Month (FW=PW=2).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":446877,"byte_end":446897,"line_start":77,"line_end":77,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2186},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":446949,"byte_end":446952,"line_start":80,"line_end":80,"column_start":5,"column_end":8},"name":"Day","qualname":"::format::Numeric::Day","value":"Numeric::Day","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" Day of the month (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Day of the month (FW=PW=2).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":446913,"byte_end":446944,"line_start":79,"line_end":79,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2188},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447045,"byte_end":447056,"line_start":82,"line_end":82,"column_start":5,"column_end":16},"name":"WeekFromSun","qualname":"::format::Numeric::WeekFromSun","value":"Numeric::WeekFromSun","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":446958,"byte_end":447040,"line_start":81,"line_end":81,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2190},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447149,"byte_end":447160,"line_start":84,"line_end":84,"column_start":5,"column_end":16},"name":"WeekFromMon","qualname":"::format::Numeric::WeekFromMon","value":"Numeric::WeekFromMon","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Monday of January (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Week number, where the week 1 starts at the first Monday of January (FW=PW=2).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447062,"byte_end":447144,"line_start":83,"line_end":83,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2192},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447218,"byte_end":447225,"line_start":86,"line_end":86,"column_start":5,"column_end":12},"name":"IsoWeek","qualname":"::format::Numeric::IsoWeek","value":"Numeric::IsoWeek","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" Week number in the ISO week date (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Week number in the ISO week date (FW=PW=2).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447166,"byte_end":447213,"line_start":85,"line_end":85,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2194},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447301,"byte_end":447315,"line_start":88,"line_end":88,"column_start":5,"column_end":19},"name":"NumDaysFromSun","qualname":"::format::Numeric::NumDaysFromSun","value":"Numeric::NumDaysFromSun","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).\n","sig":null,"attributes":[{"value":"/ Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447231,"byte_end":447296,"line_start":87,"line_end":87,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2196},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447389,"byte_end":447403,"line_start":90,"line_end":90,"column_start":5,"column_end":19},"name":"WeekdayFromMon","qualname":"::format::Numeric::WeekdayFromMon","value":"Numeric::WeekdayFromMon","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).\n","sig":null,"attributes":[{"value":"/ Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447321,"byte_end":447384,"line_start":89,"line_end":89,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2198},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447444,"byte_end":447451,"line_start":92,"line_end":92,"column_start":5,"column_end":12},"name":"Ordinal","qualname":"::format::Numeric::Ordinal","value":"Numeric::Ordinal","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" Day of the year (FW=PW=3).\n","sig":null,"attributes":[{"value":"/ Day of the year (FW=PW=3).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447409,"byte_end":447439,"line_start":91,"line_end":91,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2200},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447510,"byte_end":447514,"line_start":94,"line_end":94,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format::Numeric::Hour","value":"Numeric::Hour","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" Hour number in the 24-hour clocks (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Hour number in the 24-hour clocks (FW=PW=2).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447457,"byte_end":447505,"line_start":93,"line_end":93,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2202},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447573,"byte_end":447579,"line_start":96,"line_end":96,"column_start":5,"column_end":11},"name":"Hour12","qualname":"::format::Numeric::Hour12","value":"Numeric::Hour12","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" Hour number in the 12-hour clocks (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Hour number in the 12-hour clocks (FW=PW=2).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447520,"byte_end":447568,"line_start":95,"line_end":95,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2204},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447652,"byte_end":447658,"line_start":98,"line_end":98,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format::Numeric::Minute","value":"Numeric::Minute","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" The number of minutes since the last whole hour (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ The number of minutes since the last whole hour (FW=PW=2).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447585,"byte_end":447647,"line_start":97,"line_end":97,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2206},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447733,"byte_end":447739,"line_start":100,"line_end":100,"column_start":5,"column_end":11},"name":"Second","qualname":"::format::Numeric::Second","value":"Numeric::Second","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" The number of seconds since the last whole minute (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ The number of seconds since the last whole minute (FW=PW=2).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447664,"byte_end":447728,"line_start":99,"line_end":99,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2208},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447942,"byte_end":447952,"line_start":104,"line_end":104,"column_start":5,"column_end":15},"name":"Nanosecond","qualname":"::format::Numeric::Nanosecond","value":"Numeric::Nanosecond","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" The number of nanoseconds since the last whole second (FW=PW=9).\n Note that this is *not* left-aligned;\n see also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).\n","sig":null,"attributes":[{"value":"/ The number of nanoseconds since the last whole second (FW=PW=9).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447745,"byte_end":447813,"line_start":101,"line_end":101,"column_start":5,"column_end":73}},{"value":"/ Note that this is *not* left-aligned;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447818,"byte_end":447859,"line_start":102,"line_end":102,"column_start":5,"column_end":46}},{"value":"/ see also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447864,"byte_end":447937,"line_start":103,"line_end":103,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2210},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":448132,"byte_end":448141,"line_start":107,"line_end":107,"column_start":5,"column_end":14},"name":"Timestamp","qualname":"::format::Numeric::Timestamp","value":"Numeric::Timestamp","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).\n For formatting, it assumes UTC upon the absence of time zone offset.\n","sig":null,"attributes":[{"value":"/ The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":447958,"byte_end":448050,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ For formatting, it assumes UTC upon the absence of time zone offset.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":448055,"byte_end":448127,"line_start":106,"line_end":106,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2212},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":448360,"byte_end":448368,"line_start":113,"line_end":113,"column_start":5,"column_end":13},"name":"Internal","qualname":"::format::Numeric::Internal","value":"Numeric::Internal(InternalNumeric)","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" Internal uses only.","sig":null,"attributes":[{"value":"/ Internal uses only.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":448148,"byte_end":448171,"line_start":109,"line_end":109,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":448176,"byte_end":448179,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ This item exists so that one can add additional internal-only formatting","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":448184,"byte_end":448260,"line_start":111,"line_end":111,"column_start":5,"column_end":81}},{"value":"/ without breaking major compatibility (as enum variants cannot be selectively private).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":448265,"byte_end":448355,"line_start":112,"line_end":112,"column_start":5,"column_end":95}}]},{"kind":"Enum","id":{"krate":0,"index":2171},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":446188,"byte_end":446195,"line_start":62,"line_end":62,"column_start":10,"column_end":17},"name":"Numeric","qualname":"::format::Numeric","value":"pub enum Numeric {\n    Year,\n    YearDiv100,\n    YearMod100,\n    IsoYear,\n    IsoYearDiv100,\n    IsoYearMod100,\n    Month,\n    Day,\n    WeekFromSun,\n    WeekFromMon,\n    IsoWeek,\n    NumDaysFromSun,\n    WeekdayFromMon,\n    Ordinal,\n    Hour,\n    Hour12,\n    Minute,\n    Second,\n    Nanosecond,\n    Timestamp,\n    Internal(InternalNumeric),\n}","parent":null,"children":[{"krate":0,"index":2172},{"krate":0,"index":2174},{"krate":0,"index":2176},{"krate":0,"index":2178},{"krate":0,"index":2180},{"krate":0,"index":2182},{"krate":0,"index":2184},{"krate":0,"index":2186},{"krate":0,"index":2188},{"krate":0,"index":2190},{"krate":0,"index":2192},{"krate":0,"index":2194},{"krate":0,"index":2196},{"krate":0,"index":2198},{"krate":0,"index":2200},{"krate":0,"index":2202},{"krate":0,"index":2204},{"krate":0,"index":2206},{"krate":0,"index":2208},{"krate":0,"index":2210},{"krate":0,"index":2212}],"decl_id":null,"docs":" Numeric item types.\n They have associated formatting width (FW) and parsing width (PW).","sig":null,"attributes":[{"value":"/ Numeric item types.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":445433,"byte_end":445456,"line_start":48,"line_end":48,"column_start":1,"column_end":24}},{"value":"/ They have associated formatting width (FW) and parsing width (PW).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":445457,"byte_end":445527,"line_start":49,"line_end":49,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":445528,"byte_end":445531,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The **formatting width** is the minimal width to be formatted.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":445532,"byte_end":445598,"line_start":51,"line_end":51,"column_start":1,"column_end":67}},{"value":"/ If the number is too short, and the padding is not [`Pad::None`](./enum.Pad.html#variant.None),","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":445599,"byte_end":445698,"line_start":52,"line_end":52,"column_start":1,"column_end":100}},{"value":"/ then it is left-padded.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":445699,"byte_end":445726,"line_start":53,"line_end":53,"column_start":1,"column_end":28}},{"value":"/ If the number is too long or (in some cases) negative, it is printed as is.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":445727,"byte_end":445806,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":445807,"byte_end":445810,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The **parsing width** is the maximal width to be scanned.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":445811,"byte_end":445872,"line_start":56,"line_end":56,"column_start":1,"column_end":62}},{"value":"/ The parser only tries to consume from one to given number of digits (greedily).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":445873,"byte_end":445956,"line_start":57,"line_end":57,"column_start":1,"column_end":84}},{"value":"/ It also trims the preceding whitespaces if any.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":445957,"byte_end":446008,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"/ It cannot parse the negative number, so some date and time cannot be formatted then","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":446009,"byte_end":446096,"line_start":59,"line_end":59,"column_start":1,"column_end":88}},{"value":"/ parsed with the same formatting items.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":446097,"byte_end":446139,"line_start":60,"line_end":60,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1510},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":448476,"byte_end":448491,"line_start":117,"line_end":117,"column_start":12,"column_end":27},"name":"InternalNumeric","qualname":"::format::InternalNumeric","value":"InternalNumeric {  }","parent":null,"children":[{"krate":0,"index":1511}],"decl_id":null,"docs":" An opaque type representing numeric item types for internal uses only.\n","sig":null,"attributes":[{"value":"/ An opaque type representing numeric item types for internal uses only.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":448390,"byte_end":448464,"line_start":116,"line_end":116,"column_start":1,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2227},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449290,"byte_end":449304,"line_start":151,"line_end":151,"column_start":5,"column_end":19},"name":"ShortMonthName","qualname":"::format::Fixed::ShortMonthName","value":"Fixed::ShortMonthName","parent":{"krate":0,"index":2226},"children":[],"decl_id":null,"docs":" Abbreviated month names.","sig":null,"attributes":[{"value":"/ Abbreviated month names.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449157,"byte_end":449185,"line_start":148,"line_end":148,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449190,"byte_end":449193,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Prints a three-letter-long name in the title case, reads the same name in any case.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449198,"byte_end":449285,"line_start":150,"line_end":150,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2229},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449437,"byte_end":449450,"line_start":155,"line_end":155,"column_start":5,"column_end":18},"name":"LongMonthName","qualname":"::format::Fixed::LongMonthName","value":"Fixed::LongMonthName","parent":{"krate":0,"index":2226},"children":[],"decl_id":null,"docs":" Full month names.","sig":null,"attributes":[{"value":"/ Full month names.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449310,"byte_end":449331,"line_start":152,"line_end":152,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449336,"byte_end":449339,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Prints a full name in the title case, reads either a short or full name in any case.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449344,"byte_end":449432,"line_start":154,"line_end":154,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2231},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449599,"byte_end":449615,"line_start":159,"line_end":159,"column_start":5,"column_end":21},"name":"ShortWeekdayName","qualname":"::format::Fixed::ShortWeekdayName","value":"Fixed::ShortWeekdayName","parent":{"krate":0,"index":2226},"children":[],"decl_id":null,"docs":" Abbreviated day of the week names.","sig":null,"attributes":[{"value":"/ Abbreviated day of the week names.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449456,"byte_end":449494,"line_start":156,"line_end":156,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449499,"byte_end":449502,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Prints a three-letter-long name in the title case, reads the same name in any case.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449507,"byte_end":449594,"line_start":158,"line_end":158,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2233},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449758,"byte_end":449773,"line_start":163,"line_end":163,"column_start":5,"column_end":20},"name":"LongWeekdayName","qualname":"::format::Fixed::LongWeekdayName","value":"Fixed::LongWeekdayName","parent":{"krate":0,"index":2226},"children":[],"decl_id":null,"docs":" Full day of the week names.","sig":null,"attributes":[{"value":"/ Full day of the week names.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449621,"byte_end":449652,"line_start":160,"line_end":160,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449657,"byte_end":449660,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Prints a full name in the title case, reads either a short or full name in any case.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449665,"byte_end":449753,"line_start":162,"line_end":162,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2235},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449851,"byte_end":449860,"line_start":167,"line_end":167,"column_start":5,"column_end":14},"name":"LowerAmPm","qualname":"::format::Fixed::LowerAmPm","value":"Fixed::LowerAmPm","parent":{"krate":0,"index":2226},"children":[],"decl_id":null,"docs":" AM/PM.","sig":null,"attributes":[{"value":"/ AM/PM.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449779,"byte_end":449789,"line_start":164,"line_end":164,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449794,"byte_end":449797,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Prints in lower case, reads in any case.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449802,"byte_end":449846,"line_start":166,"line_end":166,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2237},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449938,"byte_end":449947,"line_start":171,"line_end":171,"column_start":5,"column_end":14},"name":"UpperAmPm","qualname":"::format::Fixed::UpperAmPm","value":"Fixed::UpperAmPm","parent":{"krate":0,"index":2226},"children":[],"decl_id":null,"docs":" AM/PM.","sig":null,"attributes":[{"value":"/ AM/PM.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449866,"byte_end":449876,"line_start":168,"line_end":168,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449881,"byte_end":449884,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Prints in upper case, reads in any case.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449889,"byte_end":449933,"line_start":170,"line_end":170,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2239},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":450194,"byte_end":450204,"line_start":175,"line_end":175,"column_start":5,"column_end":15},"name":"Nanosecond","qualname":"::format::Fixed::Nanosecond","value":"Fixed::Nanosecond","parent":{"krate":0,"index":2226},"children":[],"decl_id":null,"docs":" An optional dot plus one or more digits for left-aligned nanoseconds.\n May print nothing, 3, 6 or 9 digits according to the available accuracy.\n See also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).\n","sig":null,"attributes":[{"value":"/ An optional dot plus one or more digits for left-aligned nanoseconds.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449953,"byte_end":450026,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ May print nothing, 3, 6 or 9 digits according to the available accuracy.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":450031,"byte_end":450107,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ See also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":450112,"byte_end":450189,"line_start":174,"line_end":174,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2241},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":450294,"byte_end":450305,"line_start":177,"line_end":177,"column_start":5,"column_end":16},"name":"Nanosecond3","qualname":"::format::Fixed::Nanosecond3","value":"Fixed::Nanosecond3","parent":{"krate":0,"index":2226},"children":[],"decl_id":null,"docs":" Same to [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.\n","sig":null,"attributes":[{"value":"/ Same to [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":450210,"byte_end":450289,"line_start":176,"line_end":176,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2243},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":450395,"byte_end":450406,"line_start":179,"line_end":179,"column_start":5,"column_end":16},"name":"Nanosecond6","qualname":"::format::Fixed::Nanosecond6","value":"Fixed::Nanosecond6","parent":{"krate":0,"index":2226},"children":[],"decl_id":null,"docs":" Same to [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.\n","sig":null,"attributes":[{"value":"/ Same to [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":450311,"byte_end":450390,"line_start":178,"line_end":178,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2245},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":450496,"byte_end":450507,"line_start":181,"line_end":181,"column_start":5,"column_end":16},"name":"Nanosecond9","qualname":"::format::Fixed::Nanosecond9","value":"Fixed::Nanosecond9","parent":{"krate":0,"index":2226},"children":[],"decl_id":null,"docs":" Same to [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.\n","sig":null,"attributes":[{"value":"/ Same to [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":450412,"byte_end":450491,"line_start":180,"line_end":180,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2247},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":450628,"byte_end":450640,"line_start":185,"line_end":185,"column_start":5,"column_end":17},"name":"TimezoneName","qualname":"::format::Fixed::TimezoneName","value":"Fixed::TimezoneName","parent":{"krate":0,"index":2226},"children":[],"decl_id":null,"docs":" Timezone name.","sig":null,"attributes":[{"value":"/ Timezone name.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":450513,"byte_end":450531,"line_start":182,"line_end":182,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":450536,"byte_end":450539,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ It does not support parsing, its use in the parser is an immediate failure.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":450544,"byte_end":450623,"line_start":184,"line_end":184,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2249},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":450972,"byte_end":450991,"line_start":191,"line_end":191,"column_start":5,"column_end":24},"name":"TimezoneOffsetColon","qualname":"::format::Fixed::TimezoneOffsetColon","value":"Fixed::TimezoneOffsetColon","parent":{"krate":0,"index":2226},"children":[],"decl_id":null,"docs":" Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).","sig":null,"attributes":[{"value":"/ Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":450646,"byte_end":450719,"line_start":186,"line_end":186,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":450724,"byte_end":450727,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ In the parser, the colon can be omitted and/or surrounded with any amount of whitespaces.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":450732,"byte_end":450825,"line_start":188,"line_end":188,"column_start":5,"column_end":98}},{"value":"/ The offset is limited from `-24:00` to `+24:00`,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":450830,"byte_end":450882,"line_start":189,"line_end":189,"column_start":5,"column_end":57}},{"value":"/ which is same to [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":450887,"byte_end":450967,"line_start":190,"line_end":190,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2251},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":451380,"byte_end":451400,"line_start":198,"line_end":198,"column_start":5,"column_end":25},"name":"TimezoneOffsetColonZ","qualname":"::format::Fixed::TimezoneOffsetColonZ","value":"Fixed::TimezoneOffsetColonZ","parent":{"krate":0,"index":2226},"children":[],"decl_id":null,"docs":" Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).","sig":null,"attributes":[{"value":"/ Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":450997,"byte_end":451065,"line_start":192,"line_end":192,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":451070,"byte_end":451073,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ In the parser, the colon can be omitted and/or surrounded with any amount of whitespaces,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":451078,"byte_end":451171,"line_start":194,"line_end":194,"column_start":5,"column_end":98}},{"value":"/ and `Z` can be either in upper case or in lower case.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":451176,"byte_end":451233,"line_start":195,"line_end":195,"column_start":5,"column_end":62}},{"value":"/ The offset is limited from `-24:00` to `+24:00`,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":451238,"byte_end":451290,"line_start":196,"line_end":196,"column_start":5,"column_end":57}},{"value":"/ which is same to [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":451295,"byte_end":451375,"line_start":197,"line_end":197,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2253},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":451539,"byte_end":451553,"line_start":201,"line_end":201,"column_start":5,"column_end":19},"name":"TimezoneOffset","qualname":"::format::Fixed::TimezoneOffset","value":"Fixed::TimezoneOffset","parent":{"krate":0,"index":2226},"children":[],"decl_id":null,"docs":" Same to [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.\n Parsing allows an optional colon.\n","sig":null,"attributes":[{"value":"/ Same to [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":451406,"byte_end":451492,"line_start":199,"line_end":199,"column_start":5,"column_end":91}},{"value":"/ Parsing allows an optional colon.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":451497,"byte_end":451534,"line_start":200,"line_end":200,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2255},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":451694,"byte_end":451709,"line_start":204,"line_end":204,"column_start":5,"column_end":20},"name":"TimezoneOffsetZ","qualname":"::format::Fixed::TimezoneOffsetZ","value":"Fixed::TimezoneOffsetZ","parent":{"krate":0,"index":2226},"children":[],"decl_id":null,"docs":" Same to [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.\n Parsing allows an optional colon.\n","sig":null,"attributes":[{"value":"/ Same to [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":451559,"byte_end":451647,"line_start":202,"line_end":202,"column_start":5,"column_end":93}},{"value":"/ Parsing allows an optional colon.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":451652,"byte_end":451689,"line_start":203,"line_end":203,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2257},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":451802,"byte_end":451809,"line_start":206,"line_end":206,"column_start":5,"column_end":12},"name":"RFC2822","qualname":"::format::Fixed::RFC2822","value":"Fixed::RFC2822","parent":{"krate":0,"index":2226},"children":[],"decl_id":null,"docs":" RFC 2822 date and time syntax. Commonly used for email and MIME date and time.\n","sig":null,"attributes":[{"value":"/ RFC 2822 date and time syntax. Commonly used for email and MIME date and time.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":451715,"byte_end":451797,"line_start":205,"line_end":205,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2259},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":451865,"byte_end":451872,"line_start":208,"line_end":208,"column_start":5,"column_end":12},"name":"RFC3339","qualname":"::format::Fixed::RFC3339","value":"Fixed::RFC3339","parent":{"krate":0,"index":2226},"children":[],"decl_id":null,"docs":" RFC 3339 & ISO 8601 date and time syntax.\n","sig":null,"attributes":[{"value":"/ RFC 3339 & ISO 8601 date and time syntax.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":451815,"byte_end":451860,"line_start":207,"line_end":207,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2261},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":452091,"byte_end":452099,"line_start":214,"line_end":214,"column_start":5,"column_end":13},"name":"Internal","qualname":"::format::Fixed::Internal","value":"Fixed::Internal(InternalFixed)","parent":{"krate":0,"index":2226},"children":[],"decl_id":null,"docs":" Internal uses only.","sig":null,"attributes":[{"value":"/ Internal uses only.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":451879,"byte_end":451902,"line_start":210,"line_end":210,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":451907,"byte_end":451910,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ This item exists so that one can add additional internal-only formatting","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":451915,"byte_end":451991,"line_start":212,"line_end":212,"column_start":5,"column_end":81}},{"value":"/ without breaking major compatibility (as enum variants cannot be selectively private).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":451996,"byte_end":452086,"line_start":213,"line_end":213,"column_start":5,"column_end":95}}]},{"kind":"Enum","id":{"krate":0,"index":2226},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449145,"byte_end":449150,"line_start":147,"line_end":147,"column_start":10,"column_end":15},"name":"Fixed","qualname":"::format::Fixed","value":"pub enum Fixed {\n    ShortMonthName,\n    LongMonthName,\n    ShortWeekdayName,\n    LongWeekdayName,\n    LowerAmPm,\n    UpperAmPm,\n    Nanosecond,\n    Nanosecond3,\n    Nanosecond6,\n    Nanosecond9,\n    TimezoneName,\n    TimezoneOffsetColon,\n    TimezoneOffsetColonZ,\n    TimezoneOffset,\n    TimezoneOffsetZ,\n    RFC2822,\n    RFC3339,\n    Internal(InternalFixed),\n}","parent":null,"children":[{"krate":0,"index":2227},{"krate":0,"index":2229},{"krate":0,"index":2231},{"krate":0,"index":2233},{"krate":0,"index":2235},{"krate":0,"index":2237},{"krate":0,"index":2239},{"krate":0,"index":2241},{"krate":0,"index":2243},{"krate":0,"index":2245},{"krate":0,"index":2247},{"krate":0,"index":2249},{"krate":0,"index":2251},{"krate":0,"index":2253},{"krate":0,"index":2255},{"krate":0,"index":2257},{"krate":0,"index":2259},{"krate":0,"index":2261}],"decl_id":null,"docs":" Fixed-format item types.","sig":null,"attributes":[{"value":"/ Fixed-format item types.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":448922,"byte_end":448950,"line_start":142,"line_end":142,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":448951,"byte_end":448954,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ They have their own rules of formatting and parsing.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":448955,"byte_end":449011,"line_start":144,"line_end":144,"column_start":1,"column_end":57}},{"value":"/ Otherwise noted, they print in the specified cases but parse case-insensitively.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":449012,"byte_end":449096,"line_start":145,"line_end":145,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":2275},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":452249,"byte_end":452262,"line_start":219,"line_end":219,"column_start":12,"column_end":25},"name":"InternalFixed","qualname":"::format::InternalFixed","value":"InternalFixed {  }","parent":null,"children":[{"krate":0,"index":2276}],"decl_id":null,"docs":" An opaque type representing fixed-format item types for internal uses only.\n","sig":null,"attributes":[{"value":"/ An opaque type representing fixed-format item types for internal uses only.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":452119,"byte_end":452198,"line_start":217,"line_end":217,"column_start":1,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2309},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":453278,"byte_end":453285,"line_start":246,"line_end":246,"column_start":5,"column_end":12},"name":"Literal","qualname":"::format::Item::Literal","value":"Item::Literal(&'a str)","parent":{"krate":0,"index":2307},"children":[],"decl_id":null,"docs":" A literally printed and parsed text.\n","sig":null,"attributes":[{"value":"/ A literally printed and parsed text.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":453233,"byte_end":453273,"line_start":245,"line_end":245,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2312},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":453365,"byte_end":453377,"line_start":248,"line_end":248,"column_start":5,"column_end":17},"name":"OwnedLiteral","qualname":"::format::Item::OwnedLiteral","value":"Item::OwnedLiteral(Box<str>)","parent":{"krate":0,"index":2307},"children":[],"decl_id":null,"docs":" Same to `Literal` but with the string owned by the item.\n","sig":null,"attributes":[{"value":"/ Same to `Literal` but with the string owned by the item.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":453300,"byte_end":453360,"line_start":247,"line_end":247,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2315},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":453465,"byte_end":453470,"line_start":250,"line_end":250,"column_start":5,"column_end":10},"name":"Space","qualname":"::format::Item::Space","value":"Item::Space(&'a str)","parent":{"krate":0,"index":2307},"children":[],"decl_id":null,"docs":" Whitespace. Prints literally but reads zero or more whitespace.\n","sig":null,"attributes":[{"value":"/ Whitespace. Prints literally but reads zero or more whitespace.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":453393,"byte_end":453460,"line_start":249,"line_end":249,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2318},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":453548,"byte_end":453558,"line_start":252,"line_end":252,"column_start":5,"column_end":15},"name":"OwnedSpace","qualname":"::format::Item::OwnedSpace","value":"Item::OwnedSpace(Box<str>)","parent":{"krate":0,"index":2307},"children":[],"decl_id":null,"docs":" Same to `Space` but with the string owned by the item.\n","sig":null,"attributes":[{"value":"/ Same to `Space` but with the string owned by the item.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":453485,"byte_end":453543,"line_start":251,"line_end":251,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2321},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":453737,"byte_end":453744,"line_start":255,"line_end":255,"column_start":5,"column_end":12},"name":"Numeric","qualname":"::format::Item::Numeric","value":"Item::Numeric(Numeric, Pad)","parent":{"krate":0,"index":2307},"children":[],"decl_id":null,"docs":" Numeric item. Can be optionally padded to the maximal length (if any) when formatting;\n the parser simply ignores any padded whitespace and zeroes.\n","sig":null,"attributes":[{"value":"/ Numeric item. Can be optionally padded to the maximal length (if any) when formatting;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":453574,"byte_end":453664,"line_start":253,"line_end":253,"column_start":5,"column_end":95}},{"value":"/ the parser simply ignores any padded whitespace and zeroes.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":453669,"byte_end":453732,"line_start":254,"line_end":254,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2325},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":453791,"byte_end":453796,"line_start":257,"line_end":257,"column_start":5,"column_end":10},"name":"Fixed","qualname":"::format::Item::Fixed","value":"Item::Fixed(Fixed)","parent":{"krate":0,"index":2307},"children":[],"decl_id":null,"docs":" Fixed-format item.\n","sig":null,"attributes":[{"value":"/ Fixed-format item.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":453764,"byte_end":453786,"line_start":256,"line_end":256,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2328},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":453885,"byte_end":453890,"line_start":259,"line_end":259,"column_start":5,"column_end":10},"name":"Error","qualname":"::format::Item::Error","value":"Item::Error","parent":{"krate":0,"index":2307},"children":[],"decl_id":null,"docs":" Issues a formatting error. Used to signal an invalid format string.\n","sig":null,"attributes":[{"value":"/ Issues a formatting error. Used to signal an invalid format string.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":453809,"byte_end":453880,"line_start":258,"line_end":258,"column_start":5,"column_end":76}}]},{"kind":"Enum","id":{"krate":0,"index":2307},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":453218,"byte_end":453222,"line_start":244,"line_end":244,"column_start":10,"column_end":14},"name":"Item","qualname":"::format::Item","value":"pub enum Item<'a> {\n    Literal(&'a str),\n    OwnedLiteral(Box<str>),\n    Space(&'a str),\n    OwnedSpace(Box<str>),\n    Numeric(Numeric, Pad),\n    Fixed(Fixed),\n    Error,\n}","parent":null,"children":[{"krate":0,"index":2309},{"krate":0,"index":2312},{"krate":0,"index":2315},{"krate":0,"index":2318},{"krate":0,"index":2321},{"krate":0,"index":2325},{"krate":0,"index":2328}],"decl_id":null,"docs":" A single formatting item. This is used for both formatting and parsing.\n","sig":null,"attributes":[{"value":"/ A single formatting item. This is used for both formatting and parsing.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":453094,"byte_end":453169,"line_start":242,"line_end":242,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2347},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":454509,"byte_end":454519,"line_start":272,"line_end":272,"column_start":12,"column_end":22},"name":"ParseError","qualname":"::format::ParseError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error from the `parse` function.\n","sig":null,"attributes":[{"value":"/ An error from the `parse` function.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":454413,"byte_end":454452,"line_start":270,"line_end":270,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":1526},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":455755,"byte_end":455766,"line_start":306,"line_end":306,"column_start":10,"column_end":21},"name":"ParseResult","qualname":"::format::ParseResult","value":"Result<T, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Same to `Result<T, ParseError>`.\n","sig":null,"attributes":[{"value":"/ Same to `Result<T, ParseError>`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":455709,"byte_end":455745,"line_start":305,"line_end":305,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":1539},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":457215,"byte_end":457221,"line_start":339,"line_end":339,"column_start":8,"column_end":14},"name":"format","qualname":"::format::format","value":"pub fn format<'a,\n              I>(&mut fmt::Formatter, Option<&NaiveDate>, Option<&NaiveTime>,\n                 Option<&(String, FixedOffset)>, I) -> fmt::Result where\nI: Iterator<Item = Item>","parent":null,"children":[],"decl_id":null,"docs":" Tries to format given arguments with given formatting items.\n Internally used by `DelayedFormat`.\n","sig":null,"attributes":[{"value":"/ Tries to format given arguments with given formatting items.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":457103,"byte_end":457167,"line_start":337,"line_end":337,"column_start":1,"column_end":65}},{"value":"/ Internally used by `DelayedFormat`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":457168,"byte_end":457207,"line_start":338,"line_end":338,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2388},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":473469,"byte_end":473475,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"Parsed","qualname":"::format::parsed::Parsed","value":"Parsed { year, year_div_100, year_mod_100, isoyear, isoyear_div_100, isoyear_mod_100, month, week_from_sun, week_from_mon, isoweek, weekday, ordinal, day, hour_div_12, hour_mod_12, minute, second, nanosecond, timestamp, offset }","parent":null,"children":[{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2404},{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":2407},{"krate":0,"index":2408},{"krate":0,"index":2409}],"decl_id":null,"docs":" Parsed parts of date and time. There are two classes of methods:","sig":null,"attributes":[{"value":"/ Parsed parts of date and time. There are two classes of methods:","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":472951,"byte_end":473019,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":473020,"byte_end":473023,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ - `set_*` methods try to set given field(s) while checking for the consistency.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":473024,"byte_end":473107,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/   It may or may not check for the range constraint immediately (for efficiency reasons).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":473108,"byte_end":473200,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":473201,"byte_end":473204,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ - `to_*` methods try to make a concrete date and time value out of set fields.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":473205,"byte_end":473287,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/   It fully checks any remaining out-of-range conditions and inconsistent/impossible fields.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":473288,"byte_end":473383,"line_start":24,"line_end":24,"column_start":1,"column_end":96}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":473384,"byte_end":473422,"line_start":25,"line_end":25,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2389},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":473652,"byte_end":473656,"line_start":32,"line_end":32,"column_start":9,"column_end":13},"name":"year","qualname":"::format::parsed::Parsed::year","value":"std::option::Option<i32>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Year.","sig":null,"attributes":[{"value":"/ Year.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":473482,"byte_end":473491,"line_start":28,"line_end":28,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":473496,"byte_end":473499,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This can be negative unlike [`year_div_100`](#structfield.year_div_100)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":473504,"byte_end":473579,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ and [`year_mod_100`](#structfield.year_mod_100) fields.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":473584,"byte_end":473643,"line_start":31,"line_end":31,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":2390},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":473960,"byte_end":473972,"line_start":39,"line_end":39,"column_start":9,"column_end":21},"name":"year_div_100","qualname":"::format::parsed::Parsed::year_div_100","value":"std::option::Option<i32>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Year divided by 100. Implies that the year is >= 1 BCE when set.","sig":null,"attributes":[{"value":"/ Year divided by 100. Implies that the year is >= 1 BCE when set.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":473676,"byte_end":473744,"line_start":34,"line_end":34,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":473749,"byte_end":473752,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Due to the common usage, if this field is missing but","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":473757,"byte_end":473814,"line_start":36,"line_end":36,"column_start":5,"column_end":62}},{"value":"/ [`year_mod_100`](#structfield.year_mod_100) is present,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":473819,"byte_end":473878,"line_start":37,"line_end":37,"column_start":5,"column_end":64}},{"value":"/ it is inferred to 19 when `year_mod_100 >= 70` and 20 otherwise.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":473883,"byte_end":473951,"line_start":38,"line_end":38,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":2391},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":474065,"byte_end":474077,"line_start":42,"line_end":42,"column_start":9,"column_end":21},"name":"year_mod_100","qualname":"::format::parsed::Parsed::year_mod_100","value":"std::option::Option<i32>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Year modulo 100. Implies that the year is >= 1 BCE when set.\n","sig":null,"attributes":[{"value":"/ Year modulo 100. Implies that the year is >= 1 BCE when set.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":473992,"byte_end":474056,"line_start":41,"line_end":41,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":2392},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":474344,"byte_end":474351,"line_start":48,"line_end":48,"column_start":9,"column_end":16},"name":"isoyear","qualname":"::format::parsed::Parsed::isoyear","value":"std::option::Option<i32>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date).","sig":null,"attributes":[{"value":"/ Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":474097,"byte_end":474171,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":474176,"byte_end":474179,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This can be negative unlike [`isoyear_div_100`](#structfield.isoyear_div_100) and","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":474184,"byte_end":474269,"line_start":46,"line_end":46,"column_start":5,"column_end":90}},{"value":"/ [`isoyear_mod_100`](#structfield.isoyear_mod_100) fields.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":474274,"byte_end":474335,"line_start":47,"line_end":47,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":2393},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":474738,"byte_end":474753,"line_start":56,"line_end":56,"column_start":9,"column_end":24},"name":"isoyear_div_100","qualname":"::format::parsed::Parsed::isoyear_div_100","value":"std::option::Option<i32>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), divided by 100.\n Implies that the year is >= 1 BCE when set.","sig":null,"attributes":[{"value":"/ Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), divided by 100.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":474371,"byte_end":474461,"line_start":50,"line_end":50,"column_start":5,"column_end":95}},{"value":"/ Implies that the year is >= 1 BCE when set.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":474466,"byte_end":474513,"line_start":51,"line_end":51,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":474518,"byte_end":474521,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Due to the common usage, if this field is missing but","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":474526,"byte_end":474583,"line_start":53,"line_end":53,"column_start":5,"column_end":62}},{"value":"/ [`isoyear_mod_100`](#structfield.isoyear_mod_100) is present,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":474588,"byte_end":474653,"line_start":54,"line_end":54,"column_start":5,"column_end":70}},{"value":"/ it is inferred to 19 when `isoyear_mod_100 >= 70` and 20 otherwise.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":474658,"byte_end":474729,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":2394},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":474920,"byte_end":474935,"line_start":60,"line_end":60,"column_start":9,"column_end":24},"name":"isoyear_mod_100","qualname":"::format::parsed::Parsed::isoyear_mod_100","value":"std::option::Option<i32>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), modulo 100.\n Implies that the year is >= 1 BCE when set.\n","sig":null,"attributes":[{"value":"/ Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), modulo 100.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":474773,"byte_end":474859,"line_start":58,"line_end":58,"column_start":5,"column_end":91}},{"value":"/ Implies that the year is >= 1 BCE when set.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":474864,"byte_end":474911,"line_start":59,"line_end":59,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2395},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":474982,"byte_end":474987,"line_start":63,"line_end":63,"column_start":9,"column_end":14},"name":"month","qualname":"::format::parsed::Parsed::month","value":"std::option::Option<u32>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Month (1--12).\n","sig":null,"attributes":[{"value":"/ Month (1--12).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":474955,"byte_end":474973,"line_start":62,"line_end":62,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2396},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":475142,"byte_end":475155,"line_start":67,"line_end":67,"column_start":9,"column_end":22},"name":"week_from_sun","qualname":"::format::parsed::Parsed::week_from_sun","value":"std::option::Option<u32>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Sunday of January\n (0--53, 1--53 or 1--52 depending on the year).\n","sig":null,"attributes":[{"value":"/ Week number, where the week 1 starts at the first Sunday of January","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":475007,"byte_end":475078,"line_start":65,"line_end":65,"column_start":5,"column_end":76}},{"value":"/ (0--53, 1--53 or 1--52 depending on the year).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":475083,"byte_end":475133,"line_start":66,"line_end":66,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2397},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":475310,"byte_end":475323,"line_start":71,"line_end":71,"column_start":9,"column_end":22},"name":"week_from_mon","qualname":"::format::parsed::Parsed::week_from_mon","value":"std::option::Option<u32>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Monday of January\n (0--53, 1--53 or 1--52 depending on the year).\n","sig":null,"attributes":[{"value":"/ Week number, where the week 1 starts at the first Monday of January","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":475175,"byte_end":475246,"line_start":69,"line_end":69,"column_start":5,"column_end":76}},{"value":"/ (0--53, 1--53 or 1--52 depending on the year).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":475251,"byte_end":475301,"line_start":70,"line_end":70,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2398},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":475463,"byte_end":475470,"line_start":75,"line_end":75,"column_start":9,"column_end":16},"name":"isoweek","qualname":"::format::parsed::Parsed::isoweek","value":"std::option::Option<u32>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" [ISO week number](../naive/struct.NaiveDate.html#week-date)\n (1--52 or 1--53 depending on the year).\n","sig":null,"attributes":[{"value":"/ [ISO week number](../naive/struct.NaiveDate.html#week-date)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":475343,"byte_end":475406,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ (1--52 or 1--53 depending on the year).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":475411,"byte_end":475454,"line_start":74,"line_end":74,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2399},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":475519,"byte_end":475526,"line_start":78,"line_end":78,"column_start":9,"column_end":16},"name":"weekday","qualname":"::format::parsed::Parsed::weekday","value":"std::option::Option<Weekday>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[{"value":"/ Day of the week.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":475490,"byte_end":475510,"line_start":77,"line_end":77,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2400},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":475620,"byte_end":475627,"line_start":81,"line_end":81,"column_start":9,"column_end":16},"name":"ordinal","qualname":"::format::parsed::Parsed::ordinal","value":"std::option::Option<u32>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Day of the year (1--365 or 1--366 depending on the year).\n","sig":null,"attributes":[{"value":"/ Day of the year (1--365 or 1--366 depending on the year).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":475550,"byte_end":475611,"line_start":80,"line_end":80,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":2401},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":475731,"byte_end":475734,"line_start":84,"line_end":84,"column_start":9,"column_end":12},"name":"day","qualname":"::format::parsed::Parsed::day","value":"std::option::Option<u32>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).\n","sig":null,"attributes":[{"value":"/ Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":475647,"byte_end":475722,"line_start":83,"line_end":83,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":2402},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":475835,"byte_end":475846,"line_start":87,"line_end":87,"column_start":9,"column_end":20},"name":"hour_div_12","qualname":"::format::parsed::Parsed::hour_div_12","value":"std::option::Option<u32>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.\n","sig":null,"attributes":[{"value":"/ Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":475754,"byte_end":475826,"line_start":86,"line_end":86,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2403},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":475909,"byte_end":475920,"line_start":90,"line_end":90,"column_start":9,"column_end":20},"name":"hour_mod_12","qualname":"::format::parsed::Parsed::hour_mod_12","value":"std::option::Option<u32>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Hour number modulo 12 (0--11).\n","sig":null,"attributes":[{"value":"/ Hour number modulo 12 (0--11).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":475866,"byte_end":475900,"line_start":89,"line_end":89,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2404},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":475975,"byte_end":475981,"line_start":93,"line_end":93,"column_start":9,"column_end":15},"name":"minute","qualname":"::format::parsed::Parsed::minute","value":"std::option::Option<u32>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Minute number (0--59).\n","sig":null,"attributes":[{"value":"/ Minute number (0--59).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":475940,"byte_end":475966,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2405},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":476065,"byte_end":476071,"line_start":96,"line_end":96,"column_start":9,"column_end":15},"name":"second","qualname":"::format::parsed::Parsed::second","value":"std::option::Option<u32>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Second number (0--60, accounting for leap seconds).\n","sig":null,"attributes":[{"value":"/ Second number (0--60, accounting for leap seconds).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":476001,"byte_end":476056,"line_start":95,"line_end":95,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2406},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":476170,"byte_end":476180,"line_start":99,"line_end":99,"column_start":9,"column_end":19},"name":"nanosecond","qualname":"::format::parsed::Parsed::nanosecond","value":"std::option::Option<u32>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" The number of nanoseconds since the whole second (0--999,999,999).\n","sig":null,"attributes":[{"value":"/ The number of nanoseconds since the whole second (0--999,999,999).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":476091,"byte_end":476161,"line_start":98,"line_end":98,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":2407},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":476383,"byte_end":476392,"line_start":104,"line_end":104,"column_start":9,"column_end":18},"name":"timestamp","qualname":"::format::parsed::Parsed::timestamp","value":"std::option::Option<i64>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" The number of non-leap seconds since the midnight UTC on January 1, 1970.","sig":null,"attributes":[{"value":"/ The number of non-leap seconds since the midnight UTC on January 1, 1970.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":476200,"byte_end":476277,"line_start":101,"line_end":101,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":476282,"byte_end":476285,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This can be off by one if [`second`](#structfield.second) is 60 (a leap second).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":476290,"byte_end":476374,"line_start":103,"line_end":103,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":2408},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":476471,"byte_end":476477,"line_start":107,"line_end":107,"column_start":9,"column_end":15},"name":"offset","qualname":"::format::parsed::Parsed::offset","value":"std::option::Option<i32>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Offset from the local time to UTC, in seconds.\n","sig":null,"attributes":[{"value":"/ Offset from the local time to UTC, in seconds.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":476412,"byte_end":476462,"line_start":106,"line_end":106,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1659},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":477572,"byte_end":477575,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"new","qualname":"<Parsed>::new","value":"pub fn new() -> Parsed","parent":null,"children":[],"decl_id":null,"docs":" Returns the initial value of parsed parts.\n","sig":null,"attributes":[{"value":"/ Returns the initial value of parsed parts.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":477514,"byte_end":477560,"line_start":138,"line_end":138,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1660},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":477711,"byte_end":477719,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"name":"set_year","qualname":"<Parsed>::set_year","value":"pub fn set_year(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`year`](#structfield.year) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`year`](#structfield.year) field from given value.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":477627,"byte_end":477699,"line_start":143,"line_end":143,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1661},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":477959,"byte_end":477975,"line_start":149,"line_end":149,"column_start":12,"column_end":28},"name":"set_year_div_100","qualname":"<Parsed>::set_year_div_100","value":"pub fn set_year_div_100(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`year_div_100`](#structfield.year_div_100) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`year_div_100`](#structfield.year_div_100) field from given value.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":477859,"byte_end":477947,"line_start":148,"line_end":148,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1662},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":478274,"byte_end":478290,"line_start":155,"line_end":155,"column_start":12,"column_end":28},"name":"set_year_mod_100","qualname":"<Parsed>::set_year_mod_100","value":"pub fn set_year_mod_100(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`year_mod_100`](#structfield.year_mod_100) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`year_mod_100`](#structfield.year_mod_100) field from given value.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":478174,"byte_end":478262,"line_start":154,"line_end":154,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1663},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":478579,"byte_end":478590,"line_start":161,"line_end":161,"column_start":12,"column_end":23},"name":"set_isoyear","qualname":"<Parsed>::set_isoyear","value":"pub fn set_isoyear(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoyear`](#structfield.isoyear) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`isoyear`](#structfield.isoyear) field from given value.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":478489,"byte_end":478567,"line_start":160,"line_end":160,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1664},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":478839,"byte_end":478858,"line_start":166,"line_end":166,"column_start":12,"column_end":31},"name":"set_isoyear_div_100","qualname":"<Parsed>::set_isoyear_div_100","value":"pub fn set_isoyear_div_100(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoyear_div_100`](#structfield.isoyear_div_100) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`isoyear_div_100`](#structfield.isoyear_div_100) field from given value.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":478733,"byte_end":478827,"line_start":165,"line_end":165,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1665},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":479166,"byte_end":479185,"line_start":172,"line_end":172,"column_start":12,"column_end":31},"name":"set_isoyear_mod_100","qualname":"<Parsed>::set_isoyear_mod_100","value":"pub fn set_isoyear_mod_100(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoyear_mod_100`](#structfield.isoyear_mod_100) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`isoyear_mod_100`](#structfield.isoyear_mod_100) field from given value.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":479060,"byte_end":479154,"line_start":171,"line_end":171,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1666},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":479473,"byte_end":479482,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"set_month","qualname":"<Parsed>::set_month","value":"pub fn set_month(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`month`](#structfield.month) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`month`](#structfield.month) field from given value.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":479387,"byte_end":479461,"line_start":177,"line_end":177,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1667},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":479725,"byte_end":479742,"line_start":183,"line_end":183,"column_start":12,"column_end":29},"name":"set_week_from_sun","qualname":"<Parsed>::set_week_from_sun","value":"pub fn set_week_from_sun(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`week_from_sun`](#structfield.week_from_sun) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`week_from_sun`](#structfield.week_from_sun) field from given value.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":479623,"byte_end":479713,"line_start":182,"line_end":182,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1668},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":479993,"byte_end":480010,"line_start":188,"line_end":188,"column_start":12,"column_end":29},"name":"set_week_from_mon","qualname":"<Parsed>::set_week_from_mon","value":"pub fn set_week_from_mon(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`week_from_mon`](#structfield.week_from_mon) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`week_from_mon`](#structfield.week_from_mon) field from given value.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":479891,"byte_end":479981,"line_start":187,"line_end":187,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":480249,"byte_end":480260,"line_start":193,"line_end":193,"column_start":12,"column_end":23},"name":"set_isoweek","qualname":"<Parsed>::set_isoweek","value":"pub fn set_isoweek(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoweek`](#structfield.isoweek) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`isoweek`](#structfield.isoweek) field from given value.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":480159,"byte_end":480237,"line_start":192,"line_end":192,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":480493,"byte_end":480504,"line_start":198,"line_end":198,"column_start":12,"column_end":23},"name":"set_weekday","qualname":"<Parsed>::set_weekday","value":"pub fn set_weekday(&mut Self, Weekday) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`weekday`](#structfield.weekday) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`weekday`](#structfield.weekday) field from given value.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":480403,"byte_end":480481,"line_start":197,"line_end":197,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":480706,"byte_end":480717,"line_start":203,"line_end":203,"column_start":12,"column_end":23},"name":"set_ordinal","qualname":"<Parsed>::set_ordinal","value":"pub fn set_ordinal(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`ordinal`](#structfield.ordinal) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`ordinal`](#structfield.ordinal) field from given value.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":480616,"byte_end":480694,"line_start":202,"line_end":202,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1672},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":480942,"byte_end":480949,"line_start":208,"line_end":208,"column_start":12,"column_end":19},"name":"set_day","qualname":"<Parsed>::set_day","value":"pub fn set_day(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`day`](#structfield.day) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`day`](#structfield.day) field from given value.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":480860,"byte_end":480930,"line_start":207,"line_end":207,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":481226,"byte_end":481234,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"set_ampm","qualname":"<Parsed>::set_ampm","value":"pub fn set_ampm(&mut Self, bool) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`hour_div_12`](#structfield.hour_div_12) field from given value.\n (`false` for AM, `true` for PM)\n","sig":null,"attributes":[{"value":"/ Tries to set the [`hour_div_12`](#structfield.hour_div_12) field from given value.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":481088,"byte_end":481174,"line_start":212,"line_end":212,"column_start":5,"column_end":91}},{"value":"/ (`false` for AM, `true` for PM)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":481179,"byte_end":481214,"line_start":213,"line_end":213,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1674},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":481493,"byte_end":481503,"line_start":220,"line_end":220,"column_start":12,"column_end":22},"name":"set_hour12","qualname":"<Parsed>::set_hour12","value":"pub fn set_hour12(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`hour_mod_12`](#structfield.hour_mod_12) field from\n given hour number in 12-hour clocks.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`hour_mod_12`](#structfield.hour_mod_12) field from","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":481363,"byte_end":481436,"line_start":218,"line_end":218,"column_start":5,"column_end":78}},{"value":"/ given hour number in 12-hour clocks.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":481441,"byte_end":481481,"line_start":219,"line_end":219,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":481846,"byte_end":481854,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"set_hour","qualname":"<Parsed>::set_hour","value":"pub fn set_hour(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set both [`hour_div_12`](#structfield.hour_div_12) and\n [`hour_mod_12`](#structfield.hour_mod_12) fields from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set both [`hour_div_12`](#structfield.hour_div_12) and","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":481692,"byte_end":481759,"line_start":225,"line_end":225,"column_start":5,"column_end":72}},{"value":"/ [`hour_mod_12`](#structfield.hour_mod_12) fields from given value.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":481764,"byte_end":481834,"line_start":226,"line_end":226,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1676},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":482199,"byte_end":482209,"line_start":235,"line_end":235,"column_start":12,"column_end":22},"name":"set_minute","qualname":"<Parsed>::set_minute","value":"pub fn set_minute(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`minute`](#structfield.minute) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`minute`](#structfield.minute) field from given value.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":482111,"byte_end":482187,"line_start":234,"line_end":234,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":482439,"byte_end":482449,"line_start":240,"line_end":240,"column_start":12,"column_end":22},"name":"set_second","qualname":"<Parsed>::set_second","value":"pub fn set_second(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`second`](#structfield.second) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`second`](#structfield.second) field from given value.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":482351,"byte_end":482427,"line_start":239,"line_end":239,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":482687,"byte_end":482701,"line_start":245,"line_end":245,"column_start":12,"column_end":26},"name":"set_nanosecond","qualname":"<Parsed>::set_nanosecond","value":"pub fn set_nanosecond(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`nanosecond`](#structfield.nanosecond) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`nanosecond`](#structfield.nanosecond) field from given value.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":482591,"byte_end":482675,"line_start":244,"line_end":244,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":482941,"byte_end":482954,"line_start":250,"line_end":250,"column_start":12,"column_end":25},"name":"set_timestamp","qualname":"<Parsed>::set_timestamp","value":"pub fn set_timestamp(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`timestamp`](#structfield.timestamp) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`timestamp`](#structfield.timestamp) field from given value.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":482847,"byte_end":482929,"line_start":249,"line_end":249,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":483152,"byte_end":483162,"line_start":255,"line_end":255,"column_start":12,"column_end":22},"name":"set_offset","qualname":"<Parsed>::set_offset","value":"pub fn set_offset(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`offset`](#structfield.offset) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`offset`](#structfield.offset) field from given value.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":483064,"byte_end":483140,"line_start":254,"line_end":254,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":483811,"byte_end":483824,"line_start":270,"line_end":270,"column_start":12,"column_end":25},"name":"to_naive_date","qualname":"<Parsed>::to_naive_date","value":"pub fn to_naive_date(&Self) -> ParseResult<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed naive date out of given fields.","sig":null,"attributes":[{"value":"/ Returns a parsed naive date out of given fields.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":483304,"byte_end":483356,"line_start":259,"line_end":259,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":483361,"byte_end":483364,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the date from given subset of fields:","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":483369,"byte_end":483443,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":483448,"byte_end":483451,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ - Year, month, day.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":483456,"byte_end":483479,"line_start":263,"line_end":263,"column_start":5,"column_end":28}},{"value":"/ - Year, day of the year (ordinal).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":483484,"byte_end":483522,"line_start":264,"line_end":264,"column_start":5,"column_end":43}},{"value":"/ - Year, week number counted from Sunday or Monday, day of the week.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":483527,"byte_end":483598,"line_start":265,"line_end":265,"column_start":5,"column_end":76}},{"value":"/ - ISO week date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":483603,"byte_end":483623,"line_start":266,"line_end":266,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":483628,"byte_end":483631,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Gregorian year and ISO week date year can have their century number (`*_div_100`) omitted,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":483636,"byte_end":483730,"line_start":268,"line_end":268,"column_start":5,"column_end":99}},{"value":"/ the two-digit year is used to guess the century number then.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":483735,"byte_end":483799,"line_start":269,"line_end":269,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":492862,"byte_end":492875,"line_start":455,"line_end":455,"column_start":12,"column_end":25},"name":"to_naive_time","qualname":"<Parsed>::to_naive_time","value":"pub fn to_naive_time(&Self) -> ParseResult<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed naive time out of given fields.","sig":null,"attributes":[{"value":"/ Returns a parsed naive time out of given fields.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":492459,"byte_end":492511,"line_start":446,"line_end":446,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":492516,"byte_end":492519,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the time from given subset of fields:","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":492524,"byte_end":492598,"line_start":448,"line_end":448,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":492603,"byte_end":492606,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ - Hour, minute. (second and nanosecond assumed to be 0)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":492611,"byte_end":492670,"line_start":450,"line_end":450,"column_start":5,"column_end":64}},{"value":"/ - Hour, minute, second. (nanosecond assumed to be 0)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":492675,"byte_end":492731,"line_start":451,"line_end":451,"column_start":5,"column_end":61}},{"value":"/ - Hour, minute, second, nanosecond.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":492736,"byte_end":492775,"line_start":452,"line_end":452,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":492780,"byte_end":492783,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ It is able to handle leap seconds when given second is 60.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":492788,"byte_end":492850,"line_start":454,"line_end":454,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":494658,"byte_end":494687,"line_start":497,"line_end":497,"column_start":12,"column_end":41},"name":"to_naive_datetime_with_offset","qualname":"<Parsed>::to_naive_datetime_with_offset","value":"pub fn to_naive_datetime_with_offset(&Self, i32) -> ParseResult<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed naive date and time out of given fields,\n except for the [`offset`](#structfield.offset) field (assumed to have a given value).\n This is required for parsing a local time or other known-timezone inputs.","sig":null,"attributes":[{"value":"/ Returns a parsed naive date and time out of given fields,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":494173,"byte_end":494234,"line_start":490,"line_end":490,"column_start":5,"column_end":66}},{"value":"/ except for the [`offset`](#structfield.offset) field (assumed to have a given value).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":494239,"byte_end":494328,"line_start":491,"line_end":491,"column_start":5,"column_end":94}},{"value":"/ This is required for parsing a local time or other known-timezone inputs.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":494333,"byte_end":494410,"line_start":492,"line_end":492,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":494415,"byte_end":494418,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the combined date and time","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":494423,"byte_end":494486,"line_start":494,"line_end":494,"column_start":5,"column_end":68}},{"value":"/ from date and time fields or a single [`timestamp`](#structfield.timestamp) field.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":494491,"byte_end":494577,"line_start":495,"line_end":495,"column_start":5,"column_end":91}},{"value":"/ Either way those fields have to be consistent to each other.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":494582,"byte_end":494646,"line_start":496,"line_end":496,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":498109,"byte_end":498124,"line_start":567,"line_end":567,"column_start":12,"column_end":27},"name":"to_fixed_offset","qualname":"<Parsed>::to_fixed_offset","value":"pub fn to_fixed_offset(&Self) -> ParseResult<FixedOffset>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed fixed time zone offset out of given fields.\n","sig":null,"attributes":[{"value":"/ Returns a parsed fixed time zone offset out of given fields.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":498033,"byte_end":498097,"line_start":566,"line_end":566,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":498596,"byte_end":498607,"line_start":577,"line_end":577,"column_start":12,"column_end":23},"name":"to_datetime","qualname":"<Parsed>::to_datetime","value":"pub fn to_datetime(&Self) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed timezone-aware date and time out of given fields.","sig":null,"attributes":[{"value":"/ Returns a parsed timezone-aware date and time out of given fields.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":498245,"byte_end":498315,"line_start":571,"line_end":571,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":498320,"byte_end":498323,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the combined date and time","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":498328,"byte_end":498391,"line_start":573,"line_end":573,"column_start":5,"column_end":68}},{"value":"/ from date and time fields or a single [`timestamp`](#structfield.timestamp) field,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":498396,"byte_end":498482,"line_start":574,"line_end":574,"column_start":5,"column_end":91}},{"value":"/ plus a time zone offset.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":498487,"byte_end":498515,"line_start":575,"line_end":575,"column_start":5,"column_end":33}},{"value":"/ Either way those fields have to be consistent to each other.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":498520,"byte_end":498584,"line_start":576,"line_end":576,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1703},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":499650,"byte_end":499675,"line_start":597,"line_end":597,"column_start":12,"column_end":37},"name":"to_datetime_with_timezone","qualname":"<Parsed>::to_datetime_with_timezone","value":"pub fn to_datetime_with_timezone<Tz: TimeZone>(&Self, &Tz)\n-> ParseResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed timezone-aware date and time out of given fields,\n with an additional `TimeZone` used to interpret and validate the local date.","sig":null,"attributes":[{"value":"/ Returns a parsed timezone-aware date and time out of given fields,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":499093,"byte_end":499163,"line_start":588,"line_end":588,"column_start":5,"column_end":75}},{"value":"/ with an additional `TimeZone` used to interpret and validate the local date.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":499168,"byte_end":499248,"line_start":589,"line_end":589,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":499253,"byte_end":499256,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the combined date and time","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":499261,"byte_end":499324,"line_start":591,"line_end":591,"column_start":5,"column_end":68}},{"value":"/ from date and time fields or a single [`timestamp`](#structfield.timestamp) field,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":499329,"byte_end":499415,"line_start":592,"line_end":592,"column_start":5,"column_end":91}},{"value":"/ plus a time zone offset.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":499420,"byte_end":499448,"line_start":593,"line_end":593,"column_start":5,"column_end":33}},{"value":"/ Either way those fields have to be consistent to each other.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":499453,"byte_end":499517,"line_start":594,"line_end":594,"column_start":5,"column_end":69}},{"value":"/ If parsed fields include an UTC offset, it also has to be consistent to","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":499522,"byte_end":499597,"line_start":595,"line_end":595,"column_start":5,"column_end":80}},{"value":"/ [`offset`](#structfield.offset).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":499602,"byte_end":499638,"line_start":596,"line_end":596,"column_start":5,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1810},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parse.rs","byte_start":546633,"byte_end":546638,"line_start":207,"line_end":207,"column_start":8,"column_end":13},"name":"parse","qualname":"::format::parse::parse","value":"pub fn parse<'a, I>(&mut Parsed, &str, I) -> ParseResult<()> where\nI: Iterator<Item = Item>","parent":null,"children":[],"decl_id":null,"docs":" Tries to parse given string into `parsed` with given formatting items.\n Returns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).\n There should be no trailing string after parsing;\n use a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.","sig":null,"attributes":[{"value":"/ Tries to parse given string into `parsed` with given formatting items.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parse.rs","byte_start":545730,"byte_end":545804,"line_start":191,"line_end":191,"column_start":1,"column_end":75}},{"value":"/ Returns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parse.rs","byte_start":545805,"byte_end":545901,"line_start":192,"line_end":192,"column_start":1,"column_end":97}},{"value":"/ There should be no trailing string after parsing;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parse.rs","byte_start":545902,"byte_end":545955,"line_start":193,"line_end":193,"column_start":1,"column_end":54}},{"value":"/ use a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parse.rs","byte_start":545956,"byte_end":546040,"line_start":194,"line_end":194,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parse.rs","byte_start":546041,"byte_end":546044,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ This particular date and time parser is:","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parse.rs","byte_start":546045,"byte_end":546089,"line_start":196,"line_end":196,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parse.rs","byte_start":546090,"byte_end":546093,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ - Greedy. It will consume the longest possible prefix.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parse.rs","byte_start":546094,"byte_end":546152,"line_start":198,"line_end":198,"column_start":1,"column_end":59}},{"value":"/   For example, `April` is always consumed entirely when the long month name is requested;","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parse.rs","byte_start":546153,"byte_end":546246,"line_start":199,"line_end":199,"column_start":1,"column_end":94}},{"value":"/   it equally accepts `Apr`, but prefers the longer prefix in this case.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parse.rs","byte_start":546247,"byte_end":546322,"line_start":200,"line_end":200,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parse.rs","byte_start":546323,"byte_end":546326,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ - Padding-agnostic (for numeric items).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parse.rs","byte_start":546327,"byte_end":546370,"line_start":202,"line_end":202,"column_start":1,"column_end":44}},{"value":"/   The [`Pad`](./enum.Pad.html) field is completely ignored,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parse.rs","byte_start":546371,"byte_end":546434,"line_start":203,"line_end":203,"column_start":1,"column_end":64}},{"value":"/   so one can prepend any number of whitespace then any number of zeroes before numbers.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parse.rs","byte_start":546435,"byte_end":546526,"line_start":204,"line_end":204,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parse.rs","byte_start":546527,"byte_end":546530,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ - (Still) obeying the intrinsic parsing width. This allows, for example, parsing `HHMMSS`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parse.rs","byte_start":546531,"byte_end":546625,"line_start":206,"line_end":206,"column_start":1,"column_end":95}}]},{"kind":"Mod","id":{"krate":0,"index":1817},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/strftime.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"strftime","qualname":"::format::strftime","value":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/strftime.rs","parent":null,"children":[{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1822},{"krate":0,"index":1825},{"krate":0,"index":1828},{"krate":0,"index":1831},{"krate":0,"index":1834},{"krate":0,"index":2421},{"krate":0,"index":2425},{"krate":0,"index":2428},{"krate":0,"index":1837},{"krate":0,"index":1842},{"krate":0,"index":1843}],"decl_id":null,"docs":"`strftime`/`strptime`-inspired date and time formatting syntax.","sig":null,"attributes":[{"value":"*\n`strftime`/`strptime`-inspired date and time formatting syntax.\n\n## Specifiers\n\nThe following specifiers are available both to formatting and parsing.\n\n| Spec. | Example  | Description                                                                |\n|-------|----------|----------------------------------------------------------------------------|\n|       |          | **DATE SPECIFIERS:**                                                       |\n| `%Y`  | `2001`   | The full proleptic Gregorian year, zero-padded to 4 digits. [1]            |\n| `%C`  | `20`     | The proleptic Gregorian year divided by 100, zero-padded to 2 digits. [2]  |\n| `%y`  | `01`     | The proleptic Gregorian year modulo 100, zero-padded to 2 digits. [2]      |\n|       |          |                                                                            |\n| `%m`  | `07`     | Month number (01--12), zero-padded to 2 digits.                            |\n| `%b`  | `Jul`    | Abbreviated month name. Always 3 letters.                                  |\n| `%B`  | `July`   | Full month name. Also accepts corresponding abbreviation in parsing.       |\n| `%h`  | `Jul`    | Same to `%b`.                                                              |\n|       |          |                                                                            |\n| `%d`  | `08`     | Day number (01--31), zero-padded to 2 digits.                              |\n| `%e`  | ` 8`     | Same to `%d` but space-padded. Same to `%_d`.                              |\n|       |          |                                                                            |\n| `%a`  | `Sun`    | Abbreviated weekday name. Always 3 letters.                                |\n| `%A`  | `Sunday` | Full weekday name. Also accepts corresponding abbreviation in parsing.     |\n| `%w`  | `0`      | Sunday = 0, Monday = 1, ..., Saturday = 6.                                 |\n| `%u`  | `7`      | Monday = 1, Tuesday = 2, ..., Sunday = 7. (ISO 8601)                       |\n|       |          |                                                                            |\n| `%U`  | `28`     | Week number starting with Sunday (00--53), zero-padded to 2 digits. [3]    |\n| `%W`  | `27`     | Same to `%U`, but week 1 starts with the first Monday in that year instead.|\n|       |          |                                                                            |\n| `%G`  | `2001`   | Same to `%Y` but uses the year number in ISO 8601 week date. [4]           |\n| `%g`  | `01`     | Same to `%y` but uses the year number in ISO 8601 week date. [4]           |\n| `%V`  | `27`     | Same to `%U` but uses the week number in ISO 8601 week date (01--53). [4]  |\n|       |          |                                                                            |\n| `%j`  | `189`    | Day of the year (001--366), zero-padded to 3 digits.                       |\n|       |          |                                                                            |\n| `%D`  | `07/08/01`    | Month-day-year format. Same to `%m/%d/%y`.                            |\n| `%x`  | `07/08/01`    | Same to `%D`.                                                         |\n| `%F`  | `2001-07-08`  | Year-month-day format (ISO 8601). Same to `%Y-%m-%d`.                 |\n| `%v`  | ` 8-Jul-2001` | Day-month-year format. Same to `%e-%b-%Y`.                            |\n|       |          |                                                                            |\n|       |          | **TIME SPECIFIERS:**                                                       |\n| `%H`  | `00`     | Hour number (00--23), zero-padded to 2 digits.                             |\n| `%k`  | ` 0`     | Same to `%H` but space-padded. Same to `%_H`.                              |\n| `%I`  | `12`     | Hour number in 12-hour clocks (01--12), zero-padded to 2 digits.           |\n| `%l`  | `12`     | Same to `%I` but space-padded. Same to `%_I`.                              |\n|       |          |                                                                            |\n| `%P`  | `am`     | `am` or `pm` in 12-hour clocks.                                            |\n| `%p`  | `AM`     | `AM` or `PM` in 12-hour clocks.                                            |\n|       |          |                                                                            |\n| `%M`  | `34`     | Minute number (00--59), zero-padded to 2 digits.                           |\n| `%S`  | `60`     | Second number (00--60), zero-padded to 2 digits. [5]                       |\n| `%f`  | `026490000`   | The fractional seconds (in nanoseconds) since last whole second. [8]  |\n| `%.f` | `.026490`| Similar to `.%f` but left-aligned. These all consume the leading dot. [8]  |\n| `%.3f`| `.026`        | Similar to `.%f` but left-aligned but fixed to a length of 3. [8]     |\n| `%.6f`| `.026490`     | Similar to `.%f` but left-aligned but fixed to a length of 6. [8]     |\n| `%.9f`| `.026490000`  | Similar to `.%f` but left-aligned but fixed to a length of 9. [8]     |\n| `%3f` | `026`         | Similar to `%.3f` but without the leading dot. [8]                    |\n| `%6f` | `026490`      | Similar to `%.6f` but without the leading dot. [8]                    |\n| `%9f` | `026490000`   | Similar to `%.9f` but without the leading dot. [8]                    |\n|       |               |                                                                       |\n| `%R`  | `00:34`       | Hour-minute format. Same to `%H:%M`.                                  |\n| `%T`  | `00:34:60`    | Hour-minute-second format. Same to `%H:%M:%S`.                        |\n| `%X`  | `00:34:60`    | Same to `%T`.                                                         |\n| `%r`  | `12:34:60 AM` | Hour-minute-second format in 12-hour clocks. Same to `%I:%M:%S %p`.   |\n|       |          |                                                                            |\n|       |          | **TIME ZONE SPECIFIERS:**                                                  |\n| `%Z`  | `ACST`   | *Formatting only:* Local time zone name.                                   |\n| `%z`  | `+0930`  | Offset from the local time to UTC (with UTC being `+0000`).                |\n| `%:z` | `+09:30` | Same to `%z` but with a colon.                                             |\n| `%#z` | `+09`    | *Parsing only:* Same to `%z` but allows minutes to be missing or present.  |\n|       |          |                                                                            |\n|       |          | **DATE & TIME SPECIFIERS:**                                                |\n|`%c`|`Sun Jul  8 00:34:60 2001`|`ctime` date & time format. Same to `%a %b %e %T %Y` sans `\\n`.|\n| `%+`  | `2001-07-08T00:34:60.026490+09:30` | ISO 8601 / RFC 3339 date & time format. [6]      |\n|       |               |                                                                       |\n| `%s`  | `994518299`   | UNIX timestamp, the number of seconds since 1970-01-01 00:00 UTC. [7] |\n|       |          |                                                                            |\n|       |          | **SPECIAL SPECIFIERS:**                                                    |\n| `%t`  |          | Literal tab (`\\t`).                                                        |\n| `%n`  |          | Literal newline (`\\n`).                                                    |\n| `%%`  |          | Literal percent sign.                                                      |\n\nIt is possible to override the default padding behavior of numeric specifiers `%?`.\nThis is not allowed for other specifiers and will result in the `BAD_FORMAT` error.\n\nModifier | Description\n-------- | -----------\n`%-?`    | Suppresses any padding including spaces and zeroes. (e.g. `%j` = `012`, `%-j` = `12`)\n`%_?`    | Uses spaces as a padding. (e.g. `%j` = `012`, `%_j` = ` 12`)\n`%0?`    | Uses zeroes as a padding. (e.g. `%e` = ` 9`, `%0e` = `09`)\n\nNotes:\n\n1. `%Y`:\n   Negative years are allowed in formatting but not in parsing.\n\n2. `%C`, `%y`:\n   This is floor division, so 100 BCE (year number -99) will print `-1` and `99` respectively.\n\n3. `%U`:\n   Week 1 starts with the first Sunday in that year.\n   It is possible to have week 0 for days before the first Sunday.\n\n4. `%G`, `%g`, `%V`:\n   Week 1 is the first week with at least 4 days in that year.\n   Week 0 does not exist, so this should be used with `%G` or `%g`.\n\n5. `%S`:\n   It accounts for leap seconds, so `60` is possible.\n\n6. `%+`:\n   Same to `%Y-%m-%dT%H:%M:%S%.f%:z`,\n   i.e. 0, 3, 6 or 9 fractional digits for seconds and colons in the time zone offset.\n\n   The typical `strftime` implementations have\n   different (and locale-dependent) formats for this specifier.\n   While Chrono's format for `%+` is far more stable,\n   it is best to avoid this specifier if you want to control the exact output.\n\n7. `%s`:\n   This is not padded and can be negative.\n   For the purpose of Chrono, it only accounts for non-leap seconds\n   so it slightly differs from ISO C `strftime` behavior.\n\n8. `%f`, `%.f`, `%.3f`, `%.6f`, `%.9f`, `%3f`, `%6f`, `%9f`:\n\n   The default `%f` is right-aligned and always zero-padded to 9 digits\n   for the compatibility with glibc and others,\n   so it always counts the number of nanoseconds since the last whole second.\n   E.g. 7ms after the last second will print `007000000`,\n   and parsing `7000000` will yield the same.\n\n   The variant `%.f` is left-aligned and print 0, 3, 6 or 9 fractional digits\n   according to the precision.\n   E.g. 70ms after the last second under `%.f` will print `.070` (note: not `.07`),\n   and parsing `.07`, `.070000` etc. will yield the same.\n   Note that they can print or read nothing if the fractional part is zero or\n   the next character is not `.`.\n\n   The variant `%.3f`, `%.6f` and `%.9f` are left-aligned and print 3, 6 or 9 fractional digits\n   according to the number preceding `f`.\n   E.g. 70ms after the last second under `%.3f` will print `.070` (note: not `.07`),\n   and parsing `.07`, `.070000` etc. will yield the same.\n   Note that they can read nothing if the fractional part is zero or\n   the next character is not `.` however will print with the specified length.\n\n   The variant `%3f`, `%6f` and `%9f` are left-aligned and print 3, 6 or 9 fractional digits\n   according to the number preceding `f`, but without the leading dot.\n   E.g. 70ms after the last second under `%3f` will print `070` (note: not `07`),\n   and parsing `07`, `070000` etc. will yield the same.\n   Note that they can read nothing if the fractional part is zero.\n\n*/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/strftime.rs","byte_start":576677,"byte_end":587269,"line_start":4,"line_end":157,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":2421},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/strftime.rs","byte_start":587437,"byte_end":587450,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"StrftimeItems","qualname":"::format::strftime::StrftimeItems","value":"StrftimeItems {  }","parent":null,"children":[{"krate":0,"index":2423},{"krate":0,"index":2424}],"decl_id":null,"docs":" Parsing iterator for `strftime`-like format strings.\n","sig":null,"attributes":[{"value":"/ Parsing iterator for `strftime`-like format strings.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/strftime.rs","byte_start":587345,"byte_end":587401,"line_start":161,"line_end":161,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1839},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/strftime.rs","byte_start":587926,"byte_end":587929,"line_start":174,"line_end":174,"column_start":12,"column_end":15},"name":"new","qualname":"<StrftimeItems>::new","value":"pub fn new(&'a str) -> StrftimeItems","parent":null,"children":[],"decl_id":null,"docs":" Creates a new parsing iterator from the `strftime`-like format string.\n","sig":null,"attributes":[{"value":"/ Creates a new parsing iterator from the `strftime`-like format string.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/strftime.rs","byte_start":587840,"byte_end":587914,"line_start":173,"line_end":173,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":2440},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":470118,"byte_end":470131,"line_start":602,"line_end":602,"column_start":12,"column_end":25},"name":"DelayedFormat","qualname":"::format::DelayedFormat","value":"DelayedFormat {  }","parent":null,"children":[{"krate":0,"index":2442},{"krate":0,"index":2443},{"krate":0,"index":2444},{"krate":0,"index":2445}],"decl_id":null,"docs":" A *temporary* object which can be used as an argument to `format!` or others.\n This is normally constructed via `format` methods of each date and time type.\n","sig":null,"attributes":[{"value":"/ A *temporary* object which can be used as an argument to `format!` or others.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":469926,"byte_end":470007,"line_start":599,"line_end":599,"column_start":1,"column_end":82}},{"value":"/ This is normally constructed via `format` methods of each date and time type.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":470008,"byte_end":470089,"line_start":600,"line_end":600,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1856},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":470587,"byte_end":470590,"line_start":615,"line_end":615,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayedFormat<I>>::new","value":"pub fn new(Option<NaiveDate>, Option<NaiveTime>, I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DelayedFormat` value out of local date and time.\n","sig":null,"attributes":[{"value":"/ Makes a new `DelayedFormat` value out of local date and time.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":470510,"byte_end":470575,"line_start":614,"line_end":614,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1857},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":470850,"byte_end":470865,"line_start":620,"line_end":620,"column_start":12,"column_end":27},"name":"new_with_offset","qualname":"<DelayedFormat<I>>::new_with_offset","value":"pub fn new_with_offset<Off>(Option<NaiveDate>, Option<NaiveTime>, &Off, I)\n-> DelayedFormat<I> where Off: Offset + fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DelayedFormat` value out of local date and time and UTC offset.\n","sig":null,"attributes":[{"value":"/ Makes a new `DelayedFormat` value out of local date and time and UTC offset.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":470758,"byte_end":470838,"line_start":619,"line_end":619,"column_start":5,"column_end":85}}]},{"kind":"Trait","id":{"krate":0,"index":1880},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":602812,"byte_end":602823,"line_start":14,"line_end":14,"column_start":11,"column_end":22},"name":"SubsecRound","qualname":"::round::SubsecRound","value":"SubsecRound","parent":null,"children":[{"krate":0,"index":1881},{"krate":0,"index":1882}],"decl_id":null,"docs":" Extension trait for subsecond rounding or truncation to a maximum number\n of digits. Rounding can be used to decrease the error variance when\n serializing/persisting to lower precision. Truncation is the default\n behavior in Chrono display formatting.  Either can be used to guarantee\n equality (e.g. for testing) when round-tripping through a lower precision\n format.\n","sig":null,"attributes":[{"value":"/ Extension trait for subsecond rounding or truncation to a maximum number","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":602414,"byte_end":602490,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ of digits. Rounding can be used to decrease the error variance when","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":602491,"byte_end":602562,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/ serializing/persisting to lower precision. Truncation is the default","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":602563,"byte_end":602635,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ behavior in Chrono display formatting.  Either can be used to guarantee","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":602636,"byte_end":602711,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ equality (e.g. for testing) when round-tripping through a lower precision","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":602712,"byte_end":602789,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ format.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":602790,"byte_end":602801,"line_start":13,"line_end":13,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1881},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":603353,"byte_end":603366,"line_start":26,"line_end":26,"column_start":8,"column_end":21},"name":"round_subsecs","qualname":"::round::SubsecRound::round_subsecs","value":"pub fn round_subsecs(Self, u16) -> Self","parent":{"krate":0,"index":1880},"children":[],"decl_id":null,"docs":" Return a copy rounded to the specified number of subsecond digits. With\n 9 or more digits, self is returned unmodified. Halfway values are\n rounded up (away from zero).","sig":null,"attributes":[{"value":"/ Return a copy rounded to the specified number of subsecond digits. With","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":602830,"byte_end":602905,"line_start":15,"line_end":15,"column_start":5,"column_end":80}},{"value":"/ 9 or more digits, self is returned unmodified. Halfway values are","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":602910,"byte_end":602979,"line_start":16,"line_end":16,"column_start":5,"column_end":74}},{"value":"/ rounded up (away from zero).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":602984,"byte_end":603016,"line_start":17,"line_end":17,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":603021,"byte_end":603024,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":603029,"byte_end":603042,"line_start":19,"line_end":19,"column_start":5,"column_end":18}},{"value":"/ ``` rust","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":603047,"byte_end":603059,"line_start":20,"line_end":20,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, SubsecRound, Timelike, TimeZone, Utc};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":603064,"byte_end":603131,"line_start":21,"line_end":21,"column_start":5,"column_end":72}},{"value":"/ let dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":603136,"byte_end":603199,"line_start":22,"line_end":22,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(dt.round_subsecs(2).nanosecond(), 150_000_000);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":603204,"byte_end":603266,"line_start":23,"line_end":23,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(dt.round_subsecs(1).nanosecond(), 200_000_000);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":603271,"byte_end":603333,"line_start":24,"line_end":24,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":603338,"byte_end":603345,"line_start":25,"line_end":25,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1882},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":603869,"byte_end":603882,"line_start":38,"line_end":38,"column_start":8,"column_end":21},"name":"trunc_subsecs","qualname":"::round::SubsecRound::trunc_subsecs","value":"pub fn trunc_subsecs(Self, u16) -> Self","parent":{"krate":0,"index":1880},"children":[],"decl_id":null,"docs":" Return a copy truncated to the specified number of subsecond\n digits. With 9 or more digits, self is returned unmodified.","sig":null,"attributes":[{"value":"/ Return a copy truncated to the specified number of subsecond","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":603400,"byte_end":603464,"line_start":28,"line_end":28,"column_start":5,"column_end":69}},{"value":"/ digits. With 9 or more digits, self is returned unmodified.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":603469,"byte_end":603532,"line_start":29,"line_end":29,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":603537,"byte_end":603540,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":603545,"byte_end":603558,"line_start":31,"line_end":31,"column_start":5,"column_end":18}},{"value":"/ ``` rust","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":603563,"byte_end":603575,"line_start":32,"line_end":32,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, SubsecRound, Timelike, TimeZone, Utc};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":603580,"byte_end":603647,"line_start":33,"line_end":33,"column_start":5,"column_end":72}},{"value":"/ let dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":603652,"byte_end":603715,"line_start":34,"line_end":34,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(dt.trunc_subsecs(2).nanosecond(), 150_000_000);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":603720,"byte_end":603782,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(dt.trunc_subsecs(1).nanosecond(), 100_000_000);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":603787,"byte_end":603849,"line_start":36,"line_end":36,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":603854,"byte_end":603861,"line_start":37,"line_end":37,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2450},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22354,"byte_end":22357,"line_start":523,"line_end":523,"column_start":5,"column_end":8},"name":"Mon","qualname":"::Weekday::Mon","value":"Weekday::Mon","parent":{"krate":0,"index":2449},"children":[],"decl_id":null,"docs":" Monday.\n","sig":null,"attributes":[{"value":"/ Monday.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22338,"byte_end":22349,"line_start":522,"line_end":522,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2453},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22384,"byte_end":22387,"line_start":525,"line_end":525,"column_start":5,"column_end":8},"name":"Tue","qualname":"::Weekday::Tue","value":"Weekday::Tue","parent":{"krate":0,"index":2449},"children":[],"decl_id":null,"docs":" Tuesday.\n","sig":null,"attributes":[{"value":"/ Tuesday.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22367,"byte_end":22379,"line_start":524,"line_end":524,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2456},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22416,"byte_end":22419,"line_start":527,"line_end":527,"column_start":5,"column_end":8},"name":"Wed","qualname":"::Weekday::Wed","value":"Weekday::Wed","parent":{"krate":0,"index":2449},"children":[],"decl_id":null,"docs":" Wednesday.\n","sig":null,"attributes":[{"value":"/ Wednesday.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22397,"byte_end":22411,"line_start":526,"line_end":526,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2459},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22447,"byte_end":22450,"line_start":529,"line_end":529,"column_start":5,"column_end":8},"name":"Thu","qualname":"::Weekday::Thu","value":"Weekday::Thu","parent":{"krate":0,"index":2449},"children":[],"decl_id":null,"docs":" Thursday.\n","sig":null,"attributes":[{"value":"/ Thursday.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22429,"byte_end":22442,"line_start":528,"line_end":528,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2462},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22476,"byte_end":22479,"line_start":531,"line_end":531,"column_start":5,"column_end":8},"name":"Fri","qualname":"::Weekday::Fri","value":"Weekday::Fri","parent":{"krate":0,"index":2449},"children":[],"decl_id":null,"docs":" Friday.\n","sig":null,"attributes":[{"value":"/ Friday.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22460,"byte_end":22471,"line_start":530,"line_end":530,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2465},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22507,"byte_end":22510,"line_start":533,"line_end":533,"column_start":5,"column_end":8},"name":"Sat","qualname":"::Weekday::Sat","value":"Weekday::Sat","parent":{"krate":0,"index":2449},"children":[],"decl_id":null,"docs":" Saturday.\n","sig":null,"attributes":[{"value":"/ Saturday.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22489,"byte_end":22502,"line_start":532,"line_end":532,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2468},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22536,"byte_end":22539,"line_start":535,"line_end":535,"column_start":5,"column_end":8},"name":"Sun","qualname":"::Weekday::Sun","value":"Weekday::Sun","parent":{"krate":0,"index":2449},"children":[],"decl_id":null,"docs":" Sunday.\n","sig":null,"attributes":[{"value":"/ Sunday.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22520,"byte_end":22531,"line_start":534,"line_end":534,"column_start":5,"column_end":16}}]},{"kind":"Enum","id":{"krate":0,"index":2449},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22324,"byte_end":22331,"line_start":521,"line_end":521,"column_start":10,"column_end":17},"name":"Weekday","qualname":"::Weekday","value":"pub enum Weekday { Mon = , Tue = , Wed = , Thu = , Fri = , Sat = , Sun = , }","parent":null,"children":[{"krate":0,"index":2450},{"krate":0,"index":2453},{"krate":0,"index":2456},{"krate":0,"index":2459},{"krate":0,"index":2462},{"krate":0,"index":2465},{"krate":0,"index":2468}],"decl_id":null,"docs":" The day of week.","sig":null,"attributes":[{"value":"/ The day of week.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":21929,"byte_end":21949,"line_start":514,"line_end":514,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":21950,"byte_end":21953,"line_start":515,"line_end":515,"column_start":1,"column_end":4}},{"value":"/ The order of the days of week depends on the context.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":21954,"byte_end":22011,"line_start":516,"line_end":516,"column_start":1,"column_end":58}},{"value":"/ (This is why this type does *not* implement `PartialOrd` or `Ord` traits.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22012,"byte_end":22090,"line_start":517,"line_end":517,"column_start":1,"column_end":79}},{"value":"/ One should prefer `*_from_monday` or `*_from_sunday` methods to get the correct result.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22091,"byte_end":22182,"line_start":518,"line_end":518,"column_start":1,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1889},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22858,"byte_end":22862,"line_start":545,"line_end":545,"column_start":12,"column_end":16},"name":"succ","qualname":"<Weekday>::succ","value":"pub fn succ(&Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" The next day in the week.","sig":null,"attributes":[{"value":"/ The next day in the week.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22567,"byte_end":22596,"line_start":539,"line_end":539,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22601,"byte_end":22604,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ `w`:        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22609,"byte_end":22680,"line_start":541,"line_end":541,"column_start":5,"column_end":76}},{"value":"/ ----------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22685,"byte_end":22756,"line_start":542,"line_end":542,"column_start":5,"column_end":76}},{"value":"/ `w.succ()`: | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun` | `Mon`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22761,"byte_end":22832,"line_start":543,"line_end":543,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22837,"byte_end":22846,"line_start":544,"line_end":544,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1890},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":23515,"byte_end":23519,"line_start":563,"line_end":563,"column_start":12,"column_end":16},"name":"pred","qualname":"<Weekday>::pred","value":"pub fn pred(&Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" The previous day in the week.","sig":null,"attributes":[{"value":"/ The previous day in the week.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":23220,"byte_end":23253,"line_start":557,"line_end":557,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":23258,"byte_end":23261,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ `w`:        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":23266,"byte_end":23337,"line_start":559,"line_end":559,"column_start":5,"column_end":76}},{"value":"/ ----------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":23342,"byte_end":23413,"line_start":560,"line_end":560,"column_start":5,"column_end":76}},{"value":"/ `w.pred()`: | `Sun` | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":23418,"byte_end":23489,"line_start":561,"line_end":561,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":23494,"byte_end":23503,"line_start":562,"line_end":562,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1891},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":24261,"byte_end":24279,"line_start":581,"line_end":581,"column_start":12,"column_end":30},"name":"number_from_monday","qualname":"<Weekday>::number_from_monday","value":"pub fn number_from_monday(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)","sig":null,"attributes":[{"value":"/ Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":23877,"byte_end":23961,"line_start":575,"line_end":575,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":23966,"byte_end":23969,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ `w`:                      | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":23974,"byte_end":24059,"line_start":577,"line_end":577,"column_start":5,"column_end":90}},{"value":"/ ------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":24064,"byte_end":24149,"line_start":578,"line_end":578,"column_start":5,"column_end":90}},{"value":"/ `w.number_from_monday()`: | 1     | 2     | 3     | 4     | 5     | 6     | 7","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":24154,"byte_end":24235,"line_start":579,"line_end":579,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":24240,"byte_end":24249,"line_start":580,"line_end":580,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1892},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":24914,"byte_end":24932,"line_start":599,"line_end":599,"column_start":12,"column_end":30},"name":"number_from_sunday","qualname":"<Weekday>::number_from_sunday","value":"pub fn number_from_sunday(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Sunday = 1.","sig":null,"attributes":[{"value":"/ Returns a day-of-week number starting from Sunday = 1.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":24556,"byte_end":24614,"line_start":593,"line_end":593,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":24619,"byte_end":24622,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ `w`:                      | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":24627,"byte_end":24712,"line_start":595,"line_end":595,"column_start":5,"column_end":90}},{"value":"/ ------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":24717,"byte_end":24802,"line_start":596,"line_end":596,"column_start":5,"column_end":90}},{"value":"/ `w.number_from_sunday()`: | 2     | 3     | 4     | 5     | 6     | 7     | 1","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":24807,"byte_end":24888,"line_start":597,"line_end":597,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":24893,"byte_end":24902,"line_start":598,"line_end":598,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1893},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":25573,"byte_end":25593,"line_start":617,"line_end":617,"column_start":12,"column_end":32},"name":"num_days_from_monday","qualname":"<Weekday>::num_days_from_monday","value":"pub fn num_days_from_monday(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Monday = 0.","sig":null,"attributes":[{"value":"/ Returns a day-of-week number starting from Monday = 0.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":25209,"byte_end":25267,"line_start":611,"line_end":611,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":25272,"byte_end":25275,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ `w`:                        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":25280,"byte_end":25367,"line_start":613,"line_end":613,"column_start":5,"column_end":92}},{"value":"/ --------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":25372,"byte_end":25459,"line_start":614,"line_end":614,"column_start":5,"column_end":92}},{"value":"/ `w.num_days_from_monday()`: | 0     | 1     | 2     | 3     | 4     | 5     | 6","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":25464,"byte_end":25547,"line_start":615,"line_end":615,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":25552,"byte_end":25561,"line_start":616,"line_end":616,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1894},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":26234,"byte_end":26254,"line_start":635,"line_end":635,"column_start":12,"column_end":32},"name":"num_days_from_sunday","qualname":"<Weekday>::num_days_from_sunday","value":"pub fn num_days_from_sunday(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Sunday = 0.","sig":null,"attributes":[{"value":"/ Returns a day-of-week number starting from Sunday = 0.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":25870,"byte_end":25928,"line_start":629,"line_end":629,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":25933,"byte_end":25936,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ `w`:                        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":25941,"byte_end":26028,"line_start":631,"line_end":631,"column_start":5,"column_end":92}},{"value":"/ --------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":26033,"byte_end":26120,"line_start":632,"line_end":632,"column_start":5,"column_end":92}},{"value":"/ `w.num_days_from_sunday()`: | 1     | 2     | 3     | 4     | 5     | 6     | 0","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":26125,"byte_end":26208,"line_start":633,"line_end":633,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":26213,"byte_end":26222,"line_start":634,"line_end":634,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2485},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":27702,"byte_end":27719,"line_start":685,"line_end":685,"column_start":12,"column_end":29},"name":"ParseWeekdayError","qualname":"::ParseWeekdayError","value":"ParseWeekdayError {  }","parent":null,"children":[{"krate":0,"index":2486}],"decl_id":null,"docs":" An error resulting from reading `Weekday` value with `FromStr`.\n","sig":null,"attributes":[{"value":"/ An error resulting from reading `Weekday` value with `FromStr`.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":27595,"byte_end":27662,"line_start":683,"line_end":683,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":1903},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":30837,"byte_end":30845,"line_start":804,"line_end":804,"column_start":11,"column_end":19},"name":"Datelike","qualname":"::Datelike","value":"Datelike: Sized","parent":null,"children":[{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921}],"decl_id":null,"docs":" The common set of methods for date component.\n","sig":null,"attributes":[{"value":"/ The common set of methods for date component.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":30777,"byte_end":30826,"line_start":803,"line_end":803,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1904},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":30963,"byte_end":30967,"line_start":806,"line_end":806,"column_start":8,"column_end":12},"name":"year","qualname":"::Datelike::year","value":"pub fn year(&Self) -> i32","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Returns the year number in the [calendar date](./naive/struct.NaiveDate.html#calendar-date).\n","sig":null,"attributes":[{"value":"/ Returns the year number in the [calendar date](./naive/struct.NaiveDate.html#calendar-date).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":30859,"byte_end":30955,"line_start":805,"line_end":805,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":1905},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":31176,"byte_end":31183,"line_start":811,"line_end":811,"column_start":8,"column_end":15},"name":"year_ce","qualname":"::Datelike::year_ce","value":"pub fn year_ce(&Self) -> (bool, u32)","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Returns the absolute year number starting from 1 with a boolean flag,\n which is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).\n","sig":null,"attributes":[{"value":"/ Returns the absolute year number starting from 1 with a boolean flag,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":30988,"byte_end":31061,"line_start":808,"line_end":808,"column_start":5,"column_end":78}},{"value":"/ which is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":31066,"byte_end":31154,"line_start":809,"line_end":809,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":31159,"byte_end":31168,"line_start":810,"line_end":810,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1906},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":31478,"byte_end":31483,"line_start":823,"line_end":823,"column_start":8,"column_end":13},"name":"month","qualname":"::Datelike::month","value":"pub fn month(&Self) -> u32","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Returns the month number starting from 1.","sig":null,"attributes":[{"value":"/ Returns the month number starting from 1.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":31371,"byte_end":31416,"line_start":820,"line_end":820,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":31421,"byte_end":31424,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 12.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":31429,"byte_end":31470,"line_start":822,"line_end":822,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1907},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":31611,"byte_end":31617,"line_start":828,"line_end":828,"column_start":8,"column_end":14},"name":"month0","qualname":"::Datelike::month0","value":"pub fn month0(&Self) -> u32","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Returns the month number starting from 0.","sig":null,"attributes":[{"value":"/ Returns the month number starting from 0.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":31504,"byte_end":31549,"line_start":825,"line_end":825,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":31554,"byte_end":31557,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 11.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":31562,"byte_end":31603,"line_start":827,"line_end":827,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1908},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":31788,"byte_end":31791,"line_start":833,"line_end":833,"column_start":8,"column_end":11},"name":"day","qualname":"::Datelike::day","value":"pub fn day(&Self) -> u32","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Returns the day of month starting from 1.","sig":null,"attributes":[{"value":"/ Returns the day of month starting from 1.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":31638,"byte_end":31683,"line_start":830,"line_end":830,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":31688,"byte_end":31691,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 31. (The last day of month differs by months.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":31696,"byte_end":31780,"line_start":832,"line_end":832,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1909},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":31962,"byte_end":31966,"line_start":838,"line_end":838,"column_start":8,"column_end":12},"name":"day0","qualname":"::Datelike::day0","value":"pub fn day0(&Self) -> u32","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Returns the day of month starting from 0.","sig":null,"attributes":[{"value":"/ Returns the day of month starting from 0.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":31812,"byte_end":31857,"line_start":835,"line_end":835,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":31862,"byte_end":31865,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 30. (The last day of month differs by months.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":31870,"byte_end":31954,"line_start":837,"line_end":837,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1910},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":32135,"byte_end":32142,"line_start":843,"line_end":843,"column_start":8,"column_end":15},"name":"ordinal","qualname":"::Datelike::ordinal","value":"pub fn ordinal(&Self) -> u32","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Returns the day of year starting from 1.","sig":null,"attributes":[{"value":"/ Returns the day of year starting from 1.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":31987,"byte_end":32031,"line_start":840,"line_end":840,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":32036,"byte_end":32039,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 366. (The last day of year differs by years.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":32044,"byte_end":32127,"line_start":842,"line_end":842,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1911},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":32311,"byte_end":32319,"line_start":848,"line_end":848,"column_start":8,"column_end":16},"name":"ordinal0","qualname":"::Datelike::ordinal0","value":"pub fn ordinal0(&Self) -> u32","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Returns the day of year starting from 0.","sig":null,"attributes":[{"value":"/ Returns the day of year starting from 0.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":32163,"byte_end":32207,"line_start":845,"line_end":845,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":32212,"byte_end":32215,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 365. (The last day of year differs by years.)","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":32220,"byte_end":32303,"line_start":847,"line_end":847,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1912},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":32376,"byte_end":32383,"line_start":851,"line_end":851,"column_start":8,"column_end":15},"name":"weekday","qualname":"::Datelike::weekday","value":"pub fn weekday(&Self) -> Weekday","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Returns the day of week.\n","sig":null,"attributes":[{"value":"/ Returns the day of week.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":32340,"byte_end":32368,"line_start":850,"line_end":850,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":32441,"byte_end":32449,"line_start":854,"line_end":854,"column_start":8,"column_end":16},"name":"iso_week","qualname":"::Datelike::iso_week","value":"pub fn iso_week(&Self) -> IsoWeek","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Returns the ISO week.\n","sig":null,"attributes":[{"value":"/ Returns the ISO week.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":32408,"byte_end":32433,"line_start":853,"line_end":853,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1914},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":32607,"byte_end":32616,"line_start":859,"line_end":859,"column_start":8,"column_end":17},"name":"with_year","qualname":"::Datelike::with_year","value":"pub fn with_year(&Self, i32) -> Option<Self>","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Makes a new value with the year number changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the year number changed.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":32474,"byte_end":32525,"line_start":856,"line_end":856,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":32530,"byte_end":32533,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":32538,"byte_end":32599,"line_start":858,"line_end":858,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1915},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":32809,"byte_end":32819,"line_start":864,"line_end":864,"column_start":8,"column_end":18},"name":"with_month","qualname":"::Datelike::with_month","value":"pub fn with_month(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Makes a new value with the month number (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the month number (starting from 1) changed.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":32657,"byte_end":32727,"line_start":861,"line_end":861,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":32732,"byte_end":32735,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":32740,"byte_end":32801,"line_start":863,"line_end":863,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1916},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":33013,"byte_end":33024,"line_start":869,"line_end":869,"column_start":8,"column_end":19},"name":"with_month0","qualname":"::Datelike::with_month0","value":"pub fn with_month0(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Makes a new value with the month number (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the month number (starting from 0) changed.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":32861,"byte_end":32931,"line_start":866,"line_end":866,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":32936,"byte_end":32939,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":32944,"byte_end":33005,"line_start":868,"line_end":868,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1917},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":33219,"byte_end":33227,"line_start":874,"line_end":874,"column_start":8,"column_end":16},"name":"with_day","qualname":"::Datelike::with_day","value":"pub fn with_day(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Makes a new value with the day of month (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the day of month (starting from 1) changed.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":33067,"byte_end":33137,"line_start":871,"line_end":871,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":33142,"byte_end":33145,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":33150,"byte_end":33211,"line_start":873,"line_end":873,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1918},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":33419,"byte_end":33428,"line_start":879,"line_end":879,"column_start":8,"column_end":17},"name":"with_day0","qualname":"::Datelike::with_day0","value":"pub fn with_day0(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Makes a new value with the day of month (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the day of month (starting from 0) changed.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":33267,"byte_end":33337,"line_start":876,"line_end":876,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":33342,"byte_end":33345,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":33350,"byte_end":33411,"line_start":878,"line_end":878,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1919},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":33620,"byte_end":33632,"line_start":884,"line_end":884,"column_start":8,"column_end":20},"name":"with_ordinal","qualname":"::Datelike::with_ordinal","value":"pub fn with_ordinal(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Makes a new value with the day of year (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the day of year (starting from 1) changed.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":33469,"byte_end":33538,"line_start":881,"line_end":881,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":33543,"byte_end":33546,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":33551,"byte_end":33612,"line_start":883,"line_end":883,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1920},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":33827,"byte_end":33840,"line_start":889,"line_end":889,"column_start":8,"column_end":21},"name":"with_ordinal0","qualname":"::Datelike::with_ordinal0","value":"pub fn with_ordinal0(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Makes a new value with the day of year (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the day of year (starting from 0) changed.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":33676,"byte_end":33745,"line_start":886,"line_end":886,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":33750,"byte_end":33753,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":33758,"byte_end":33819,"line_start":888,"line_end":888,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1921},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":34261,"byte_end":34277,"line_start":901,"line_end":901,"column_start":8,"column_end":24},"name":"num_days_from_ce","qualname":"::Datelike::num_days_from_ce","value":"pub fn num_days_from_ce(&Self) -> i32","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Returns the number of days since January 1, Year 1 (aka Day 1) in the\n proleptic Gregorian calendar.","sig":null,"attributes":[{"value":"/ Returns the number of days since January 1, Year 1 (aka Day 1) in the","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":33885,"byte_end":33958,"line_start":891,"line_end":891,"column_start":5,"column_end":78}},{"value":"/ proleptic Gregorian calendar.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":33963,"byte_end":33996,"line_start":892,"line_end":892,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":34001,"byte_end":34004,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":34009,"byte_end":34023,"line_start":894,"line_end":894,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":34028,"byte_end":34031,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ ~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":34036,"byte_end":34043,"line_start":896,"line_end":896,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":34048,"byte_end":34086,"line_start":897,"line_end":897,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(NaiveDate::from_ymd(1970, 1, 1).num_days_from_ce(), 719163);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":34091,"byte_end":34166,"line_start":898,"line_end":898,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(NaiveDate::from_ymd(0, 1, 1).num_days_from_ce(), -365);","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":34171,"byte_end":34241,"line_start":899,"line_end":899,"column_start":5,"column_end":75}},{"value":"/ ~~~","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":34246,"byte_end":34253,"line_start":900,"line_end":900,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":1922},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":34812,"byte_end":34820,"line_start":917,"line_end":917,"column_start":11,"column_end":19},"name":"Timelike","qualname":"::Timelike","value":"Timelike: Sized","parent":null,"children":[{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1932}],"decl_id":null,"docs":" The common set of methods for time component.\n","sig":null,"attributes":[{"value":"/ The common set of methods for time component.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":34752,"byte_end":34801,"line_start":916,"line_end":916,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":34883,"byte_end":34887,"line_start":919,"line_end":919,"column_start":8,"column_end":12},"name":"hour","qualname":"::Timelike::hour","value":"pub fn hour(&Self) -> u32","parent":{"krate":0,"index":1922},"children":[],"decl_id":null,"docs":" Returns the hour number from 0 to 23.\n","sig":null,"attributes":[{"value":"/ Returns the hour number from 0 to 23.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":34834,"byte_end":34875,"line_start":918,"line_end":918,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":35038,"byte_end":35044,"line_start":924,"line_end":924,"column_start":8,"column_end":14},"name":"hour12","qualname":"::Timelike::hour12","value":"pub fn hour12(&Self) -> (bool, u32)","parent":{"krate":0,"index":1922},"children":[],"decl_id":null,"docs":" Returns the hour number from 1 to 12 with a boolean flag,\n which is false for AM and true for PM.\n","sig":null,"attributes":[{"value":"/ Returns the hour number from 1 to 12 with a boolean flag,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":34908,"byte_end":34969,"line_start":921,"line_end":921,"column_start":5,"column_end":66}},{"value":"/ which is false for AM and true for PM.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":34974,"byte_end":35016,"line_start":922,"line_end":922,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":35021,"byte_end":35030,"line_start":923,"line_end":923,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1925},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":35288,"byte_end":35294,"line_start":934,"line_end":934,"column_start":8,"column_end":14},"name":"minute","qualname":"::Timelike::minute","value":"pub fn minute(&Self) -> u32","parent":{"krate":0,"index":1922},"children":[],"decl_id":null,"docs":" Returns the minute number from 0 to 59.\n","sig":null,"attributes":[{"value":"/ Returns the minute number from 0 to 59.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":35237,"byte_end":35280,"line_start":933,"line_end":933,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1926},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":35366,"byte_end":35372,"line_start":937,"line_end":937,"column_start":8,"column_end":14},"name":"second","qualname":"::Timelike::second","value":"pub fn second(&Self) -> u32","parent":{"krate":0,"index":1922},"children":[],"decl_id":null,"docs":" Returns the second number from 0 to 59.\n","sig":null,"attributes":[{"value":"/ Returns the second number from 0 to 59.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":35315,"byte_end":35358,"line_start":936,"line_end":936,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1927},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":35615,"byte_end":35625,"line_start":942,"line_end":942,"column_start":8,"column_end":18},"name":"nanosecond","qualname":"::Timelike::nanosecond","value":"pub fn nanosecond(&Self) -> u32","parent":{"krate":0,"index":1922},"children":[],"decl_id":null,"docs":" Returns the number of nanoseconds since the whole non-leap second.\n The range from 1,000,000,000 to 1,999,999,999 represents\n the [leap second](./naive/struct.NaiveTime.html#leap-second-handling).\n","sig":null,"attributes":[{"value":"/ Returns the number of nanoseconds since the whole non-leap second.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":35393,"byte_end":35463,"line_start":939,"line_end":939,"column_start":5,"column_end":75}},{"value":"/ The range from 1,000,000,000 to 1,999,999,999 represents","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":35468,"byte_end":35528,"line_start":940,"line_end":940,"column_start":5,"column_end":65}},{"value":"/ the [leap second](./naive/struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":35533,"byte_end":35607,"line_start":941,"line_end":941,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1928},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":35779,"byte_end":35788,"line_start":947,"line_end":947,"column_start":8,"column_end":17},"name":"with_hour","qualname":"::Timelike::with_hour","value":"pub fn with_hour(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":1922},"children":[],"decl_id":null,"docs":" Makes a new value with the hour number changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the hour number changed.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":35646,"byte_end":35697,"line_start":944,"line_end":944,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":35702,"byte_end":35705,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":35710,"byte_end":35771,"line_start":946,"line_end":946,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1929},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":35964,"byte_end":35975,"line_start":952,"line_end":952,"column_start":8,"column_end":19},"name":"with_minute","qualname":"::Timelike::with_minute","value":"pub fn with_minute(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":1922},"children":[],"decl_id":null,"docs":" Makes a new value with the minute number changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the minute number changed.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":35829,"byte_end":35882,"line_start":949,"line_end":949,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":35887,"byte_end":35890,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":35895,"byte_end":35956,"line_start":951,"line_end":951,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1930},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":36262,"byte_end":36273,"line_start":959,"line_end":959,"column_start":8,"column_end":19},"name":"with_second","qualname":"::Timelike::with_second","value":"pub fn with_second(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":1922},"children":[],"decl_id":null,"docs":" Makes a new value with the second number changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the second number changed.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":36015,"byte_end":36068,"line_start":954,"line_end":954,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":36073,"byte_end":36076,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":36081,"byte_end":36142,"line_start":956,"line_end":956,"column_start":5,"column_end":66}},{"value":"/ As with the [`second`](#tymethod.second) method,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":36147,"byte_end":36199,"line_start":957,"line_end":957,"column_start":5,"column_end":57}},{"value":"/ the input range is restricted to 0 through 59.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":36204,"byte_end":36254,"line_start":958,"line_end":958,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1931},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":36606,"byte_end":36621,"line_start":966,"line_end":966,"column_start":8,"column_end":23},"name":"with_nanosecond","qualname":"::Timelike::with_nanosecond","value":"pub fn with_nanosecond(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":1922},"children":[],"decl_id":null,"docs":" Makes a new value with nanoseconds since the whole non-leap second changed.","sig":null,"attributes":[{"value":"/ Makes a new value with nanoseconds since the whole non-leap second changed.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":36313,"byte_end":36392,"line_start":961,"line_end":961,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":36397,"byte_end":36400,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":36405,"byte_end":36466,"line_start":963,"line_end":963,"column_start":5,"column_end":66}},{"value":"/ As with the [`nanosecond`](#tymethod.nanosecond) method,","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":36471,"byte_end":36531,"line_start":964,"line_end":964,"column_start":5,"column_end":65}},{"value":"/ the input range can exceed 1,000,000,000 for leap seconds.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":36536,"byte_end":36598,"line_start":965,"line_end":965,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1932},"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":36750,"byte_end":36775,"line_start":970,"line_end":970,"column_start":8,"column_end":33},"name":"num_seconds_from_midnight","qualname":"::Timelike::num_seconds_from_midnight","value":"pub fn num_seconds_from_midnight(&Self) -> u32","parent":{"krate":0,"index":1922},"children":[],"decl_id":null,"docs":" Returns the number of non-leap seconds past the last midnight.\n","sig":null,"attributes":[{"value":"/ Returns the number of non-leap seconds past the last midnight.","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":36662,"byte_end":36728,"line_start":968,"line_end":968,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":36733,"byte_end":36742,"line_start":969,"line_end":969,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":41014,"byte_end":41025,"line_start":41,"line_end":41,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":42206,"byte_end":42217,"line_start":76,"line_end":76,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":45433,"byte_end":45444,"line_start":169,"line_end":169,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":60796,"byte_end":60807,"line_start":27,"line_end":27,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":63364,"byte_end":63375,"line_start":101,"line_end":101,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":63927,"byte_end":63938,"line_start":117,"line_end":117,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":64007,"byte_end":64018,"line_start":121,"line_end":121,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":64512,"byte_end":64523,"line_start":135,"line_end":135,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":65272,"byte_end":65281,"line_start":153,"line_end":153,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":65469,"byte_end":65478,"line_start":162,"line_end":162,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":65667,"byte_end":65680,"line_start":171,"line_end":171,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":65876,"byte_end":65889,"line_start":180,"line_end":180,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":66100,"byte_end":66108,"line_start":189,"line_end":189,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":66320,"byte_end":66328,"line_start":198,"line_end":198,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":70207,"byte_end":70212,"line_start":83,"line_end":83,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":71053,"byte_end":71058,"line_start":107,"line_end":107,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":75286,"byte_end":75289,"line_start":36,"line_end":36,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":76298,"byte_end":76301,"line_start":60,"line_end":60,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":76785,"byte_end":76788,"line_start":76,"line_end":76,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":76872,"byte_end":76875,"line_start":80,"line_end":80,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":76979,"byte_end":76982,"line_start":84,"line_end":84,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/internals.rs","byte_start":83172,"byte_end":83181,"line_start":110,"line_end":110,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/internals.rs","byte_start":83958,"byte_end":83967,"line_start":143,"line_end":143,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/internals.rs","byte_start":92360,"byte_end":92362,"line_start":280,"line_end":280,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/internals.rs","byte_start":94396,"byte_end":94398,"line_start":365,"line_end":365,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/internals.rs","byte_start":94942,"byte_end":94945,"line_start":381,"line_end":381,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/internals.rs","byte_start":96818,"byte_end":96821,"line_start":462,"line_end":462,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":114640,"byte_end":114649,"line_start":125,"line_end":125,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":148205,"byte_end":148214,"line_start":963,"line_end":963,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":160546,"byte_end":160555,"line_start":1330,"line_end":1330,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":160774,"byte_end":160783,"line_start":1339,"line_end":1339,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":162194,"byte_end":162203,"line_start":1372,"line_end":1372,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":162422,"byte_end":162431,"line_start":1381,"line_end":1381,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":163688,"byte_end":163697,"line_start":1415,"line_end":1415,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":164686,"byte_end":164695,"line_start":1446,"line_end":1446,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":165950,"byte_end":165959,"line_start":1481,"line_end":1481,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":166549,"byte_end":166558,"line_start":1501,"line_end":1501,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195179,"byte_end":195186,"line_start":46,"line_end":46,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":197728,"byte_end":197735,"line_start":128,"line_end":128,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206444,"byte_end":206453,"line_start":180,"line_end":180,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":797},{"krate":0,"index":800},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":230593,"byte_end":230602,"line_start":779,"line_end":779,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":237816,"byte_end":237825,"line_start":985,"line_end":985,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":240832,"byte_end":240841,"line_start":1050,"line_end":1050,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":241022,"byte_end":241031,"line_start":1059,"line_end":1059,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":243630,"byte_end":243639,"line_start":1120,"line_end":1120,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":243820,"byte_end":243829,"line_start":1129,"line_end":1129,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":246364,"byte_end":246373,"line_start":1187,"line_end":1187,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":247757,"byte_end":247766,"line_start":1224,"line_end":1224,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":249620,"byte_end":249629,"line_start":1274,"line_end":1274,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":250389,"byte_end":250398,"line_start":1297,"line_end":1297,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":834},{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271083,"byte_end":271096,"line_start":56,"line_end":56,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":297396,"byte_end":297409,"line_start":692,"line_end":692,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":308465,"byte_end":308478,"line_start":1010,"line_end":1010,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":977},{"krate":0,"index":979},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":314739,"byte_end":314752,"line_start":1183,"line_end":1183,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":317367,"byte_end":317380,"line_start":1245,"line_end":1245,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":317611,"byte_end":317624,"line_start":1254,"line_end":1254,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":320131,"byte_end":320144,"line_start":1315,"line_end":1315,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":992},{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":320375,"byte_end":320388,"line_start":1324,"line_end":1324,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":322326,"byte_end":322339,"line_start":1377,"line_end":1377,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":323543,"byte_end":323556,"line_start":1413,"line_end":1413,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":324648,"byte_end":324661,"line_start":1444,"line_end":1444,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":325399,"byte_end":325412,"line_start":1466,"line_end":1466,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":364217,"byte_end":364221,"line_start":52,"line_end":52,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1119},{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":372339,"byte_end":372343,"line_start":256,"line_end":256,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1127},{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":373052,"byte_end":373056,"line_start":273,"line_end":273,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1145},{"krate":0,"index":1147},{"krate":0,"index":1149},{"krate":0,"index":1151},{"krate":0,"index":1153},{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":374747,"byte_end":374751,"line_start":321,"line_end":321,"column_start":29,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":374831,"byte_end":374835,"line_start":322,"line_end":322,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":374940,"byte_end":374944,"line_start":324,"line_end":324,"column_start":60,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":375052,"byte_end":375056,"line_start":328,"line_end":328,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":375100,"byte_end":375104,"line_start":331,"line_end":331,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":375256,"byte_end":375260,"line_start":337,"line_end":337,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":375383,"byte_end":375387,"line_start":341,"line_end":341,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":375514,"byte_end":375518,"line_start":345,"line_end":345,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1179},{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":375742,"byte_end":375746,"line_start":354,"line_end":354,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1183},{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":375967,"byte_end":375971,"line_start":363,"line_end":363,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1187},{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":376156,"byte_end":376160,"line_start":372,"line_end":372,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":376334,"byte_end":376338,"line_start":378,"line_end":378,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":378602,"byte_end":378610,"line_start":63,"line_end":63,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":384730,"byte_end":384738,"line_start":241,"line_end":241,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":385242,"byte_end":385250,"line_start":253,"line_end":253,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":385660,"byte_end":385668,"line_start":263,"line_end":263,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":386118,"byte_end":386126,"line_start":275,"line_end":275,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":386572,"byte_end":386580,"line_start":287,"line_end":287,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":387016,"byte_end":387024,"line_start":299,"line_end":299,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":387743,"byte_end":387751,"line_start":315,"line_end":315,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1335},{"krate":0,"index":1337},{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":390066,"byte_end":390074,"line_start":364,"line_end":364,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1342},{"krate":0,"index":1344},{"krate":0,"index":1346},{"krate":0,"index":1353},{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":394315,"byte_end":394323,"line_start":468,"line_end":468,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1371},{"krate":0,"index":1373},{"krate":0,"index":1375},{"krate":0,"index":1377},{"krate":0,"index":1379},{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":396036,"byte_end":396044,"line_start":515,"line_end":515,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1395}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":397020,"byte_end":397028,"line_start":543,"line_end":543,"column_start":29,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":397108,"byte_end":397116,"line_start":544,"line_end":544,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":397225,"byte_end":397233,"line_start":546,"line_end":546,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1404}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":397353,"byte_end":397361,"line_start":550,"line_end":550,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":397405,"byte_end":397413,"line_start":553,"line_end":553,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1409}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":397577,"byte_end":397585,"line_start":559,"line_end":559,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":397720,"byte_end":397728,"line_start":563,"line_end":563,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1415}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":397859,"byte_end":397867,"line_start":567,"line_end":567,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1419},{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":398103,"byte_end":398111,"line_start":576,"line_end":576,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1423},{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":398348,"byte_end":398356,"line_start":585,"line_end":585,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1427},{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":398545,"byte_end":398553,"line_start":594,"line_end":594,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":398727,"byte_end":398735,"line_start":600,"line_end":600,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":398923,"byte_end":398931,"line_start":606,"line_end":606,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1436},{"krate":0,"index":1437}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":400131,"byte_end":400139,"line_start":633,"line_end":633,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1440},{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":400363,"byte_end":400371,"line_start":642,"line_end":642,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":400581,"byte_end":400589,"line_start":650,"line_end":650,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1448}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":401224,"byte_end":401232,"line_start":669,"line_end":669,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1450}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":401396,"byte_end":401406,"line_start":675,"line_end":675,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1453}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":448530,"byte_end":448545,"line_start":121,"line_end":121,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":448635,"byte_end":448650,"line_start":127,"line_end":127,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":448756,"byte_end":448771,"line_start":133,"line_end":133,"column_start":13,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":448797,"byte_end":448812,"line_start":136,"line_end":136,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1518}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":455818,"byte_end":455828,"line_start":308,"line_end":308,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":455948,"byte_end":455958,"line_start":314,"line_end":314,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":476999,"byte_end":477005,"line_start":124,"line_end":124,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1657}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":477501,"byte_end":477507,"line_start":137,"line_end":137,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/strftime.rs","byte_start":587816,"byte_end":587829,"line_start":172,"line_end":172,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1839}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/strftime.rs","byte_start":588148,"byte_end":588161,"line_start":182,"line_end":182,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1845},{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":470487,"byte_end":470500,"line_start":613,"line_end":613,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1856},{"krate":0,"index":1857}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":471268,"byte_end":471281,"line_start":628,"line_end":628,"column_start":63,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":1862}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":472170,"byte_end":472177,"line_start":660,"line_end":660,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1864},{"krate":0,"index":1865}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":603938,"byte_end":603939,"line_start":41,"line_end":41,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1885},{"krate":0,"index":1886}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22553,"byte_end":22560,"line_start":538,"line_end":538,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1893},{"krate":0,"index":1894}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":26816,"byte_end":26823,"line_start":651,"line_end":651,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1896},{"krate":0,"index":1897}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":27761,"byte_end":27778,"line_start":689,"line_end":689,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1902}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":20315,"byte_end":20321,"line_start":460,"line_end":460,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":134}},{"kind":"Mod","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":21487,"byte_end":21493,"line_start":498,"line_end":498,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1457}},{"kind":"Mod","span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":469915,"byte_end":469923,"line_start":597,"line_end":597,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1817}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":41014,"byte_end":41025,"line_start":41,"line_end":41,"column_start":9,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":42206,"byte_end":42217,"line_start":76,"line_end":76,"column_start":20,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":45433,"byte_end":45444,"line_start":169,"line_end":169,"column_start":21,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":45906,"byte_end":45911,"line_start":183,"line_end":183,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":189}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":45914,"byte_end":45919,"line_start":183,"line_end":183,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2474},"to":{"krate":0,"index":189}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":45927,"byte_end":45932,"line_start":183,"line_end":183,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":8894},"to":{"krate":0,"index":189}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46222,"byte_end":46227,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":191}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/mod.rs","byte_start":46230,"byte_end":46235,"line_start":192,"line_end":192,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2474},"to":{"krate":0,"index":191}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":60796,"byte_end":60807,"line_start":27,"line_end":27,"column_start":6,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":63364,"byte_end":63375,"line_start":101,"line_end":101,"column_start":19,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1967},"to":{"krate":0,"index":191}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":63927,"byte_end":63938,"line_start":117,"line_end":117,"column_start":17,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1967},"to":{"krate":0,"index":189}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":64007,"byte_end":64018,"line_start":121,"line_end":121,"column_start":21,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1967},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":64512,"byte_end":64523,"line_start":135,"line_end":135,"column_start":23,"column_end":34},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1967},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":65272,"byte_end":65281,"line_start":153,"line_end":153,"column_start":27,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2072},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":65469,"byte_end":65478,"line_start":162,"line_end":162,"column_start":27,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2072},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":65667,"byte_end":65680,"line_start":171,"line_end":171,"column_start":27,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2089},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":65876,"byte_end":65889,"line_start":180,"line_end":180,"column_start":27,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2089},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":66100,"byte_end":66108,"line_start":189,"line_end":189,"column_start":41,"column_end":49},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/fixed.rs","byte_start":66320,"byte_end":66328,"line_start":198,"line_end":198,"column_start":41,"column_end":49},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":70207,"byte_end":70212,"line_start":83,"line_end":83,"column_start":6,"column_end":11},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/local.rs","byte_start":71053,"byte_end":71058,"line_start":107,"line_end":107,"column_start":19,"column_end":24},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1982},"to":{"krate":0,"index":191}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":75286,"byte_end":75289,"line_start":36,"line_end":36,"column_start":6,"column_end":9},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1989},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":76298,"byte_end":76301,"line_start":60,"line_end":60,"column_start":19,"column_end":22},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1989},"to":{"krate":0,"index":191}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":76785,"byte_end":76788,"line_start":76,"line_end":76,"column_start":17,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1989},"to":{"krate":0,"index":189}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":76872,"byte_end":76875,"line_start":80,"line_end":80,"column_start":21,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1989},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/offset/utc.rs","byte_start":76979,"byte_end":76982,"line_start":84,"line_end":84,"column_start":23,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1989},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/internals.rs","byte_start":83172,"byte_end":83181,"line_start":110,"line_end":110,"column_start":6,"column_end":15},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/internals.rs","byte_start":83958,"byte_end":83967,"line_start":143,"line_end":143,"column_start":21,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2000},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/internals.rs","byte_start":92360,"byte_end":92362,"line_start":280,"line_end":280,"column_start":6,"column_end":8},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/internals.rs","byte_start":94396,"byte_end":94398,"line_start":365,"line_end":365,"column_start":21,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2013},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/internals.rs","byte_start":94942,"byte_end":94945,"line_start":381,"line_end":381,"column_start":6,"column_end":9},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/internals.rs","byte_start":96818,"byte_end":96821,"line_start":462,"line_end":462,"column_start":21,"column_end":24},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2025},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":114640,"byte_end":114649,"line_start":125,"line_end":125,"column_start":6,"column_end":15},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":148205,"byte_end":148214,"line_start":963,"line_end":963,"column_start":19,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2037},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":160546,"byte_end":160555,"line_start":1330,"line_end":1330,"column_start":27,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2037},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":160774,"byte_end":160783,"line_start":1339,"line_end":1339,"column_start":33,"column_end":42},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2037},"to":{"krate":2,"index":2951}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":162194,"byte_end":162203,"line_start":1372,"line_end":1372,"column_start":27,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2037},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":162422,"byte_end":162431,"line_start":1381,"line_end":1381,"column_start":33,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2037},"to":{"krate":2,"index":2955}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":163688,"byte_end":163697,"line_start":1415,"line_end":1415,"column_start":25,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2037},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":164686,"byte_end":164695,"line_start":1446,"line_end":1446,"column_start":21,"column_end":30},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2037},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":165950,"byte_end":165959,"line_start":1481,"line_end":1481,"column_start":23,"column_end":32},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2037},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/date.rs","byte_start":166549,"byte_end":166558,"line_start":1501,"line_end":1501,"column_start":23,"column_end":32},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2037},"to":{"krate":2,"index":11377}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":195179,"byte_end":195186,"line_start":46,"line_end":46,"column_start":6,"column_end":13},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/isoweek.rs","byte_start":197728,"byte_end":197735,"line_start":128,"line_end":128,"column_start":21,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2056},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":206444,"byte_end":206453,"line_start":180,"line_end":180,"column_start":6,"column_end":15},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":230593,"byte_end":230602,"line_start":779,"line_end":779,"column_start":19,"column_end":28},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2072},"to":{"krate":0,"index":1922}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":237816,"byte_end":237825,"line_start":985,"line_end":985,"column_start":21,"column_end":30},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2072},"to":{"krate":2,"index":9100}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":240832,"byte_end":240841,"line_start":1050,"line_end":1050,"column_start":27,"column_end":36},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2072},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":241022,"byte_end":241031,"line_start":1059,"line_end":1059,"column_start":33,"column_end":42},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2072},"to":{"krate":2,"index":2951}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":243630,"byte_end":243639,"line_start":1120,"line_end":1120,"column_start":27,"column_end":36},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2072},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":243820,"byte_end":243829,"line_start":1129,"line_end":1129,"column_start":33,"column_end":42},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2072},"to":{"krate":2,"index":2955}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":246364,"byte_end":246373,"line_start":1187,"line_end":1187,"column_start":25,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2072},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":247757,"byte_end":247766,"line_start":1224,"line_end":1224,"column_start":21,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2072},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":249620,"byte_end":249629,"line_start":1274,"line_end":1274,"column_start":23,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2072},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/time.rs","byte_start":250389,"byte_end":250398,"line_start":1297,"line_end":1297,"column_start":23,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2072},"to":{"krate":2,"index":11377}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":271083,"byte_end":271096,"line_start":56,"line_end":56,"column_start":6,"column_end":19},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":297396,"byte_end":297409,"line_start":692,"line_end":692,"column_start":19,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2089},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":308465,"byte_end":308478,"line_start":1010,"line_end":1010,"column_start":19,"column_end":32},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2089},"to":{"krate":0,"index":1922}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":314739,"byte_end":314752,"line_start":1183,"line_end":1183,"column_start":21,"column_end":34},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2089},"to":{"krate":2,"index":9100}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":317367,"byte_end":317380,"line_start":1245,"line_end":1245,"column_start":27,"column_end":40},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2089},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":317611,"byte_end":317624,"line_start":1254,"line_end":1254,"column_start":33,"column_end":46},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2089},"to":{"krate":2,"index":2951}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":320131,"byte_end":320144,"line_start":1315,"line_end":1315,"column_start":27,"column_end":40},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2089},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":320375,"byte_end":320388,"line_start":1324,"line_end":1324,"column_start":33,"column_end":46},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2089},"to":{"krate":2,"index":2955}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":322326,"byte_end":322339,"line_start":1377,"line_end":1377,"column_start":29,"column_end":42},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2089},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":323543,"byte_end":323556,"line_start":1413,"line_end":1413,"column_start":21,"column_end":34},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2089},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":324648,"byte_end":324661,"line_start":1444,"line_end":1444,"column_start":23,"column_end":36},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2089},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/naive/datetime.rs","byte_start":325399,"byte_end":325412,"line_start":1466,"line_end":1466,"column_start":23,"column_end":36},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2089},"to":{"krate":2,"index":11377}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":364217,"byte_end":364221,"line_start":52,"line_end":52,"column_start":20,"column_end":24},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":372339,"byte_end":372343,"line_start":256,"line_end":256,"column_start":20,"column_end":24},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":373052,"byte_end":373056,"line_start":273,"line_end":273,"column_start":33,"column_end":37},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2106},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":374747,"byte_end":374751,"line_start":321,"line_end":321,"column_start":29,"column_end":33},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2106},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":374831,"byte_end":374835,"line_start":322,"line_end":322,"column_start":36,"column_end":40},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2106},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":374940,"byte_end":374944,"line_start":324,"line_end":324,"column_start":60,"column_end":64},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2106},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":375052,"byte_end":375056,"line_start":328,"line_end":328,"column_start":27,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2106},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":375100,"byte_end":375104,"line_start":331,"line_end":331,"column_start":35,"column_end":39},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2106},"to":{"krate":2,"index":2551}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":375256,"byte_end":375260,"line_start":337,"line_end":337,"column_start":28,"column_end":32},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2106},"to":{"krate":2,"index":2540}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":375383,"byte_end":375387,"line_start":341,"line_end":341,"column_start":35,"column_end":39},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2106},"to":{"krate":2,"index":9100}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":375514,"byte_end":375518,"line_start":345,"line_end":345,"column_start":41,"column_end":45},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2106},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":375742,"byte_end":375746,"line_start":354,"line_end":354,"column_start":41,"column_end":45},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2106},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":375967,"byte_end":375971,"line_start":363,"line_end":363,"column_start":38,"column_end":42},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2106},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":376156,"byte_end":376160,"line_start":372,"line_end":372,"column_start":35,"column_end":39},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2106},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/date.rs","byte_start":376334,"byte_end":376338,"line_start":378,"line_end":378,"column_start":37,"column_end":41},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2106},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":378602,"byte_end":378610,"line_start":63,"line_end":63,"column_start":20,"column_end":28},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":384730,"byte_end":384738,"line_start":241,"line_end":241,"column_start":30,"column_end":38},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":385242,"byte_end":385250,"line_start":253,"line_end":253,"column_start":30,"column_end":38},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":385660,"byte_end":385668,"line_start":263,"line_end":263,"column_start":38,"column_end":46},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":386118,"byte_end":386126,"line_start":275,"line_end":275,"column_start":38,"column_end":46},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":386572,"byte_end":386580,"line_start":287,"line_end":287,"column_start":32,"column_end":40},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":387016,"byte_end":387024,"line_start":299,"line_end":299,"column_start":32,"column_end":40},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":387743,"byte_end":387751,"line_start":315,"line_end":315,"column_start":6,"column_end":14},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":390066,"byte_end":390074,"line_start":364,"line_end":364,"column_start":20,"column_end":28},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":394315,"byte_end":394323,"line_start":468,"line_end":468,"column_start":33,"column_end":41},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2137},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":396036,"byte_end":396044,"line_start":515,"line_end":515,"column_start":33,"column_end":41},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2137},"to":{"krate":0,"index":1922}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":397020,"byte_end":397028,"line_start":543,"line_end":543,"column_start":29,"column_end":37},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":397108,"byte_end":397116,"line_start":544,"line_end":544,"column_start":36,"column_end":44},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":397225,"byte_end":397233,"line_start":546,"line_end":546,"column_start":64,"column_end":72},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":397353,"byte_end":397361,"line_start":550,"line_end":550,"column_start":27,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":397405,"byte_end":397413,"line_start":553,"line_end":553,"column_start":35,"column_end":43},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":2551}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":397577,"byte_end":397585,"line_start":559,"line_end":559,"column_start":28,"column_end":36},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":2540}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":397720,"byte_end":397728,"line_start":563,"line_end":563,"column_start":35,"column_end":43},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":9100}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":397859,"byte_end":397867,"line_start":567,"line_end":567,"column_start":41,"column_end":49},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":398103,"byte_end":398111,"line_start":576,"line_end":576,"column_start":41,"column_end":49},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":398348,"byte_end":398356,"line_start":585,"line_end":585,"column_start":42,"column_end":50},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":398545,"byte_end":398553,"line_start":594,"line_end":594,"column_start":35,"column_end":43},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":398727,"byte_end":398735,"line_start":600,"line_end":600,"column_start":37,"column_end":45},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":398923,"byte_end":398931,"line_start":606,"line_end":606,"column_start":23,"column_end":31},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":11377}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":400131,"byte_end":400139,"line_start":633,"line_end":633,"column_start":23,"column_end":31},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":11377}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":400363,"byte_end":400371,"line_start":642,"line_end":642,"column_start":23,"column_end":31},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":11377}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":400581,"byte_end":400589,"line_start":650,"line_end":650,"column_start":27,"column_end":35},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":401224,"byte_end":401232,"line_start":669,"line_end":669,"column_start":27,"column_end":35},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/datetime.rs","byte_start":401396,"byte_end":401406,"line_start":675,"line_end":675,"column_start":43,"column_end":53},"kind":{"Impl":{"id":105}},"from":{"krate":1,"index":11340},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":448530,"byte_end":448545,"line_start":121,"line_end":121,"column_start":16,"column_end":31},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1510},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":448635,"byte_end":448650,"line_start":127,"line_end":127,"column_start":20,"column_end":35},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1510},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":448756,"byte_end":448771,"line_start":133,"line_end":133,"column_start":13,"column_end":28},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1510},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":448797,"byte_end":448812,"line_start":136,"line_end":136,"column_start":21,"column_end":36},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1510},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":455818,"byte_end":455828,"line_start":308,"line_end":308,"column_start":23,"column_end":33},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2347},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":455948,"byte_end":455958,"line_start":314,"line_end":314,"column_start":16,"column_end":26},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2347},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":476999,"byte_end":477005,"line_start":124,"line_end":124,"column_start":18,"column_end":24},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2388},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/parsed.rs","byte_start":477501,"byte_end":477507,"line_start":137,"line_end":137,"column_start":6,"column_end":12},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/strftime.rs","byte_start":587816,"byte_end":587829,"line_start":172,"line_end":172,"column_start":10,"column_end":23},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/strftime.rs","byte_start":588148,"byte_end":588161,"line_start":182,"line_end":182,"column_start":23,"column_end":36},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2421},"to":{"krate":2,"index":7317}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":470487,"byte_end":470500,"line_start":613,"line_end":613,"column_start":46,"column_end":59},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":471268,"byte_end":471281,"line_start":628,"line_end":628,"column_start":63,"column_end":76},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2440},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/format/mod.rs","byte_start":472170,"byte_end":472177,"line_start":660,"line_end":660,"column_start":18,"column_end":25},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2449},"to":{"krate":2,"index":11377}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/round.rs","byte_start":603938,"byte_end":603939,"line_start":41,"line_end":41,"column_start":25,"column_end":26},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1884},"to":{"krate":0,"index":1880}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":22553,"byte_end":22560,"line_start":538,"line_end":538,"column_start":6,"column_end":13},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":26816,"byte_end":26823,"line_start":651,"line_end":651,"column_start":36,"column_end":43},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2449},"to":{"krate":20,"index":305}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":27761,"byte_end":27778,"line_start":689,"line_end":689,"column_start":21,"column_end":38},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2485},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":30847,"byte_end":30852,"line_start":804,"line_end":804,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/padawan_e15/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.9/src/lib.rs","byte_start":34822,"byte_end":34827,"line_start":917,"line_end":917,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":1922}}]}